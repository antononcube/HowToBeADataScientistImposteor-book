(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    620644,      12251]
NotebookOptionsPosition[    607779,      12004]
NotebookOutlinePosition[    608384,      12025]
CellTagsIndexPosition[    608341,      12022]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Shock & Awe aids", "Title",
 CellChangeTimes->{{3.77927106931218*^9, 3.779271127418014*^9}, {
  3.779271193052331*^9, 
  3.779271202411439*^9}},ExpressionUUID->"5797ce62-ac0a-4bce-a8c8-\
035a556d30d0"],

Cell["\<\
\[OpenCurlyDoubleQuote]How to be a Data Scientist Impostor?\
\[CloseCurlyDoubleQuote] presentation at OMLDS 2019-10-5  \
\>", "Subtitle",
 CellChangeTimes->{{3.779271107560701*^9, 3.779271150648726*^9}, {
  3.779271314137027*^9, 
  3.7792713205497227`*^9}},ExpressionUUID->"8ceaa500-eff5-4929-8231-\
bf52074b76f6"],

Cell["\<\
Anton Antonov
October 2019\
\>", "Text",
 CellChangeTimes->{{3.779271301707003*^9, 
  3.779271311583251*^9}},ExpressionUUID->"85fdad81-3619-4d6f-9092-\
877f0fae4160"],

Cell["Image restyling", "Section",
 CellChangeTimes->{{3.779271205898781*^9, 
  3.779271210702825*^9}},ExpressionUUID->"6c5973b0-827d-447f-94e3-\
90a5a04da201"],

Cell[CellGroupData[{

Cell["Finding textual answers", "Section",
 CellChangeTimes->{{3.779271219602272*^9, 
  3.779271252350912*^9}},ExpressionUUID->"a5ad6088-65f2-4330-8c33-\
5844258923d6"],

Cell["Here is a generic example.", "Text",
 CellChangeTimes->{{3.775896912992495*^9, 3.775896919101025*^9}, {
  3.775896994544684*^9, 
  3.775896994791665*^9}},ExpressionUUID->"79742ce9-5a1b-4153-a2d3-\
a248cbc6e51f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindTextualAnswer", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<Paris is the capital and most populous city of France, with a 2015 \
population of 2,229,621.\>\"", ",", "\[IndentingNewLine]", 
   "\"\<How many people live in Paris?\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.775897004974928*^9, 3.775897006897648*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3ce6eeca-2794-4329-9fca-350431bfc9a4"],

Cell[BoxData["\<\"2,229,621\"\>"], "Output",
 CellChangeTimes->{
  3.779279663225429*^9, {3.7792950639604263`*^9, 3.779295077614812*^9}, 
   3.779631690356823*^9, 3.7796317607310667`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"b04fd774-8f7f-41f2-8fae-e144bc6e8a98"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Answers from Wikipedia articles", "Subsection",
 CellChangeTimes->{{3.775897629517167*^9, 
  3.775897649778378*^9}},ExpressionUUID->"b4c90ed5-4f53-48b9-abcd-\
e735075eb75d"],

Cell["Here is a more complicated example with Wikipedia data.", "Text",
 CellChangeTimes->{{3.775896975903225*^9, 
  3.7758969924632807`*^9}},ExpressionUUID->"3ea88d40-431d-4fda-a514-\
c1052e7017c3"],

Cell[CellGroupData[{

Cell["Orlando", "Subsubsection",
 CellChangeTimes->{{3.779282536041662*^9, 3.779282537796196*^9}, 
   3.779295198284787*^9, 
   3.779631758320265*^9},ExpressionUUID->"2ca9c30c-342b-46eb-83f9-\
2debc69ed8db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"question", "=", "\"\<Who is the current mayor of Orlando?\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775897015966908*^9, 3.775897030241881*^9}, {
  3.775897522844677*^9, 3.7758975489206047`*^9}, {3.7792796726464767`*^9, 
  3.7792796746597977`*^9}},
 CellLabel->"In[2]:=",
 CellID->95604248,ExpressionUUID->"ee37b404-3e53-4063-ab30-910ca7d1b570"],

Cell[BoxData[
 RowBox[{
  RowBox[{"articles", "=", 
   RowBox[{"WikipediaData", "/@", 
    RowBox[{"WikipediaSearch", "[", 
     RowBox[{
      RowBox[{"\"\<Content\>\"", "\[Rule]", "question"}], ",", 
      RowBox[{"\"\<MaxItems\>\"", "\[Rule]", "6"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775897429996572*^9, 3.775897442954723*^9}, {
  3.775897554165938*^9, 3.775897560317197*^9}},
 CellLabel->"In[3]:=",
 CellID->1968830429,ExpressionUUID->"c7333c64-36a1-4c28-ad9a-0dd67e38d66e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"FindTextualAnswer", "[", 
   RowBox[{"articles", ",", "question", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", "\"\<HighlightedSentence\>\""}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.77589708434614*^9, 3.775897088540221*^9}, 
   3.775897258994542*^9},
 CellLabel->"In[4]:=",
 CellID->1991742940,ExpressionUUID->"66dd3585-833a-4947-b661-4238dab7a609"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "0.9211650886571418`", 
     TemplateBox[{
      "\"The current mayor is \"",
       TemplateBox[{"\"Buddy Dyer\"", FrameStyle -> None}, "Highlighted"],
       "\", who was first elected in a special election in February 2003.\""},
      
      "RowDefault"]},
    {"2", "0.823614586355825`", 
     TemplateBox[{
      "\"In his years as mayor of Orlando, \"",
       TemplateBox[{"\"Buddy Dyer\"", FrameStyle -> None}, "Highlighted"],
       "\" claims progress in realizing his vision for Orlando as a \
\\\"world-class city.\\\"\""},
      "RowDefault"]},
    {"3", "0.8162009288805092`", 
     TemplateBox[{
      "\"The first mayor, \"",
       TemplateBox[{"\"William Jackson Brack\"", FrameStyle -> None}, 
        "Highlighted"],"\", took office in 1875.\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.77589706983304*^9, 3.775897099332088*^9}, 
   3.775897269860146*^9, 3.7758974496474733`*^9, 3.775897536955092*^9, 
   3.775897570888405*^9, 3.7770369390160913`*^9, 3.779279685909542*^9, 
   3.779295121437448*^9, 3.779631771186057*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"145adae3-c1e1-4396-ba21-3cf9cfc5480e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"FindTextualAnswer", "[", 
   RowBox[{
   "articles", ",", "\"\<What is Orlando's population\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", "\"\<HighlightedSentence\>\""}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.77589708434614*^9, 3.775897088540221*^9}, {
  3.775897258994542*^9, 3.77589730331796*^9}, {3.779279681544527*^9, 
  3.779279683697583*^9}},
 CellLabel->"In[5]:=",
 CellID->1465539932,ExpressionUUID->"da1bc5cf-529f-4163-bd6f-283f64974884"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "0.9285796256035908`", 
     TemplateBox[{
      "\"Located in Central Florida, it is the center of the Orlando \
metropolitan area, which had a population of \"",
       TemplateBox[{"\"2,509,831\"", FrameStyle -> None}, "Highlighted"],
       "\", according to U.S. Census Bureau figures released in July 2017.\""},
      "RowDefault"]},
    {"2", "0.7501532494317699`", 
     TemplateBox[{
      "\"The area encompasses four counties (Orange, Osceola, Seminole and \
Lake), and is the 26th-largest metro area in the United States with a 2010 \
Census-estimated population of 2,134,411.In 2000, the population of Orlando's \
urban area was \"",
       TemplateBox[{"\"1,157,431\"", FrameStyle -> None}, "Highlighted"],
       "\", making it the third-largest in Florida and the 35th-largest in \
the United States.\""},
      "RowDefault"]},
    {"3", "0.7299930930412863`", 
     TemplateBox[{
      "\"As of 2009, the estimated urban area population of Orlando is \"",
       TemplateBox[{"\"1,377,342\"", FrameStyle -> None}, "Highlighted"],
       "\".\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.775897315861471*^9, 3.775897453638957*^9, {3.7758975472848997`*^9, 
   3.775897575003007*^9}, 3.779279690114955*^9, 3.779631775553101*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"116aab91-58da-46f0-97e0-2dcfa0686f8c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WDW", "Subsubsection",
 CellChangeTimes->{{3.779282542318749*^9, 
  3.779282544591392*^9}},ExpressionUUID->"a7f9b76f-b1be-435e-bee3-\
15d7725e3350"],

Cell[BoxData[
 RowBox[{
  RowBox[{"question", "=", "\"\<How big is World Disney World?\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775897015966908*^9, 3.775897030241881*^9}, {
  3.775897522844677*^9, 3.7758975489206047`*^9}, {3.7792796726464767`*^9, 
  3.7792796746597977`*^9}, {3.779282553492441*^9, 3.779282564436812*^9}},
 CellLabel->"In[6]:=",
 CellID->1190802499,ExpressionUUID->"8ce1fc56-5c03-43a2-8c0b-0ce2c7e25e6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"articles", "=", 
   RowBox[{"WikipediaData", "/@", 
    RowBox[{"WikipediaSearch", "[", 
     RowBox[{
      RowBox[{"\"\<Content\>\"", "\[Rule]", "question"}], ",", 
      RowBox[{"\"\<MaxItems\>\"", "\[Rule]", "6"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775897429996572*^9, 3.775897442954723*^9}, {
  3.775897554165938*^9, 3.775897560317197*^9}},
 CellLabel->"In[7]:=",
 CellID->1177888957,ExpressionUUID->"7ad86b48-6993-4e8e-902b-c2dc23db5729"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"FindTextualAnswer", "[", 
   RowBox[{"articles", ",", "question", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", "\"\<HighlightedSentence\>\""}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"0c35d4f9-2343-4e68-b60b-8be82ecfa5ec"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "0.7722936346828908`", 
     TemplateBox[{
      "\"The property, which covers nearly \"",
       TemplateBox[{"\"25,000 acres\"", FrameStyle -> None}, "Highlighted"],
       "\" (39 sq mi;\""},
      "RowDefault"]},
    {"2", "0.7322206143062108`", 
     TemplateBox[{
      "\"To avoid a burst of land speculation, Walt Disney World Company used \
various dummy corporations to acquire \"",
       TemplateBox[{"\"30,500 acres\"", FrameStyle -> None}, "Highlighted"],
       "\" (48 sq mi;\""},
      "RowDefault"]},
    {"3", "0.5847230626900065`", 
     TemplateBox[{
      "\"Walt Disney World requires an estimated \"",
       TemplateBox[{"\"1 billion kilowatt-hours\"", FrameStyle -> None}, 
        "Highlighted"],
       "\" (3.6 billion megajoules) of electricity annually, costing the \
company nearly $100 million in annual energy consumption.\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779282598939458*^9, 3.779631784515937*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"cf36e3b5-a0fd-4bf8-9cde-011af35e703c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"FindTextualAnswer", "[", 
   RowBox[{
   "articles", ",", "\"\<What is the average number of WDW guests?\>\"", ",", 
    "3", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", "\"\<HighlightedSentence\>\""}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.77589708434614*^9, 3.775897088540221*^9}, {
   3.775897258994542*^9, 3.77589730331796*^9}, {3.779279681544527*^9, 
   3.779279683697583*^9}, 3.779282523972068*^9, {3.7792826059298887`*^9, 
   3.779282635371647*^9}},
 CellLabel->"In[9]:=",
 CellID->10562690,ExpressionUUID->"b26fa427-3001-4632-b28b-e11a22518807"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "0.8238578807078593`", 
     TemplateBox[{
      "\"Another one named Bonzai was responsible for the creation of the \
city's \"",TemplateBox[{"\"250,000\"", FrameStyle -> None}, "Highlighted"],
       "\" trees, while a new rendering system called Hyperion offered new \
illumination possibilities, like light shining through a translucent object \
(e.g. Baymax's vinyl covering).\""},
      "RowDefault"]},
    {"2", "0.823022510089104`", 
     TemplateBox[{
      "\"The review aggregation website Rotten Tomatoes reports that 89% of \
critics gave the film a positive review based on 218 reviews, with an average \
score of \"",TemplateBox[{"\"7.34/10\"", FrameStyle -> None}, "Highlighted"],
       "\".\""},
      "RowDefault"]},
    {"3", "0.7933986972335076`", 
     TemplateBox[{
      "\"Today, Walt Disney World is the most visited vacation resort in the \
world, with average annual attendance of more than \"",
       TemplateBox[{"\"52 million\"", FrameStyle -> None}, "Highlighted"],
       "\".\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7792825731854153`*^9, {3.779282621520426*^9, 3.779282640815011*^9}, 
   3.779631788987083*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"6db58695-6fb5-42c7-9bc0-64c358897d64"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ClCon", "Section",
 CellChangeTimes->{{3.779280842200832*^9, 
  3.779280845485901*^9}},ExpressionUUID->"6927ea1f-1450-46aa-a5a7-\
fe1878e924c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", "dfTitanic", "]"}]], "Input",
 CellChangeTimes->{{3.779281171190096*^9, 3.779281172742876*^9}, 
   3.7792814897525263`*^9, {3.779281842298937*^9, 3.779281849128124*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ae2ca8d7-2cfa-4c7f-ad0b-f8f4fde1d466"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 id\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"1\"\>", "1"},
          {"\<\"10\"\>", "1"},
          {"\<\"100\"\>", "1"},
          {"\<\"1000\"\>", "1"},
          {"\<\"1001\"\>", "1"},
          {"\<\"1002\"\>", "1"},
          {"\<\"(Other)\"\>", "1303"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 passengerClass\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"3rd\"\>", "709"},
          {"\<\"1st\"\>", "323"},
          {"\<\"2nd\"\>", "277"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 passengerAge\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "1"}]},
          {"\<\"1st Qu\"\>", "10"},
          {"\<\"Median\"\>", "20"},
          {"\<\"Mean\"\>", "23.55003819709702`"},
          {"\<\"3rd Qu\"\>", "40"},
          {"\<\"Max\"\>", "80"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 passengerSex\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"male\"\>", "843"},
          {"\<\"female\"\>", "466"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 passengerSurvival\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"died\"\>", "809"},
          {"\<\"survived\"\>", "500"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.779281849452694*^9, 3.7796317923821583`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"9990c174-c925-47b0-aed4-9b11678627dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClConUnit", "[", "dfTitanic", "]"}], "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", 
   RowBox[{"ClConSplitData", "[", "0.7", "]"}], "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", "ClConEchoDataSummary", "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", 
   RowBox[{"ClConMakeClassifier", "[", "\"\<RandomForest\>\"", "]"}], 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   RowBox[{"ClConClassifierMeasurements", "[", "]"}], 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", "ClConEchoValue", 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   RowBox[{"ClConROCPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<FPR\>\"", ",", "\"\<TPR\>\""}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   "ClConAccuracyByVariableShuffling", "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", "ClConEchoValue"}], ";"}]], "Input",
 CellChangeTimes->{{3.7792808476731253`*^9, 3.779281069707897*^9}, {
  3.779281143605784*^9, 3.779281277020327*^9}, {3.779281485573732*^9, 
  3.779281513264475*^9}, {3.779281804129136*^9, 3.779281869668621*^9}, {
  3.779282016657156*^9, 3.779282024935553*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d34164e8-07c5-44ae-bb03-3fd17501129a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"summaries:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"trainingData\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 id\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"10\"\>", "1"},
              {"\<\"100\"\>", "1"},
              {"\<\"1000\"\>", "1"},
              {"\<\"1001\"\>", "1"},
              {"\<\"1002\"\>", "1"},
              {"\<\"1003\"\>", "1"},
              {"\<\"(Other)\"\>", "910"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 passengerClass\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"3rd\"\>", "501"},
              {"\<\"1st\"\>", "224"},
              {"\<\"2nd\"\>", "191"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 passengerAge\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", 
               RowBox[{"-", "1"}]},
              {"\<\"1st Qu\"\>", "10"},
              {"\<\"Median\"\>", "20"},
              {"\<\"Mean\"\>", "23.732532751091703`"},
              {"\<\"3rd Qu\"\>", "40"},
              {"\<\"Max\"\>", "70"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"4 passengerSex\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"male\"\>", "591"},
              {"\<\"female\"\>", "325"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"5 passengerSurvival\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"died\"\>", "566"},
              {"\<\"survived\"\>", "350"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}], ",", 
    RowBox[{"\<\"testData\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 id\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"1\"\>", "1"},
              {"\<\"1007\"\>", "1"},
              {"\<\"1013\"\>", "1"},
              {"\<\"1014\"\>", "1"},
              {"\<\"1018\"\>", "1"},
              {"\<\"1020\"\>", "1"},
              {"\<\"(Other)\"\>", "387"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 passengerClass\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"3rd\"\>", "208"},
              {"\<\"1st\"\>", "99"},
              {"\<\"2nd\"\>", "86"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 passengerAge\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", 
               RowBox[{"-", "1"}]},
              {"\<\"1st Qu\"\>", "0"},
              {"\<\"Median\"\>", "20"},
              {"\<\"Mean\"\>", "23.12468193384224`"},
              {"\<\"3rd Qu\"\>", "40"},
              {"\<\"Max\"\>", "80"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"4 passengerSex\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"male\"\>", "252"},
              {"\<\"female\"\>", "141"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"5 passengerSurvival\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"died\"\>", "243"},
              {"\<\"survived\"\>", "150"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.779631793539682*^9},ExpressionUUID->"f85d0eef-db0a-4f2a-a976-\
517b4ce43cff"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.7888040712468194`"}], ",", 
    RowBox[{"\<\"Precision\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"died\"\>", "\[Rule]", "0.803030303030303`"}], ",", 
       RowBox[{"\<\"survived\"\>", "\[Rule]", "0.7596899224806202`"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"\<\"Recall\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"died\"\>", "\[Rule]", "0.8724279835390947`"}], ",", 
       RowBox[{"\<\"survived\"\>", "\[Rule]", "0.6533333333333333`"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.779631794758061*^9},ExpressionUUID->"8e2ee0b3-3fae-4861-95c1-\
49733c35f6a8"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "ClassifierInformation","mlobs",
   "\"\\!\\(\\*RowBox[{\\\"ClassifierInformation\\\"}]\\) is obsolete. It has \
been superseeded by \\!\\(\\*RowBox[{\\\"Information\\\"}]\\) since version \
\\!\\(\\*RowBox[{\\\"12\\\"}]\\).\"",2,17,1,32607650837222354499,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.779294072955329*^9, 3.779631794822064*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"b760faf6-f835-4a14-945a-9944a76e402f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"ROC plot(s):\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"died\"\>", "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {Rational[49, 50], 1}, {
           Rational[23, 30], Rational[80, 81]}, {
           Rational[47, 75], Rational[239, 243]}, {
           Rational[13, 25], Rational[239, 243]}, {
           Rational[12, 25], Rational[238, 243]}, {
           Rational[71, 150], Rational[238, 243]}, {
           Rational[23, 50], Rational[238, 243]}, {
           Rational[11, 25], Rational[232, 243]}, {
           Rational[21, 50], Rational[229, 243]}, {
           Rational[2, 5], Rational[25, 27]}, {
           Rational[19, 50], Rational[73, 81]}, {
           Rational[26, 75], Rational[214, 243]}, {
           Rational[49, 150], Rational[208, 243]}, {
           Rational[23, 75], Rational[205, 243]}, {
           Rational[7, 25], Rational[203, 243]}, {
           Rational[7, 25], Rational[67, 81]}, {
           Rational[19, 75], Rational[197, 243]}, {
           Rational[7, 30], Rational[190, 243]}, {
           Rational[1, 5], Rational[178, 243]}, {
           Rational[1, 6], Rational[56, 81]}, {
           Rational[3, 25], Rational[40, 81]}, {
           Rational[11, 150], Rational[28, 81]}, {
           Rational[1, 30], Rational[23, 243]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {0.98, 1}, {
           0.7666666666666667, 0.9876543209876543}, {0.6266666666666667, 
           0.9835390946502057}, {0.52, 0.9835390946502057}, {0.48, 
           0.9794238683127572}, {0.47333333333333333`, 0.9794238683127572}, {
           0.46, 0.9794238683127572}, {0.44, 0.9547325102880658}, {0.42, 
           0.9423868312757202}, {0.4, 0.9259259259259259}, {0.38, 
           0.9012345679012346}, {0.3466666666666667, 0.8806584362139918}, {
           0.32666666666666666`, 0.8559670781893004}, {0.30666666666666664`, 
           0.8436213991769548}, {0.28, 0.8353909465020576}, {0.28, 
           0.8271604938271605}, {0.25333333333333335`, 0.8106995884773662}, {
           0.23333333333333334`, 0.7818930041152263}, {0.2, 
           0.7325102880658436}, {0.16666666666666666`, 0.691358024691358}, {
           0.12, 0.49382716049382713`}, {0.07333333333333333, 
           0.345679012345679}, {0.03333333333333333, 0.09465020576131687}, {0,
            0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {Rational[49, 50], 1}, {
           Rational[23, 30], Rational[80, 81]}, {
           Rational[47, 75], Rational[239, 243]}, {
           Rational[13, 25], Rational[239, 243]}, {
           Rational[12, 25], Rational[238, 243]}, {
           Rational[71, 150], Rational[238, 243]}, {
           Rational[23, 50], Rational[238, 243]}, {
           Rational[11, 25], Rational[232, 243]}, {
           Rational[21, 50], Rational[229, 243]}, {
           Rational[2, 5], Rational[25, 27]}, {
           Rational[19, 50], Rational[73, 81]}, {
           Rational[26, 75], Rational[214, 243]}, {
           Rational[49, 150], Rational[208, 243]}, {
           Rational[23, 75], Rational[205, 243]}, {
           Rational[7, 25], Rational[203, 243]}, {
           Rational[7, 25], Rational[67, 81]}, {
           Rational[19, 75], Rational[197, 243]}, {
           Rational[7, 30], Rational[190, 243]}, {
           Rational[1, 5], Rational[178, 243]}, {
           Rational[1, 6], Rational[56, 81]}, {
           Rational[3, 25], Rational[40, 81]}, {
           Rational[11, 150], Rational[28, 81]}, {
           Rational[1, 30], Rational[23, 243]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {0.98, 1}, {
           0.7666666666666667, 0.9876543209876543}, {0.6266666666666667, 
           0.9835390946502057}, {0.52, 0.9835390946502057}, {0.48, 
           0.9794238683127572}, {0.47333333333333333`, 0.9794238683127572}, {
           0.46, 0.9794238683127572}, {0.44, 0.9547325102880658}, {0.42, 
           0.9423868312757202}, {0.4, 0.9259259259259259}, {0.38, 
           0.9012345679012346}, {0.3466666666666667, 0.8806584362139918}, {
           0.32666666666666666`, 0.8559670781893004}, {0.30666666666666664`, 
           0.8436213991769548}, {0.28, 0.8353909465020576}, {0.28, 
           0.8271604938271605}, {0.25333333333333335`, 0.8106995884773662}, {
           0.23333333333333334`, 0.7818930041152263}, {0.2, 
           0.7325102880658436}, {0.16666666666666666`, 0.691358024691358}, {
           0.12, 0.49382716049382713`}, {0.07333333333333333, 
           0.345679012345679}, {0.03333333333333333, 0.09465020576131687}, {0,
            0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[NCache[{Rational[49, 50], 1}, {0.98, 1}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[23, 30], Rational[80, 81]}, {0.7666666666666667, 
             0.9876543209876543}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[47, 75], Rational[239, 243]}, {
             0.6266666666666667, 0.9835390946502057}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 25], Rational[239, 243]}, {0.52, 
             0.9835390946502057}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[12, 25], Rational[238, 243]}, {0.48, 
             0.9794238683127572}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[71, 150], Rational[238, 243]}, {
             0.47333333333333333`, 0.9794238683127572}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[23, 50], Rational[238, 243]}, {0.46, 
             0.9794238683127572}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 25], Rational[232, 243]}, {0.44, 
             0.9547325102880658}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[21, 50], Rational[229, 243]}, {0.42, 
             0.9423868312757202}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 5], Rational[25, 27]}, {0.4, 
             0.9259259259259259}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[19, 50], Rational[73, 81]}, {0.38, 
             0.9012345679012346}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[26, 75], Rational[214, 243]}, {
             0.3466666666666667, 0.8806584362139918}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[49, 150], Rational[208, 243]}, {
             0.32666666666666666`, 0.8559670781893004}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[23, 75], Rational[205, 243]}, {
             0.30666666666666664`, 0.8436213991769548}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 25], Rational[203, 243]}, {0.28, 
             0.8353909465020576}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 25], Rational[67, 81]}, {0.28, 
             0.8271604938271605}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[19, 75], Rational[197, 243]}, {
             0.25333333333333335`, 0.8106995884773662}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 30], Rational[190, 243]}, {
             0.23333333333333334`, 0.7818930041152263}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 5], Rational[178, 243]}, {0.2, 
             0.7325102880658436}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 6], Rational[56, 81]}, {0.16666666666666666`, 
             0.691358024691358}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 25], Rational[40, 81]}, {0.12, 
             0.49382716049382713`}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 150], Rational[28, 81]}, {
             0.07333333333333333, 0.345679012345679}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 30], Rational[23, 243]}, {0.03333333333333333,
              0.09465020576131687}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], 
         InsetBox["0.`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.025`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.05`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.07500000000000001`", {1, 1}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.1`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.125`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.15000000000000002`", {1, 1}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.17500000000000002`", {1, 1}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.2`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.225`", NCache[{Rational[49, 50], 1}, {0.98, 1}], 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.25`", 
          NCache[{Rational[23, 30], Rational[80, 81]}, {0.7666666666666667, 
           0.9876543209876543}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.275`", 
          NCache[{Rational[47, 75], Rational[239, 243]}, {0.6266666666666667, 
           0.9835390946502057}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[13, 25], Rational[239, 243]}, {0.52, 
           0.9835390946502057}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.325`", 
          NCache[{Rational[12, 25], Rational[238, 243]}, {0.48, 
           0.9794238683127572}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[71, 150], Rational[238, 243]}, {
           0.47333333333333333`, 0.9794238683127572}], 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.375`", 
          NCache[{Rational[23, 50], Rational[238, 243]}, {0.46, 
           0.9794238683127572}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.4`", 
          NCache[{Rational[11, 25], Rational[232, 243]}, {0.44, 
           0.9547325102880658}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[21, 50], Rational[229, 243]}, {0.42, 
           0.9423868312757202}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.45`", 
          NCache[{Rational[2, 5], Rational[25, 27]}, {0.4, 
           0.9259259259259259}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[19, 50], Rational[73, 81]}, {0.38, 
           0.9012345679012346}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.5`", 
          NCache[{Rational[26, 75], Rational[214, 243]}, {0.3466666666666667, 
           0.8806584362139918}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.525`", 
          NCache[{Rational[49, 150], Rational[208, 243]}, {
           0.32666666666666666`, 0.8559670781893004}], 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.55`", 
          NCache[{Rational[23, 75], Rational[205, 243]}, {
           0.30666666666666664`, 0.8436213991769548}], 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[7, 25], Rational[203, 243]}, {0.28, 
           0.8353909465020576}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[7, 25], Rational[67, 81]}, {0.28, 
           0.8271604938271605}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.625`", 
          NCache[{Rational[19, 75], Rational[197, 243]}, {
           0.25333333333333335`, 0.8106995884773662}], 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.65`", 
          NCache[{Rational[7, 30], Rational[190, 243]}, {0.23333333333333334`,
            0.7818930041152263}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.675`", 
          NCache[{Rational[1, 5], Rational[178, 243]}, {0.2, 
           0.7325102880658436}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[1, 6], Rational[56, 81]}, {0.16666666666666666`, 
           0.691358024691358}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[3, 25], Rational[40, 81]}, {0.12, 
           0.49382716049382713`}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.75`", 
          NCache[{Rational[11, 150], Rational[28, 81]}, {0.07333333333333333, 
           0.345679012345679}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.775`", 
          NCache[{Rational[1, 30], Rational[23, 243]}, {0.03333333333333333, 
           0.09465020576131687}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.8`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.8250000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.8500000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.875`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.9`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.925`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.9500000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.9750000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["1.`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Medium]}], ",", 
    RowBox[{"\<\"survived\"\>", "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {Rational[220, 243], Rational[29, 30]}, {
           Rational[53, 81], Rational[139, 150]}, {
           Rational[41, 81], Rational[22, 25]}, {
           Rational[25, 81], Rational[5, 6]}, {
           Rational[65, 243], Rational[4, 5]}, {
           Rational[53, 243], Rational[23, 30]}, {
           Rational[46, 243], Rational[56, 75]}, {
           Rational[14, 81], Rational[18, 25]}, {
           Rational[40, 243], Rational[18, 25]}, {
           Rational[38, 243], Rational[52, 75]}, {
           Rational[35, 243], Rational[101, 150]}, {
           Rational[31, 243], Rational[49, 75]}, {
           Rational[8, 81], Rational[31, 50]}, {
           Rational[2, 27], Rational[3, 5]}, {
           Rational[14, 243], Rational[29, 50]}, {
           Rational[11, 243], Rational[14, 25]}, {
           Rational[5, 243], Rational[27, 50]}, {
           Rational[5, 243], Rational[79, 150]}, {
           Rational[5, 243], Rational[13, 25]}, {
           Rational[4, 243], Rational[12, 25]}, {
           Rational[4, 243], Rational[28, 75]}, {
           Rational[1, 81], Rational[7, 30]}, {0, Rational[1, 50]}, {0, 0}, {
           0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{
           1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {0.9053497942386831, 0.9666666666666667}, {0.654320987654321, 
           0.9266666666666666}, {0.5061728395061729, 0.88}, {
           0.30864197530864196`, 0.8333333333333334}, {0.2674897119341564, 
           0.8}, {0.21810699588477367`, 0.7666666666666667}, {
           0.18930041152263374`, 0.7466666666666667}, {0.1728395061728395, 
           0.72}, {0.1646090534979424, 0.72}, {0.15637860082304528`, 
           0.6933333333333334}, {0.1440329218106996, 0.6733333333333333}, {
           0.12757201646090535`, 0.6533333333333333}, {0.09876543209876543, 
           0.62}, {0.07407407407407407, 0.6}, {0.05761316872427984, 0.58}, {
           0.04526748971193416, 0.56}, {0.0205761316872428, 0.54}, {
           0.0205761316872428, 0.5266666666666666}, {0.0205761316872428, 
           0.52}, {0.01646090534979424, 0.48}, {0.01646090534979424, 
           0.37333333333333335`}, {0.012345679012345678`, 
           0.23333333333333334`}, {0, 0.02}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {
           0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[
         NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {Rational[220, 243], Rational[29, 30]}, {
           Rational[53, 81], Rational[139, 150]}, {
           Rational[41, 81], Rational[22, 25]}, {
           Rational[25, 81], Rational[5, 6]}, {
           Rational[65, 243], Rational[4, 5]}, {
           Rational[53, 243], Rational[23, 30]}, {
           Rational[46, 243], Rational[56, 75]}, {
           Rational[14, 81], Rational[18, 25]}, {
           Rational[40, 243], Rational[18, 25]}, {
           Rational[38, 243], Rational[52, 75]}, {
           Rational[35, 243], Rational[101, 150]}, {
           Rational[31, 243], Rational[49, 75]}, {
           Rational[8, 81], Rational[31, 50]}, {
           Rational[2, 27], Rational[3, 5]}, {
           Rational[14, 243], Rational[29, 50]}, {
           Rational[11, 243], Rational[14, 25]}, {
           Rational[5, 243], Rational[27, 50]}, {
           Rational[5, 243], Rational[79, 150]}, {
           Rational[5, 243], Rational[13, 25]}, {
           Rational[4, 243], Rational[12, 25]}, {
           Rational[4, 243], Rational[28, 75]}, {
           Rational[1, 81], Rational[7, 30]}, {0, Rational[1, 50]}, {0, 0}, {
           0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{
           1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {0.9053497942386831, 0.9666666666666667}, {0.654320987654321, 
           0.9266666666666666}, {0.5061728395061729, 0.88}, {
           0.30864197530864196`, 0.8333333333333334}, {0.2674897119341564, 
           0.8}, {0.21810699588477367`, 0.7666666666666667}, {
           0.18930041152263374`, 0.7466666666666667}, {0.1728395061728395, 
           0.72}, {0.1646090534979424, 0.72}, {0.15637860082304528`, 
           0.6933333333333334}, {0.1440329218106996, 0.6733333333333333}, {
           0.12757201646090535`, 0.6533333333333333}, {0.09876543209876543, 
           0.62}, {0.07407407407407407, 0.6}, {0.05761316872427984, 0.58}, {
           0.04526748971193416, 0.56}, {0.0205761316872428, 0.54}, {
           0.0205761316872428, 0.5266666666666666}, {0.0205761316872428, 
           0.52}, {0.01646090534979424, 0.48}, {0.01646090534979424, 
           0.37333333333333335`}, {0.012345679012345678`, 
           0.23333333333333334`}, {0, 0.02}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {
           0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[220, 243], Rational[29, 30]}, {
             0.9053497942386831, 0.9666666666666667}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[53, 81], Rational[139, 150]}, {0.654320987654321,
              0.9266666666666666}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[41, 81], Rational[22, 25]}, {0.5061728395061729, 
             0.88}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[25, 81], Rational[5, 6]}, {0.30864197530864196`, 
             0.8333333333333334}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[65, 243], Rational[4, 5]}, {0.2674897119341564, 
             0.8}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[53, 243], Rational[23, 30]}, {
             0.21810699588477367`, 0.7666666666666667}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[46, 243], Rational[56, 75]}, {
             0.18930041152263374`, 0.7466666666666667}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[14, 81], Rational[18, 25]}, {0.1728395061728395, 
             0.72}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[40, 243], Rational[18, 25]}, {0.1646090534979424,
              0.72}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[38, 243], Rational[52, 75]}, {
             0.15637860082304528`, 0.6933333333333334}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[35, 243], Rational[101, 150]}, {
             0.1440329218106996, 0.6733333333333333}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[31, 243], Rational[49, 75]}, {
             0.12757201646090535`, 0.6533333333333333}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[8, 81], Rational[31, 50]}, {0.09876543209876543, 
             0.62}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 27], Rational[3, 5]}, {0.07407407407407407, 
             0.6}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[14, 243], Rational[29, 50]}, {
             0.05761316872427984, 0.58}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 243], Rational[14, 25]}, {
             0.04526748971193416, 0.56}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 243], Rational[27, 50]}, {0.0205761316872428, 
             0.54}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 243], Rational[79, 150]}, {0.0205761316872428,
              0.5266666666666666}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 243], Rational[13, 25]}, {0.0205761316872428, 
             0.52}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 243], Rational[12, 25]}, {0.01646090534979424,
              0.48}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 243], Rational[28, 75]}, {0.01646090534979424,
              0.37333333333333335`}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 81], Rational[7, 30]}, {0.012345679012345678`,
              0.23333333333333334`}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[NCache[{0, Rational[1, 50]}, {0, 0.02}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], 
         InsetBox["0.`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.025`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.05`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.07500000000000001`", {1, 1}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.1`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.125`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.15000000000000002`", {1, 1}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.17500000000000002`", {1, 1}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.2`", {1, 1}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.225`", 
          NCache[{Rational[220, 243], Rational[29, 30]}, {0.9053497942386831, 
           0.9666666666666667}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.25`", 
          NCache[{Rational[53, 81], Rational[139, 150]}, {0.654320987654321, 
           0.9266666666666666}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.275`", 
          NCache[{Rational[41, 81], Rational[22, 25]}, {0.5061728395061729, 
           0.88}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[25, 81], Rational[5, 6]}, {0.30864197530864196`, 
           0.8333333333333334}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.325`", 
          NCache[{Rational[65, 243], Rational[4, 5]}, {0.2674897119341564, 
           0.8}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[53, 243], Rational[23, 30]}, {0.21810699588477367`,
            0.7666666666666667}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.375`", 
          NCache[{Rational[46, 243], Rational[56, 75]}, {0.18930041152263374`,
            0.7466666666666667}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.4`", 
          NCache[{Rational[14, 81], Rational[18, 25]}, {0.1728395061728395, 
           0.72}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[40, 243], Rational[18, 25]}, {0.1646090534979424, 
           0.72}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.45`", 
          NCache[{Rational[38, 243], Rational[52, 75]}, {0.15637860082304528`,
            0.6933333333333334}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[35, 243], Rational[101, 150]}, {0.1440329218106996,
            0.6733333333333333}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.5`", 
          NCache[{Rational[31, 243], Rational[49, 75]}, {0.12757201646090535`,
            0.6533333333333333}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.525`", 
          NCache[{Rational[8, 81], Rational[31, 50]}, {0.09876543209876543, 
           0.62}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.55`", 
          NCache[{Rational[2, 27], Rational[3, 5]}, {0.07407407407407407, 
           0.6}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[14, 243], Rational[29, 50]}, {0.05761316872427984, 
           0.58}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[11, 243], Rational[14, 25]}, {0.04526748971193416, 
           0.56}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.625`", 
          NCache[{Rational[5, 243], Rational[27, 50]}, {0.0205761316872428, 
           0.54}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.65`", 
          NCache[{Rational[5, 243], Rational[79, 150]}, {0.0205761316872428, 
           0.5266666666666666}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.675`", 
          NCache[{Rational[5, 243], Rational[13, 25]}, {0.0205761316872428, 
           0.52}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[4, 243], Rational[12, 25]}, {0.01646090534979424, 
           0.48}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[4, 243], Rational[28, 75]}, {0.01646090534979424, 
           0.37333333333333335`}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.75`", 
          NCache[{Rational[1, 81], Rational[7, 30]}, {0.012345679012345678`, 
           0.23333333333333334`}], ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.775`", NCache[{0, Rational[1, 50]}, {0, 0.02}], 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.8`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.8250000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.8500000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.875`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.9`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.925`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.9500000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["0.9750000000000001`", {0, 0}, 
          ImageScaled[{0, Rational[3, 2]}]], 
         InsetBox["1.`", {0, 0}, ImageScaled[{0, Rational[3, 2]}]]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Medium]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.779631794976563*^9},ExpressionUUID->"989b245d-e670-4802-a2f7-\
92487fcd1a5f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"None", "\[Rule]", "0.7888040712468194`"}], ",", 
    RowBox[{"\<\"id\"\>", "\[Rule]", "0.8015267175572519`"}], ",", 
    RowBox[{"\<\"passengerClass\"\>", "\[Rule]", "0.7379134860050891`"}], ",", 
    RowBox[{"\<\"passengerAge\"\>", "\[Rule]", "0.8040712468193384`"}], ",", 
    RowBox[{"\<\"passengerSex\"\>", "\[Rule]", "0.549618320610687`"}]}], 
   "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.779631795543404*^9},ExpressionUUID->"8e9f716a-4b69-41f5-9ae0-\
16abc663a569"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ML code generation : SMRMon", "Section",
 CellChangeTimes->{{3.7792712438908453`*^9, 3.779271272736438*^9}, {
  3.7792801960161543`*^9, 
  3.7792801996718407`*^9}},ExpressionUUID->"146eceb1-6a36-4e9d-ab69-\
b308751de45f"],

Cell[CellGroupData[{

Cell["Load packages", "Subsection",
 CellChangeTimes->{{3.779271284391679*^9, 3.77927128636026*^9}, {
  3.779279843317747*^9, 
  3.7792798480359364`*^9}},ExpressionUUID->"70b8d654-5468-4e03-b098-\
43cdd36b8eae"],

Cell[BoxData[{
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/ConversationalAgents/Packages/WL/ExternalParsersHookup.m\>\"\
", "]"}], "\n", 
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/MathematicaForPrediction/MonadicProgramming/\
MonadicSparseMatrixRecommender.m\>\"", "]"}], "\n", 
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/MathematicaForPrediction/MonadicProgramming/\
MonadicAnomaliesFinder.m\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.775904198781595*^9, 3.7759042006424713`*^9}, 
   3.779279850093562*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"b186fd6c-e99c-4d25-861c-1532ea8340c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load data", "Subsection",
 CellChangeTimes->{{3.777304251974484*^9, 3.7773042553943443`*^9}, {
   3.7778116964848967`*^9, 3.7778116964864798`*^9}, 3.777811741660524*^9, {
   3.778092953974947*^9, 
   3.7780929545030127`*^9}},ExpressionUUID->"8c834f86-b11d-40dc-960e-\
9a149918071f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfTitanic", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<https://github.com/antononcube/MathematicaVsR/raw/master/Data/\
MathematicaVsR-Data-Titanic.csv\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dfTitanic", "=", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"Rest", "[", "dfTitanic", "]"}], "]"}], "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"First", "[", "dfTitanic", "]"}], "\[Rule]", "#"}], "]"}], 
       "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"dfMushroom", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/antononcube/MathematicaVsR/master/\
Data/MathematicaVsR-Data-Mushroom.csv\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dfMushroom", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"Rest", "[", "dfMushroom", "]"}], "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"First", "[", "dfMushroom", "]"}], "\[Rule]", "#"}], "]"}], 
      "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.777824784633128*^9, 3.7778248108299427`*^9}, {
   3.777824863829103*^9, 3.777824864262637*^9}, {3.777824955822315*^9, 
   3.77782495648283*^9}, 3.777825061763829*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"fc788505-3f76-4502-a6ba-c7343a8179c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfTitanic", "=", 
   RowBox[{"dfTitanic", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<id\>\"", "\[Rule]", 
         RowBox[{"ToString", "[", "#id", "]"}]}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dfMushroom", "=", 
   RowBox[{"dfMushroom", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<id\>\"", "\[Rule]", 
         RowBox[{"ToString", "[", "#id", "]"}]}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7792800090986347`*^9, 3.7792801139381*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e65604a1-ecd0-4830-8fe9-33268bdc6928"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.779271288936496*^9, 
  3.779271289971527*^9}},ExpressionUUID->"f4974e35-eccf-4780-863f-\
4dfb4cee0397"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"smrTitanic", "=", 
   RowBox[{
    RowBox[{"SMRMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
    RowBox[{"SMRMonCreate", "[", 
     RowBox[{"dfTitanic", ",", "\"\<id\>\""}], "]"}], " ", 
    "\[DoubleLongRightArrow]", 
    RowBox[{"SMRMonRecommend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", " ", "\"\<10\>\""}], "}"}], ",", " ", "12"}],
      "]"}], "\[DoubleLongRightArrow]", "SMRMonEchoValue"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.778508683064101*^9, 3.778508751105475*^9}, {
  3.778508817168544*^9, 3.778508820136396*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"00c54a47-fc0e-461f-9f90-e62f0aaa8c01"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"62\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"15\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"82\"\>", "\[Rule]", 
     FractionBox["1751", "2001"]}], ",", 
    RowBox[{"\<\"286\"\>", "\[Rule]", 
     FractionBox["1751", "2001"]}], ",", 
    RowBox[{"\<\"136\"\>", "\[Rule]", 
     FractionBox["1751", "2001"]}], ",", 
    RowBox[{"\<\"728\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"595\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"507\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"1236\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"84\"\>", "\[Rule]", 
     FractionBox["1501", "2001"]}], ",", 
    RowBox[{"\<\"80\"\>", "\[Rule]", 
     FractionBox["1501", "2001"]}], ",", 
    RowBox[{"\<\"79\"\>", "\[Rule]", 
     FractionBox["1501", "2001"]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.77963180446134*^9},ExpressionUUID->"eab0a997-e626-4e3a-8960-3fd3dacf8698"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recommendations by history", "Subsubsection",
 CellChangeTimes->{{3.778519254086589*^9, 
  3.778519259486279*^9}},ExpressionUUID->"2cdaf07e-e013-46b4-bf46-\
b6c6d45446a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"smrTitanic", "=", "\[IndentingNewLine]", 
   RowBox[{"ToSMRMonWLCommand", "[", 
    RowBox[{
    "\"\<\ncreate from dfTitanic; \ncompute 12 recommendations for the \
history 1, 10;\necho pipeline value\>\"", ",", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
   3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}, {
   3.7785079411209917`*^9, 3.778507946354095*^9}, {3.778508158713151*^9, 
   3.778508204952673*^9}, {3.778508480331162*^9, 3.7785084818167553`*^9}, 
   3.778508554592909*^9, {3.778508669836173*^9, 3.7785086709023027`*^9}, {
   3.778508754527169*^9, 3.778508765043792*^9}, {3.778538447898593*^9, 
   3.7785384486475687`*^9}, {3.778538732364887*^9, 3.778538739036454*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8ec3618f-9717-4084-85b4-09746fd4cd37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"SMRMonCreate:\"\>",
   "EchoLabel"], 
  " ", "\<\"Heuristically picking the ID column to be \\\"id\\\".\"\>"}]], \
"Echo",
 CellChangeTimes->{
  3.779632266950734*^9},ExpressionUUID->"e7153869-b1dc-45fd-baf7-\
5d8af1795049"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"62\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"15\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"82\"\>", "\[Rule]", 
     FractionBox["1751", "2001"]}], ",", 
    RowBox[{"\<\"286\"\>", "\[Rule]", 
     FractionBox["1751", "2001"]}], ",", 
    RowBox[{"\<\"136\"\>", "\[Rule]", 
     FractionBox["1751", "2001"]}], ",", 
    RowBox[{"\<\"728\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"595\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"507\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"1236\"\>", "\[Rule]", 
     FractionBox["1167", "1334"]}], ",", 
    RowBox[{"\<\"84\"\>", "\[Rule]", 
     FractionBox["1501", "2001"]}], ",", 
    RowBox[{"\<\"80\"\>", "\[Rule]", 
     FractionBox["1501", "2001"]}], ",", 
    RowBox[{"\<\"79\"\>", "\[Rule]", 
     FractionBox["1501", "2001"]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.77963226705335*^9},ExpressionUUID->"835ea2e3-d38a-43ae-a1ad-85e185c1453e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToSMRMonWLCommand", "[", 
  RowBox[{
  "\"\<\ncreate from dfTitanic; \nrecommnd for the histry 1, 10;\necho \
pipeline value\>\"", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
   3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}, {
   3.7785079411209917`*^9, 3.778507946354095*^9}, {3.778508158713151*^9, 
   3.778508204952673*^9}, {3.778508480331162*^9, 3.7785084818167553`*^9}, 
   3.778508554592909*^9, {3.778508669836173*^9, 3.7785086709023027`*^9}, {
   3.778508754527169*^9, 3.778508765043792*^9}, {3.77853598278796*^9, 
   3.778536008518208*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"af63b4b4-6d20-450b-90a7-b31dd14863fe"],

Cell[BoxData["\<\"Possible misspelling of 'recommend' as \
'recommnd'.\\nPossible misspelling of 'recommend' as 'recommnd'.\\nPossible \
misspelling of 'history' as 'histry'.\\nSMRMonUnit[] \[DoubleLongRightArrow] \
SMRMonCreate[dfTitanic] \[DoubleLongRightArrow]\\nSMRMonRecommend[{\\\"1\\\", \
\\\"10\\\"}] \[DoubleLongRightArrow]\\nSMRMonEchoValue[]\\n\"\>"], "Output",
 CellChangeTimes->{3.779280140374165*^9, 3.7792925517568893`*^9, 
  3.7796322718985863`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"78629737-5648-411e-a528-cd74023b109e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToSMRMonWLCommand", "[", 
   RowBox[{
   "\"\<\nuse the recommender smrTitanic; \nclassify to passengerSurvival the \
profile male, 3rd;\necho pipeline value\>\"", ",", "True"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
   3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}, {
   3.7785079411209917`*^9, 3.778507946354095*^9}, {3.778508158713151*^9, 
   3.778508204952673*^9}, {3.778508480331162*^9, 3.7785084818167553`*^9}, 
   3.778508554592909*^9, {3.778508669836173*^9, 3.7785086709023027`*^9}, {
   3.778508754527169*^9, 3.778508765043792*^9}, {3.77853598278796*^9, 
   3.778536008518208*^9}, {3.7785378083176003`*^9, 3.778537857707408*^9}, {
   3.7785378964438066`*^9, 3.778537927323591*^9}, {3.778537996894356*^9, 
   3.778538012858634*^9}, {3.778538063562316*^9, 3.7785380658804398`*^9}, {
   3.778538099522193*^9, 3.778538101003907*^9}, {3.7785383234656143`*^9, 
   3.7785383245691433`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"60e18c0d-b2b2-4e35-ac03-bd65869d7506"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"died\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"survived\"\>", "\[Rule]", 
     FractionBox["5", "17"]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.77963227544027*^9},ExpressionUUID->"4978b845-ef75-4145-a7d5-bce9563cc24c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToSMRMonWLCommand", "[", 
   RowBox[{
   "\"\<\nuse recommender object smrTitanic;\ncompute 12 recommendations for \
the history 1, 14;\necho pipeline value;\njoin across with dfTitanic;\necho \
pipeline value\n\>\"", ",", "True"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
   3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}, {
   3.7785079411209917`*^9, 3.778507946354095*^9}, {3.778508158713151*^9, 
   3.778508204952673*^9}, {3.778508480331162*^9, 3.7785084818167553`*^9}, 
   3.778508554592909*^9, {3.778508669836173*^9, 3.7785086709023027`*^9}, {
   3.778508754527169*^9, 3.778508765043792*^9}, {3.778508810417158*^9, 
   3.778508844346757*^9}, {3.778509374042285*^9, 3.778509445410989*^9}, {
   3.778510691877713*^9, 3.778510705502893*^9}, {3.7785110321741657`*^9, 
   3.7785110546834*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ae2b53db-19d9-4067-98a6-ab90db5e930b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"62\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"15\"\>", "\[Rule]", 
     FractionBox["2402", "2403"]}], ",", 
    RowBox[{"\<\"82\"\>", "\[Rule]", 
     FractionBox["2101", "2403"]}], ",", 
    RowBox[{"\<\"286\"\>", "\[Rule]", 
     FractionBox["2101", "2403"]}], ",", 
    RowBox[{"\<\"136\"\>", "\[Rule]", 
     FractionBox["2101", "2403"]}], ",", 
    RowBox[{"\<\"10\"\>", "\[Rule]", 
     FractionBox["2101", "2403"]}], ",", 
    RowBox[{"\<\"728\"\>", "\[Rule]", 
     FractionBox["700", "801"]}], ",", 
    RowBox[{"\<\"595\"\>", "\[Rule]", 
     FractionBox["700", "801"]}], ",", 
    RowBox[{"\<\"507\"\>", "\[Rule]", 
     FractionBox["700", "801"]}], ",", 
    RowBox[{"\<\"1236\"\>", "\[Rule]", 
     FractionBox["700", "801"]}], ",", 
    RowBox[{"\<\"84\"\>", "\[Rule]", 
     FractionBox["601", "801"]}], ",", 
    RowBox[{"\<\"80\"\>", "\[Rule]", 
     FractionBox["601", "801"]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.779632276693746*^9},ExpressionUUID->"9e3bd7ab-d9a8-4811-900a-\
e8ba0d52a900"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"SMRMonJoinAcross:\"\>",
   "EchoLabel"], 
  " ", "\<\"Heuristically picking the joining column to be \
\\\"id\\\".\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7796322767154703`*^9},ExpressionUUID->"6aa68664-0bbb-4694-b6a4-\
059b00e8169b"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  TemplateBox[{TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Data`UnorderedAssociation[
        "RowCount" -> 12, "Length" -> 12, "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Score", "Item", "passengerClass", "passengerAge", "passengerSex",
              "passengerSurvival"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["female", "male"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["died", "survived"]]}], 12], "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Score"} -> 1, {All, "Item"} -> 
            1, {All, "passengerClass"} -> 1, {All, "passengerAge"} -> 
            1, {All, "passengerSex"} -> 1, {All, "passengerSurvival"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Score" -> TypeSystem`PackageScope`AtomShape[60], "Item" -> 
               TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
               "passengerClass" -> TypeSystem`PackageScope`AtomShape[27.], 
               "passengerAge" -> TypeSystem`PackageScope`AtomShape[34], 
               "passengerSex" -> TypeSystem`PackageScope`AtomShape[54.], 
               "passengerSurvival" -> 
               TypeSystem`PackageScope`AtomShape[72.]]]], 12, {}]], 
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[1400986952], 
         "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Score", "Item", "passengerClass", "passengerAge", "passengerSex",
              "passengerSurvival"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["female", "male"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["died", "survived"]]}], 12], "HandleQ" -> 
         True, "RowTarget" -> 20, "Data" -> 
         TypeSystem`PackageScope`CacheHandle[1400986952]], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Score\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Score\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1361399836][{All, "Score"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[All, "Score"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Item\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Item\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1361399836][{All, "Item"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[All, "Item"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerClass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerClass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1361399836][{All, "passengerClass"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[All, "passengerClass"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerAge\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerAge\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1361399836][{All, "passengerAge"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[All, "passengerAge"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSex\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSex\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1361399836][{All, "passengerSex"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[All, "passengerSex"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSurvival\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSurvival\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1361399836][{All, "passengerSurvival"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[All, "passengerSurvival"]], 
                  "Mouse"], Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[1, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["62", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[1, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[1, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["80"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[1, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["female", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[1, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[1, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.999584"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[2, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["15", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[2, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[2, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["80"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[2, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[2, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[2, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.874324"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[3, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["10", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[3, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[3, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[3, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[3, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[3, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.874324"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[4, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["136", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[4, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[4, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[4, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[4, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[4, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.874324"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[5, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["286", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[5, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[5, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[5, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[5, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[5, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.874324"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[6, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["82", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[6, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[6, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[6, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[6, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[6, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.873908"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[7, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1236", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[7, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[7, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[7, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[7, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[7, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.873908"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[8, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["507", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[8, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["2nd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[8, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[8, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[8, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[8, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.873908"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[9, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["595", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[9, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["2nd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[9, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[9, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[9, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[9, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.873908"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[10, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["728", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[10, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[10, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["70"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[10, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[10, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["died", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[10, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.750312"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[11, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["80", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[11, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[11, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["60"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[11, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["female", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[11, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[11, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["0.750312"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[12, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["84", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[12, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[12, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["60"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[12, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["female", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[12, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{54., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1361399836][
                   GeneralUtilities`Slice[12, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                  MenuItem["Copy position to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Copy data to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], Delimiter, 
                  MenuItem["Paste position in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Paste data in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
              Dividers -> All, FrameStyle -> GrayLevel[0.85], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
          TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
               If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                 TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1361399836][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`alignBar[
         TypeSystem`NestedGrid`PackagePrivate`$state$$][
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1361399836]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
         Dynamic[
          Replace[
           MouseAnnotation[Null], {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1361399836][
             Null] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1361399836][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
               Blank[]]] :> (
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 14}]}, 
      DynamicBox[
       ToBoxes[
        Column[
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           0, {{}, {0, 0.05, 0}}]], StandardForm], 
       ImageSizeCache -> {649., {208.693115234375, 215.306884765625}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
      TypeSystem`NestedGrid`PackagePrivate`deleteState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$], 
      DynamicModuleValues :> {}, Initialization :> 
      Block[{$ContextPath = $ContextPath}, 
        Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )]}]], "Echo",
 CellChangeTimes->{
  3.779632276834544*^9},ExpressionUUID->"2b2b08eb-dbe8-4b84-882b-\
92ec3560b46a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recommendations by profile", "Subsubsection",
 CellChangeTimes->{{3.778519236043686*^9, 
  3.778519245009898*^9}},ExpressionUUID->"13c4d7a4-be61-45eb-87c6-\
2e85ada7ec22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToSMRMonWLCommand", "[", 
   RowBox[{
   "\"\<\nuse recommender object smrTitanic;\ncompute 12 recommendations for \
the profile male, survived;\necho pipeline value;\njoin across with \
dfTitanic;\necho pipeline value\n\>\"", ",", "True"}], "]"}], ";"}]], "Input",\

 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
   3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}, {
   3.7785079411209917`*^9, 3.778507946354095*^9}, {3.778508158713151*^9, 
   3.778508204952673*^9}, {3.778508480331162*^9, 3.7785084818167553`*^9}, 
   3.778508554592909*^9, {3.778508669836173*^9, 3.7785086709023027`*^9}, {
   3.778508754527169*^9, 3.778508765043792*^9}, {3.778508810417158*^9, 
   3.778508844346757*^9}, {3.778509374042285*^9, 3.778509445410989*^9}, {
   3.778510691877713*^9, 3.778510705502893*^9}, {3.7785110321741657`*^9, 
   3.778511089108631*^9}, {3.778511995778536*^9, 3.7785119997436123`*^9}, {
   3.779280444151243*^9, 3.7792804545782747`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"867fb7e0-b7f7-405f-9435-934bd0680add"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"992\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"986\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"982\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"979\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"971\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"954\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"950\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"95\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"946\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"942\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"94\"\>", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\<\"936\"\>", "\[Rule]", "1.`"}]}], 
   "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.779280455346367*^9},ExpressionUUID->"69125831-133c-4add-a9b5-\
58f1c9b033ed"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"SMRMonJoinAcross:\"\>",
   "EchoLabel"], 
  " ", "\<\"Heuristically picking the joining column to be \
\\\"id\\\".\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7792804553706703`*^9},ExpressionUUID->"eec55343-00d3-4251-a651-\
dd180afc0176"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  TemplateBox[{TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Data`UnorderedAssociation[
        "RowCount" -> 12, "Length" -> 12, "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Score", "Item", "passengerClass", "passengerAge", "passengerSex",
              "passengerSurvival"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["1st", "3rd"]], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["male"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["survived"]]}], 12], "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Score"} -> 1, {All, "Item"} -> 
            1, {All, "passengerClass"} -> 1, {All, "passengerAge"} -> 
            1, {All, "passengerSex"} -> 1, {All, "passengerSurvival"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Score" -> TypeSystem`PackageScope`AtomShape[60], "Item" -> 
               TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
               "passengerClass" -> TypeSystem`PackageScope`AtomShape[27.], 
               "passengerAge" -> TypeSystem`PackageScope`AtomShape[34], 
               "passengerSex" -> TypeSystem`PackageScope`AtomShape[36.], 
               "passengerSurvival" -> 
               TypeSystem`PackageScope`AtomShape[72.]]]], 12, {}]], 
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[918083539], 
         "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Score", "Item", "passengerClass", "passengerAge", "passengerSex",
              "passengerSurvival"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["1st", "3rd"]], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["male"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["survived"]]}], 12], "HandleQ" -> True, 
         "RowTarget" -> 20, "Data" -> 
         TypeSystem`PackageScope`CacheHandle[918083539]], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Score\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Score\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1728159787][{All, "Score"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[All, "Score"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Item\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Item\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1728159787][{All, "Item"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[All, "Item"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerClass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerClass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1728159787][{All, "passengerClass"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[All, "passengerClass"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerAge\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerAge\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1728159787][{All, "passengerAge"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[All, "passengerAge"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSex\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSex\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1728159787][{All, "passengerSex"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[All, "passengerSex"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSurvival\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"passengerSurvival\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1728159787][{All, "passengerSurvival"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[All, "passengerSurvival"]], 
                  "Mouse"], Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[1, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["936", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[1, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[1, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["30"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[1, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[1, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[1, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[2, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["94", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[2, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[2, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["50"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[2, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[2, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[2, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[3, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["942", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[3, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[3, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["20"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[3, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[3, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[3, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[4, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["946", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[4, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[4, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[4, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[4, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[4, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[5, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["95", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[5, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["1st", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[5, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[5, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[5, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[5, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[6, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["950", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[6, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[6, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["30"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[6, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[6, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[6, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[7, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["954", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[7, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[7, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["20"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[7, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[7, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[7, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[8, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["971", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[8, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[8, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["20"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[8, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[8, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[8, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[9, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["979", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[9, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[9, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["30"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[9, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[9, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[9, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[10, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["982", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[10, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[10, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["30"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[10, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[10, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[10, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[11, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["986", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[11, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[11, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["20"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[11, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[11, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[11, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation[
                  RawBoxes["1.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[12, 
                    Key["Score"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["992", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[12, 
                    Key["Item"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["3rd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[12, 
                    Key["passengerClass"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[12, 
                    Key["passengerAge"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["male", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[12, 
                    Key["passengerSex"]]], "Mouse"], 
                 ImageSize -> {{36., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["survived", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1728159787][
                   GeneralUtilities`Slice[12, 
                    Key["passengerSurvival"]]], "Mouse"], 
                 ImageSize -> {{72., Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                  MenuItem["Copy position to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Copy data to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], Delimiter, 
                  MenuItem["Paste position in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Paste data in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
              Dividers -> All, FrameStyle -> GrayLevel[0.85], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
          TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
               If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                 TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1728159787][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`alignBar[
         TypeSystem`NestedGrid`PackagePrivate`$state$$][
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1728159787]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
         Dynamic[
          Replace[
           MouseAnnotation[Null], {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1728159787][
             Null] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1728159787][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
               Blank[]]] :> (
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 14}]}, 
      DynamicBox[
       ToBoxes[
        Column[
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           0, {{}, {0, 0.05, 0}}]], StandardForm], 
       ImageSizeCache -> {634., {208.693115234375, 215.306884765625}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
      TypeSystem`NestedGrid`PackagePrivate`deleteState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$], 
      DynamicModuleValues :> {}, Initialization :> 
      Block[{$ContextPath = $ContextPath}, 
        Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )]}]], "Echo",
 CellChangeTimes->{
  3.7792804554673147`*^9},ExpressionUUID->"0aa93151-cf95-420d-81d1-\
5b4093e2f066"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToSMRMonWLCommand", "[", 
  RowBox[{
  "\"\<\nuse recommender object smrTitanic;\ncompute 12 recommendations for \
the profile male, survived;\necho pipeline value;\njoin across with \
dfTitanic;\necho pipeline value\n\>\"", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.779280470528921*^9, 3.7792804726439447`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"35758552-ead0-441c-ad1b-1ee5e5804e3e"],

Cell[BoxData["\<\"smrTitanic \
\[DoubleLongRightArrow]\\nSMRMonRecommendByProfile[{\\\"male\\\", \
\\\"survived\\\"},  12] \[DoubleLongRightArrow]\\nSMRMonEchoValue[] \
\[DoubleLongRightArrow]\\nSMRMonJoinAcross[dfTitanic] \[DoubleLongRightArrow]\
\\nSMRMonEchoValue[]\\n\"\>"], "Output",
 CellChangeTimes->{3.77928047320247*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0506f65e-d0aa-4db4-b2b2-b1af924f44f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding anomalies", "Subsubsection",
 CellChangeTimes->{{3.778519267721903*^9, 
  3.7785192730530148`*^9}},ExpressionUUID->"919f5664-6e4a-43fb-ad25-\
e02ed30d1f5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"smrRes", "=", "\[IndentingNewLine]", 
   RowBox[{"ToSMRMonWLCommand", "[", 
    RowBox[{
    "\"\<\nuse recommender object smrTitanic;\nfind anomalies using 20 \
nearest neighbors, the aggregation function Median and the property \
Distances;\necho pipeline value\n\>\"", ",", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
   3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}, {
   3.7785079411209917`*^9, 3.778507946354095*^9}, {3.778508158713151*^9, 
   3.778508204952673*^9}, {3.778508480331162*^9, 3.7785084818167553`*^9}, 
   3.778508554592909*^9, {3.778508669836173*^9, 3.7785086709023027`*^9}, {
   3.778508754527169*^9, 3.778508765043792*^9}, {3.778508810417158*^9, 
   3.778508844346757*^9}, {3.778509374042285*^9, 3.778509445410989*^9}, {
   3.778510691877713*^9, 3.778510705502893*^9}, {3.7785110321741657`*^9, 
   3.778511144146949*^9}, {3.7785192785809507`*^9, 3.778519306691763*^9}, {
   3.778520150031702*^9, 3.778520171966028*^9}, {3.77852024510553*^9, 
   3.77852024545214*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"b041d839-b9a9-4717-8d8e-597d08cd0b36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"smrRes", "\[DoubleLongRightArrow]", 
   RowBox[{"SMRMonEchoFunctionValue", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Sort", "@", 
        RowBox[{"N", "[", 
         RowBox[{"Values", "[", "#", "]"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.778519312387195*^9, 3.778519333199712*^9}, {
  3.778520194737989*^9, 3.778520231782874*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"8e73420b-46f3-4ed2-91eb-675e0c5c1205"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.6481481481481484},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1309.}, {0.6481481481481484, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Echo",
 CellChangeTimes->{
  3.779280435515792*^9},ExpressionUUID->"2de2e8ea-9e77-4e30-b364-\
0761f5d3fc46"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ML code generation : QRMon", "Section",
 CellChangeTimes->{{3.779280206590643*^9, 
  3.779280214803051*^9}},ExpressionUUID->"70868a23-e6e0-4105-aedb-\
db4e3f8c691d"],

Cell[CellGroupData[{

Cell["Load packages", "Subsection",
 CellChangeTimes->{{3.7792802385217857`*^9, 
  3.7792802463388767`*^9}},ExpressionUUID->"cdb95db9-2b45-4649-b55d-\
e04697c853a0"],

Cell[BoxData[{
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/ConversationalAgents/Packages/WL/ExternalParsersHookup.m\>\"\
", "]"}], "\n", 
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/MathematicaForPrediction/MonadicProgramming/\
MonadicStructuralBreaksFinder.m\>\"", "]"}], "\n", 
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/MathematicaForPrediction/MonadicProgramming/\
MonadicAnomaliesFinder.m\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.775904198781595*^9, 3.7759042006424713`*^9}, 
   3.779280251076981*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"a0401f61-2035-4209-a345-8c033d755828"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution data", "Subsection",
 CellChangeTimes->{{3.7782781672213993`*^9, 
  3.778278176536151*^9}},ExpressionUUID->"224c3d67-3401-4c57-ab24-\
b56f080acfd2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", 
           RowBox[{".15", 
            SqrtBox[
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"1.5", "-", "x"}], "]"}], "/", "1.5"}]]}]}], "]"}], 
         "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Length", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{
  3.736946534164905*^9, {3.737109135657349*^9, 3.73710915704137*^9}, {
   3.737479663809911*^9, 3.7374796995338182`*^9}, {3.737480991231567*^9, 
   3.737481022613502*^9}},
 CellLabel->"In[27]:=",
 CellID->531489935,ExpressionUUID->"ea1e1a79-cc88-4612-8759-4255953e5e25"],

Cell[BoxData["601"], "Output",
 CellChangeTimes->{3.737498623361974*^9, 3.7375456517806892`*^9, 
  3.737553274897847*^9, 3.738850683675221*^9, 3.738868577982929*^9, 
  3.7399810047295313`*^9, 3.7399822340688953`*^9, 3.7400777694965773`*^9, 
  3.740416354483132*^9, 3.7405991506149282`*^9, 3.740745593530262*^9, 
  3.775823774993134*^9, 3.7758244269634657`*^9, 3.7758581263271637`*^9, 
  3.775860672791642*^9, 3.775860882957506*^9, 3.775904220106687*^9, 
  3.777226364361307*^9, 3.777227192850132*^9, 3.777235333418332*^9, 
  3.777235561855074*^9, 3.778273582285509*^9, 3.7792802687781773`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"476dad8d-dbad-43a1-a9d1-7ae646037820"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"List", "@@@", "data"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellLabel->"In[29]:=",
 CellID->1669420558,ExpressionUUID->"def24cfc-577d-4b5b-a4d5-5e86a4fefb08"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
BA4e
      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3., 3.}, {-0.6386422475640722, 1.2463978651967322`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.737498623044402*^9, 3.737545265370915*^9, 
  3.7375456737862883`*^9, 3.737553275735712*^9, 3.7388506852281218`*^9, 
  3.73886857902157*^9, 3.739981005529313*^9, 3.739982234317741*^9, 
  3.740077770500669*^9, 3.740416355561496*^9, 3.740599152000122*^9, 
  3.740745595743189*^9, 3.7758237752629843`*^9, 3.775858126592927*^9, 
  3.775860672984172*^9, 3.7758608831499863`*^9, 3.775904222425868*^9, 
  3.7772263644802647`*^9, 3.777235333615065*^9, 3.777235562083639*^9, 
  3.778273582433799*^9, 3.779280269034708*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"591f37dd-0531-4824-a55f-7506814e6a67"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Temperature data", "Subsection",
 CellChangeTimes->{{3.778278185907443*^9, 
  3.778278191881381*^9}},ExpressionUUID->"695b3502-7b6c-42af-bf1b-\
0e12faec350f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tsData", "=", 
  RowBox[{"WeatherData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Orlando\>\"", ",", "\"\<Florida\>\""}], "}"}], ",", 
    "\"\<Temperature\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "07", ",", "31"}], "}"}], ",", "\"\<Day\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.775859811829064*^9, 3.775859875610491*^9}, {
  3.775860665220282*^9, 3.775860666411714*^9}, {3.775860832235526*^9, 
  3.7758608629863243`*^9}, {3.775860906336584*^9, 3.7758609069746857`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"3c1f7d5c-bf78-47a5-b771-915b93a2c767"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jul 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1672", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jul 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1672", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     QuantityArray[
      StructuredArray`StructuredData[{
       1672}, {{
        18, 19.28, 23.06, 23.83, 20.5, 17.67, 15.33, 14.22, 8.78, 10.56, 
         13.17, 20.39, 17.72, 19.17, 12.56, 12.22, 11.06, 15, 14.28, 11.61, 
         15.17, 16.33, 17.44, 22.5, 10.11, 12.89, 11.89, 13.44, 9.22, 14, 
         14.72, 15.83, 18.78, 12.44, 12.33, 18.33, 11.67, 11.28, 13.67, 16.39,
          15.89, 12.94, 10.72, 14.22, 7.94, 11.22, 11.83, 19.5, 15, 9.44, 
         7.67, 12.78, 15.72, 19.44, 20, 18.56, 21.67, 14.11, 16.28, 21.06, 
         21.44, 20.78, 23.56, 24.61, 19.72, 11.5, 15.44, 16.78, 20.22, 22.22, 
         25.39, 22.44, 22.22, 24.28, 21.89, 21.22, 22.89, 22, 23.11, 21.94, 
         24.11, 23.78, 20.72, 20, 20.67, 22.17, 18.06, 14.33, 12.44, 19.17, 
         22.72, 21.78, 21.89, 23.22, 23.33, 21.11, 22.06, 24.11, 21.83, 22.22,
          24.33, 21.33, 23.28, 24.94, 26.11, 24.33, 23.61, 25.56, 26.17, 
         23.78, 23.78, 25.83, 23.61, 24.67, 22.44, 27.83, 26.11, 23.11, 23.44,
          23.5, 23.33, 20.44, 22.17, 20.22, 22.17, 22.89, 22.22, 22.44, 23.67,
          26.78, 26.67, 25.11, 25.44, 25.17, 25.17, 25.33, 23.94, 23.61, 
         24.56, 25.89, 23.94, 28.33, 25, 25.67, 24.72, 25.44, 25, 24.44, 
         23.56, 24.33, 24.89, 26.22, 23.22, 21.22, 23.22, 25.11, 22, 24.22, 
         25.11, 24.89, 22.33, 24.94, 26.78, 25.78, 26, 26.39, 29.17, 27.39, 
         27.56, 26.67, 23.56, 18.06, 29.44, 28.33, 24.72, 28.17, 23.89, 27.33,
          28.22, 28.17, 24.89, 29.56, 26.11, 24.5, 25.56, 27.17, 23.33, 23.5, 
         23.67, 27.94, 28.33, 27, 25.11, 26, 28.67, 28.22, 26.44, 26.67, 
         25.28, 26.11, 27.78, 27.06, 27.89, 26.83, 28.33, 25.94, 24.89, 26.78,
          26.83, 25.11, 25.22, 26.94, 25.67, 24.44, 24.67, 25.83, 26.11, 
         27.33, 28.44, 27.78, 26.78, 27.22, 26.89, 29.39, 28.78, 23.89, 23.67,
          23, 27.39, 25, 27.78, 27.22, 24.61, 28.61, 26.94, 25.11, 29.78, 
         28.78, 23.94, 24.11, 25.11, 23.44, 25.44, 27.33, 27.33, 26.78, 28.22,
          28.89, 27, 26.5, 28, 31.17, 28.17, 27.22, 23.67, 23.94, 25.89, 
         23.72, 23.28, 24.28, 25.5, 25.78, 25, 24.89, 26.67, 25, 25, 25.11, 
         26.22, 26.06, 25.72, 25.67, 27.78, 26.33, 24.11, 21, 19.94, 22.33, 
         22.22, 23.33, 24.28, 24.28, 24.44, 22.44, 23.11, 23.89, 25.28, 22.78,
          21.83, 22.39, 21.11, 19.89, 21.78, 22.22, 23.94, 22.78, 23.33, 
         22.78, 21.56, 21.22, 23.89, 24.72, 22, 25.28, 25, 25.83, 24.72, 
         24.83, 23.89, 23.17, 25.89, 25.67, 25.72, 22.94, 20.22, 22.56, 20.39,
          20.67, 20.67, 21, 23.11, 23.94, 23.67, 23.06, 20.67, 17.5, 14.33, 
         19.17, 19.61, 20.83, 20.17, 19.89, 19.17, 22.11, 23.11, 21.61, 20.44,
          22, 22, 18.22, 17.72, 19.22, 21.28, 17.89, 18.33, 20.28, 22.39, 
         22.11, 22.78, 23.06, 24.17, 15, 12.39, 17.78, 21.89, 23.89, 24.11, 
         23, 22.39, 22.89, 24.67, 23.94, 23.5, 23.22, 24.56, 19.72, 15.06, 
         13.28, 14.89, 15.56, 16.39, 16.44, 17.39, 19.89, 12.83, 8.39, 12.83, 
         11.61, 16.83, 16.67, 18.94, 12.06, 11.22, 7.44, 11, 14.72, 14.28, 
         6.22, 6.33, 13.67, 18, 18.22, 16.78, 13.06, 15.78, 21.67, 20.67, 
         22.28, 23.22, 16.5, 10.94, 12.5, 9.61, 15.56, 11.94, 7.39, 12.5, 
         16.94, 11.67, 15.17, 19.17, 16.5, 17.22, 15, 15.72, 16.11, 19.11, 
         20.89, 21.44, 16.67, 12.56, 11.5, 12.22, 15.17, 20, 20.28, 17.67, 
         23.28, 15, 16.28, 14.89, 18.5, 21.22, 22.94, 22.61, 22.67, 24.28, 
         23.67, 24.67, 24.56, 24.67, 20.83, 24.67, 21.56, 20, 12.33, 16.22, 
         19, 20.5, 20.94, 22.94, 26.28, 24.72, 20.39, 22.94, 27.11, 27.22, 
         21.61, 17.72, 20.17, 20.56, 20.28, 21.83, 21.39, 20.11, 19.11, 19.44,
          23.5, 23.89, 22.28, 22.22, 20.56, 18.56, 19.83, 19.06, 20.83, 22.22,
          22.72, 24.39, 22.61, 21.22, 22.83, 23.89, 23.67, 25.17, 25.89, 
         24.28, 24.67, 27, 20.78, 21.22, 19.72, 21.11, 22.89, 22.78, 24.22, 
         24.11, 25.22, 26.78, 25.89, 23.28, 25.56, 25.61, 25.78, 25.56, 26, 
         26.56, 25.28, 24.56, 22.89, 25.17, 24.22, 24.44, 25.22, 23.78, 24.56,
          26.5, 26.5, 26.94, 27.56, 27.33, 25, 25.5, 25.11, 24.83, 22.78, 
         25.17, 25.67, 25.5, 28.44, 25.94, 27.78, 26.89, 28.22, 24.06, 24.83, 
         24.17, 25.11, 27.11, 28.11, 30, 29.72, 25.78, 27.94, 27.11, 27.56, 
         27.06, 24.83, 25, 28.17, 29.22, 31, 27.22, 28.56, 27.78, 27.33, 
         27.72, 27.22, 27.06, 25.89, 27.28, 26.56, 25.94, 27.33, 27.22, 25.28,
          27.11, 26.67, 25.28, 25.5, 25.39, 27.11, 28.56, 30.5, 28.78, 27.83, 
         26.44, 28.83, 26.83, 27.5, 26.06, 24.94, 26.06, 25.28, 25.83, 26.44, 
         25.94, 26.83, 25.78, 25.78, 25, 26.44, 27.22, 25.72, 26.78, 26.78, 
         27.78, 29.33, 29.78, 29.56, 28.22, 27.17, 26.67, 27.33, 26.67, 26.22,
          23.94, 24.94, 25.5, 26.11, 26.28, 27.61, 24.5, 25.11, 25.11, 26.78, 
         27.56, 28.39, 27.94, 27.83, 25, 24.89, 25.78, 24.78, 27.94, 26.94, 
         27.28, 27.11, 27.33, 27.61, 27.5, 27.94, 27.56, 25.5, 25.89, 24, 
         26.06, 24.67, 26.11, 22.94, 25.94, 24.89, 25, 26.22, 24.56, 25.11, 
         26.44, 22.39, 21.33, 22.22, 23, 24.28, 23.78, 24, 23.33, 22.89, 
         22.56, 22.67, 24.33, 22.5, 18.33, 20.28, 18.78, 21.44, 21.44, 23.78, 
         23.89, 22.06, 21.78, 23.11, 24.22, 22.11, 21.78, 22.72, 21.22, 20, 
         20.11, 19.89, 20.44, 17.17, 18.72, 17.67, 20.56, 18.33, 16.11, 16.5, 
         17.72, 19.83, 19.72, 12.39, 12.22, 16.39, 19.28, 20, 20.56, 18.89, 
         19.33, 19.89, 22.11, 23.5, 19.72, 15.39, 17.67, 19.83, 24.67, 20.94, 
         17.89, 14.39, 14.39, 14.22, 21.83, 21.44, 21.39, 21.67, 15.22, 17.5, 
         22.11, 23.89, 22.94, 17.39, 12.5, 16.28, 19.17, 19.83, 20.94, 20.83, 
         20.94, 20.17, 18.72, 10, 19.17, 22.11, 24.39, 22.83, 18.78, 18.33, 
         17.39, 6.61, 5.89, 11.5, 15.44, 16, 18.61, 19.11, 18.44, 17.17, 
         16.11, 19.44, 20.61, 19.5, 21.5, 21.89, 20.94, 16.61, 14.28, 19.06, 
         21.5, 13.5, 10.28, 10, 10.06, 15.72, 16.72, 19, 18.72, 14.61, 17.06, 
         16.61, 20.33, 22.78, 17.44, 13.78, 18.44, 19.67, 17.56, 21.28, 18.83,
          14.61, 15.94, 20.33, 17.94, 18.94, 20.06, 17.78, 20.28, 19.94, 
         20.44, 15, 21.22, 23.72, 22.06, 18.17, 15.28, 17.11, 17.06, 16.78, 
         19.17, 22.06, 21.28, 20.56, 20.11, 18.39, 19.44, 12.78, 10, 10, 
         13.67, 18, 15.11, 16.89, 21.11, 22.22, 19, 19, 18.78, 19.67, 19.56, 
         23, 23.5, 23.22, 24.61, 22.56, 23.78, 26.67, 21.22, 26.11, 18.78, 
         17.11, 16.67, 19.22, 18.89, 20.28, 21.22, 20.56, 23.11, 22.44, 22.83,
          23.28, 23.61, 23.33, 23.22, 24.22, 25.5, 24.22, 21.28, 21.56, 25.94,
          26.22, 25.22, 24.33, 26, 24.22, 22.33, 23, 26.11, 20, 18.78, 23.56, 
         22.33, 23.44, 26.5, 26.78, 25.78, 21.89, 23.61, 23.67, 24.44, 24.72, 
         25, 26, 25.11, 25.44, 23, 26.56, 23.5, 22.89, 22.89, 25.61, 27.5, 
         28.11, 24.11, 25.83, 24.22, 25.22, 24.22, 24.22, 24.83, 23.33, 23.94,
          23.33, 24.61, 24.56, 24.11, 24.5, 24.89, 23.33, 23.11, 26.28, 26.89,
          25.78, 27, 26.11, 25.78, 26.22, 27.44, 27.89, 27.17, 25.72, 23.67, 
         26.67, 27.56, 27.33, 24.44, 27.06, 24.44, 24.89, 27.33, 27.11, 27.33,
          24.22, 26.33, 24.22, 26.78, 24.28, 27.22, 26.5, 26.94, 27.33, 23.28,
          28.11, 26.67, 27.17, 26.22, 26.44, 28.33, 30, 30.89, 27.78, 26.06, 
         26.89, 27.94, 24.94, 27.56, 26.22, 26.72, 25.11, 28, 26.22, 27.67, 
         27.67, 28.89, 27.89, 27.89, 26.78, 23.94, 26.89, 27.61, 29.22, 25.89,
          25.11, 25.33, 28, 26.56, 26.67, 27.22, 26.44, 26.56, 25.5, 25.94, 
         25.56, 24.28, 25.89, 27.44, 28.17, 25.5, 24.22, 26.11, 25.33, 26.78, 
         28.06, 27, 25.06, 26.56, 26, 23.67, 26.22, 26.89, 23.94, 26.11, 
         26.56, 26.39, 26.89, 27.44, 26.83, 25.56, 24.78, 25.5, 26.39, 25.83, 
         26.11, 26.5, 26.39, 27.06, 26.17, 24.06, 24.67, 25.61, 25.39, 26.39, 
         28.06, 28.44, 27.56, 28.22, 28.28, 26.78, 27.06, 26.67, 27.5, 26.72, 
         25.22, 24.56, 26.78, 25.56, 25.39, 27.06, 26.33, 24.94, 21.72, 18.94,
          20.33, 21.89, 20.11, 15.67, 16.67, 20.44, 19.67, 21.44, 21.56, 
         21.39, 25.5, 24.44, 21.06, 21.56, 23.06, 18.44, 22.39, 22.33, 20.39, 
         18.06, 17.72, 16.67, 17.67, 18.94, 16.89, 18.17, 19.22, 21.83, 20.67,
          14.94, 16.17, 18.28, 18, 21.11, 20.89, 20.94, 19.06, 20, 19.44, 
         19.67, 21.22, 21.06, 19.33, 24.39, 8.78, 9.94, 10.44, 12.89, 10, 
         17.11, 17.72, 15, 18.78, 21.83, 22.06, 21.39, 19.28, 18.89, 19.44, 
         21.78, 13.39, 16.89, 16.67, 15.06, 10.83, 12.06, 13.22, 9.28, 9.06, 
         5.28, 6.44, 8.5, 10.39, 11.78, 17.06, 19.72, 19.67, 20.61, 19.67, 
         9.06, 9.72, 9.28, 12.94, 7.11, 4.72, 10.44, 15.17, 16.22, 21.5, 18.5,
          14.78, 13.06, 16.83, 19.17, 20.83, 15.83, 9.17, 15.28, 16.94, 15.39,
          16.78, 19.67, 13.06, 18.5, 21.89, 17.11, 20.94, 22.11, 24.44, 23.39,
          19.28, 16.89, 21.67, 21.72, 21.67, 20.17, 22.11, 23.39, 21.5, 21.39,
          19.83, 21.61, 22.94, 24.89, 18.61, 24.06, 24.06, 18.5, 15.44, 12.61,
          16.22, 20.44, 15, 11.22, 10.94, 19.11, 22.78, 13.56, 12.78, 13.89, 
         13.67, 16.78, 20.83, 21.78, 18.78, 19.44, 14.89, 14.28, 14.22, 19, 
         22.56, 19.28, 18.61, 19.72, 22.94, 22.67, 21.33, 20.78, 22.5, 22.56, 
         23.56, 26.78, 22.72, 22.22, 24.22, 22.28, 19.28, 17.22, 20.28, 20.44,
          24.33, 19.89, 16.39, 20.56, 23.06, 22.56, 20.78, 22.44, 23.61, 
         23.67, 23.83, 21.39, 21.5, 22.06, 22.11, 21.17, 23, 20.44, 23.61, 
         21.78, 22.44, 24, 24, 22.78, 21.94, 23.22, 23.33, 26.11, 23.06, 
         21.67, 22, 21.44, 22.61, 22.28, 23.67, 22.78, 23.89, 23.94, 23.06, 
         25.44, 24.94, 24.17, 22.5, 25.89, 25.28, 24.44, 23.67, 26.44, 28.17, 
         26.78, 26, 28.06, 27.78, 25.44, 22.5, 22.67, 27.89, 26.22, 26.06, 
         26.44, 27, 24.44, 26.83, 24.61, 26.22, 28.33, 27.61, 27.06, 27.22, 
         24.78, 26.11, 25.56, 26.78, 26.83, 27.33, 26.39, 24.39, 26.56, 28.5, 
         28.61, 27.56, 25.89, 23.78, 23.89, 27.28, 26.22, 28.56, 27.44, 28.94,
          27.89, 27.67, 29.44, 29.06, 29.56, 27.67, 26.72, 27.22, 29.33, 
         28.39, 26.5, 28.83, 29, 27.61, 28.44, 25, 24.89, 26.94, 25.83, 27.39,
          27.56, 28.28, 27, 29, 28.83, 27.33, 27.89, 25.17, 26.78, 27.33, 
         27.94, 27.78, 27.94, 28.44, 28.89, 29.06, 29, 27.94, 24.06, 27.94, 
         24.89, 27.17, 27.06, 26.39, 28, 28, 25.39, 26.56, 24.28, 28.78, 
         28.33, 27.17, 26.17, 25.33, 27.22, 27.39, 27.11, 26.39, 27.06, 27.33,
          27.61, 27.89, 29.39, 28.67, 29.33, 28.67, 29.5, 28.33, 28.89, 29.06,
          27.56, 26.56, 26.28, 26.22, 26.33, 26.5, 27.61, 27.33, 28.61, 28.28,
          27.83, 27.61, 27.17, 26.5, 26.83, 27, 26.78, 26.06, 26.67, 27.83, 
         28.72, 27.33, 26.06, 23.22, 27.44, 27.61, 27.67, 25.22, 25.72, 25, 
         26, 20.56, 22, 24.28, 22.5, 24.83, 21.28, 17.28, 20.28, 20.11, 21.67,
          22.44, 23.22, 20.17, 17.72, 22.33, 23.33, 25.28, 25.61, 23.61, 
         24.78, 20, 22.72, 23.44, 24.94, 21.5, 14.33, 11.56, 16.72, 19.89, 
         20.67, 18.72, 15.83, 18.11, 19.11, 21.44, 21.5, 17.22, 9, 9.56, 15, 
         20.67, 24.11, 24.83, 21.22, 15.67, 9.33, 12.72, 15.06, 20.17, 15.44, 
         9.17, 8.11, 12.72, 19.5, 20.06, 16.33, 13.33, 14.06, 15.94, 16.61, 
         17.11, 11.61, 12.06, 10, 15.83, 15.06, 17.44, 22.17, 22.61, 22.83, 
         21, 22.56, 22.06, 22.22, 22.44, 17.61, 14.5, 17.17, 19.11, 18.56, 
         13.28, 13.44, 14.11, 16.61, 20.56, 11.83, 9.33, 9.44, 14.28, 14.83, 
         19.72, 7.67, 8.11, 17.06, 21.5, 13.39, 10.17, 11.67, 9.83, 11.11, 12,
          7.22, 16.5, 17.28, 18.11, 17.22, 13, 15.22, 20.33, 20.89, 19.39, 
         19.89, 21.67, 22.22, 17.56, 11.06, 18.5, 16.78, 20, 22.78, 20.39, 
         22.11, 23.5, 23.17, 25.5, 25.78, 23.28, 16.78, 18.78, 19.78, 22.11, 
         21.28, 21.33, 22.39, 18.17, 11.17, 12.72, 17.83, 17.39, 21.78, 22.61,
          23, 20.83, 19.11, 19.06, 23.44, 18.11, 15.33, 15.94, 15.33, 18.22, 
         16.06, 15.56, 16.22, 18.89, 21.67, 18.22, 18.56, 18.22, 20.5, 21.67, 
         20.44, 19.11, 18.33, 16.78, 20.11, 25, 23.06, 22.72, 23.44, 21.83, 
         21.06, 22.28, 23.94, 26.33, 23.83, 20.61, 19.89, 20.33, 24.5, 18.17, 
         17.44, 18.83, 18.72, 19.78, 20.39, 24.89, 23, 20.22, 24.17, 25.44, 
         25.39, 24.22, 25.89, 25.67, 24.44, 23.78, 24.72, 25.67, 24.89, 26.28,
          23.56, 24.22, 24.44, 22.39, 22.56, 21.67, 24.72, 24.83, 22.11, 
         26.83, 27.28, 26.89, 26.33, 25.89, 26.89, 24.78, 25.39, 27.67, 26.89,
          25.33, 27.17, 29.56, 25.22, 28.67, 29.28, 28.61, 26.61, 24.5, 25.61,
          24, 22.61, 24.67, 25, 26.28, 23.89, 24.89, 26.17, 24.28, 24.22, 
         25.56, 23.5, 28.56, 28.89, 28.28, 28.39, 29.22, 26.5, 27.44, 26.5, 
         25.28, 24.28, 28.61, 29.22, 29.5, 28.67, 27, 26.06, 26.33, 27.28, 
         27.5, 25.39, 25.39, 25.5, 23.17, 27.56, 27.56, 27.28, 28.44, 25.33, 
         28.39, 28.11, 27.5, 24.22, 27.83, 27, 24.72, 24.11, 24.11, 27, 26.17,
          28.11, 27.5}, "DegreesCelsius", {{1}}}]]}, CompressedData["
1:eJxdnE2uJDtXRR8SosEsmEH45/jYQ0CixRBoINGi8TEIhs3eaSivQ+eptupd
V96dkV52eEX+07/957/++9/99ddff/t7/edf/uNv//X/0n//A9I//6P+MFY/
X5z+fX9im7EQ+9Bfvjjanojzm5vxNA4VmRxqrcmhMj4OtcfiUPcf/t849HNn
MTq92HafiH3tjTgiONScjUNF3xxqtcmh8vs4VO7kUDsHh/q9qD+xfXNhqNZG
x1CtN9Q+ml7IYjydQ83cHCrW5FArGofKkRzq182Lp30c6hzUrso3a+9tsfbe
g7X3MVl7n52192isva+Ptd+36MVM1t73Yu26sFi73lHWPvzLI/aPteuHWfsY
ydrHXKz9XikvrsHaR3bWPnZj7WMf1j7OZu1TVxKGmnoLMZR6ZO0KrP1esC/G
x9pnbNY+V7L2mYu1zz1Z+zyDtWtg1h7tY+3RDmu/n5sXx2LtMYO1RwzWHquz
9sjG2iMPa9fvx9rjJGtfX7D2+/F9sQ/W7s8KhtILZu36ULH29Rv4xbVY+8rJ
2tcerH2dztrvLIJ4WHu2zdqzL9aerhbx9/u9GJ21691m7bkOa8/crP1OZi+e
YO1bEyWG2m2w9t0ba9+/mhEPa9+6CjlULNa+12Ttd059cXfWvs/H2vc5rF1/
ydrP791+sQdr17XP2s/srP1EY+13akfcrP1ksvazidRxDpGqHyNS59eI1KmP
IGpXJFJ1vRKp8xLmxSBS57eIVM1ARKp/98OhNpE6v0OkzvYRqbM1InW2TqTO
C7oXJ5GqmY9IVSRSNQ6ROn8XGeImUqcmJNQ++0ekzt6I1Hl5+2InUmcfRKrm
YyJ19iBSZ19Eqq4bIlWRSDUUWbtmdtZ+sf9iI1LFASJ1CnWsXdcvax+TSJ2a
Rlm75i/WrnmEtesTy9rv6uNP1DCsXRcHa9ebxNrVDmufg0idyqxdlGDtcxGp
ikTqvIugFzeROuchUgVJItVvJ2uPTqTOGESqIpE6YxKpM4JInXct9mISqYIz
kTrjEKmKROr8vUOIjUidYiZr9xIDQ/ki5VBBpCoSqXMtIlVLBiJ1rk2k6k0g
Umd+ROrMRqT6omLtmhZZ+12ZvjiJVLVMpIoZROrUFMvacxOpikTq1AqCte+P
SJ27EanzLpBfHESqVkxEqiKROncQqXMvIlVXKJGq345I1WqDSJ3nI1LnXacj
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
EKm+v87aR/GRziw+0pnFRzqz+EiKRKpWiETqmcVH0j9DpJ5ZfCTPoax9Fh/p
zOIjnVl8JO1+iVStTIlUvQVE6oniI50oPtKJ4iP5tIG1R/GRThQfyRcoa4/i
I+n1E6naSxCpZxUfSTMQkXpW8ZHOKj7SWcVHOqv4SGcVH+ms4iOdVXyks4qP
dLL4SJraiFQt1IhUn72w9iw+0sniI50sPpLYRKRqu0Ckniw+0j0cfXEXH0mR
SPUREGvfxUc6u/hImtiJVC3xiVTtWohURSL17OIjCQtE6tnFR/LJE2s/xUc6
p/hI5xQfSZFI1eaJSNWMQ6SeU3wk0YlI1eaQSPWBGGs/9JG01KSP5DuOQKoi
fSRF+kiK9JEU6SM5AqmK9JEU6SN5xQuk+k4nkJpfo4/k2wpAqiJ9JEcgVZE+
kiJ9JEX6SOnjweBQ9JF8wxVIdQRSFekjpZY1QKoifaS8ezZE+ki+fdFYe6eP
pEgfSZE+km8DB2vv9JEU6SNZ82qsfdBHcjysfdBH+i2IWfugj+Tbz4O1D/pI
ivSRHA9rH/SRFOkj+fMXrH3SR0qf2bL2SR/Jd8E/1j6pJylST1KknqRIPUmR
epIi9STNsNSTHA9rD+pJ9hUWaw/qSYrUkxSpJ/2mctYe1JMUqScpUk9Kn2Cz
9kU9yWcCnbUv6kmK1JMcN2tf1JPymi6I1JMUqSelD9JZ+6Ke5HhYe1JPUqCe
ZIckWHtST1KknuSTtsbak3pS+jyftSf1JL+IYO1JPUmXOvUkRepJitSTHDdr
39STFKknpbUC1r6pJ/mgprP2TT3J8bD2TT0pv0M9SZF6kiL1JEXqSX7yobH2
Qz1JkXqSj4+StR/qSYrUk9IHYKi9fdSTFKknOQKpackCtQspQKpXU0CqIvUk
RepJitSTHInUewMOkXpStkY9Ke16oHb1RqS2Rj3JkUhtjXqSIvUkO7tEamvU
kxSpJylST/oNg9oVidTWqSf5TI9IbZ16kiL1JEXqSYrUkxyJ1NapJ6XNF9be
qSf5LJFIdXOsfVBPciRS26CepEg9SZF6km97EqlaXxCpbVBP8pEmkapIpApd
RGqb1JN+63LWPqknKVJPUqSe5EikatVDpLZJPckHrURqm9STsgX1JEXqSfcM
62MkUrXoIVKtI7H2oJ7kA14i1Zczaw/qSY5EagvqScIA9SRrE0RqW9ST0qWz
9kU9yZFIbYt6kiL1JEXqSfYTiNS2qCdlS+pJitSTHIlULUWJ1JbUk3z6TaS2
pJ6kSD1JkXqSI5HaknqSIvUkP8ZGpLZNPcmn7kSq5hgiVZFI1ZtLpNpmYO2b
epK7IFI1sxOpVtVY+6Ge5EikaqojUtUMkdoO9SRF6kl5T1MQqSc5Eqk25lj7
oZ6kSD3J/ySRqjUBkdo/6kmORGr/qCcpUk9SpJ70u1U9OBT1JKsQRGr/qCc5
Eqm9UU9SpJ6kSD1JkXqSIvWktD+YHIp6kndhRKr5szgU9SRF6knZO/UkRepJ
jkRq79STFKknKVJPshhCpAqDRKr2IUSqBiZSfZOFtXfqSdkH9SRF6km+pUak
9kE9yX4KkapIpOonidQ+qCcpUk/Ku8hDpJ6UeoFEqqVO1j6pJylST7I1Q6T2
ST1JkXqSIvUkRepJjkSqrjki1QRl7UE9ydsDIlVrEyK1B/UkRyJVbz6R2oN6
kiL1JEXqSWnFlbUH9SRLQ0SqpyfWvqgnKVJPUqSe5LNvIrUv6kmK1JMcidS+
qCcpUk+yykSk9qSepEg9Kf3LsvaknmSwEak9qSelhV/WntSTrFARqVowEqk9
qSc5Eqn6QSL1Ho0jUk9SpJ6U9o5Z+6ae5Eiket3K2jf1JEXqSX6ajkjth3qS
IvUkRyLV546s/VBPUqSeZL+MSNVbQqRqQiJS+6Ge5EikajFNpI6PelLawkbt
46OeZK+NSPUUujgU9SRF6kmK1JMUqScpUk9SpJ6kRTv1JEcidTTqSV7hE6mj
UU9SpJ70u2N+OBT1JEXqSY5Eqp304FDUk2z5Eama94nU0aknKVJPciRS744d
kXqSIvWktBrP2jv1JMuGRKq3Vqx9UE9SpJ6kSD1JkXqShWYidQzqSemriLUP
6km+10OkaodHpI5BPSnFTCJ1TOpJitSTHIlUvUYi1Q8KsPZJPcnqJZHqtSZr
n9STHIlUkZxIHUE9SZF6kiL1JH/BBJE6gnqSDVAiVZFI1bVOpI6gnpQGOWsP
6kmeX4nUsagnORKpY1FPyrGoJ+XvKW0ORT0pf4+GcCjqSXkHYiRSf6deGCqp
J+VvM42hknpS/j6yGCqpJzkSqVpeEakjqScpUk9SpJ70k0hY+6ae5Eikjk09
yXwlUsemnqRIPUmRepIi9SRF6kmOROrY1JMUqSdZFiZSx6Ge5BmGSNVsRaSO
Qz1JkXqSIvUkRepJitSTLCkTqeNQT3IkUvUXRKqPP1H7/KgnKVJP8qVApPrJ
nuBQ1JMcidT5UU/y6pFI1VqbSJ2NelLe26+I1JMciVQ/YHQ4FPUkRepJNriJ
VE0iRKqW/ESqIpE6G/UkP51CpM5OPSl9b4u1d+pJvhVApM5OPcmRSJ2depIi
9SRF6kmK1JNS+CFS/bgVax/UkxSpJ9lnJ1LnoJ6kSD1JkXqSIvUkRyJVwCFS
56Ce5KuGSJ2TepIi9SR71USqtmFEqndlrH1ST/ItJyJ1TupJ6YfPWPuknmSd
n0hVJFJnUE9SpJ6kSD0pLxUQqSf5zI5I9TNwrD2oJylST/JDBkTqXNSTFKkn
+XsuiNS5qCc5EqlzUU/6GYGsfVFP8sMNROpc1JMUqSc5EqkzqScpUk+yj0Gk
zqSelH4ikLUn9SQ/Y0Gk+vdh7Uk9SZF6kiL1JF021JMUqScpUk9yJFJ1lRGp
c1NP8pMfROrc1JMUqSf9rl7WvqknKVJPEtepJxnzRKoudiJ1HupJitSTFKkn
ORKpuhKI1HuWhkg9SZF6UvoxTdQeH/UkRyLVt/lRe3zUk7wyIVK13SVS46Oe
5EcNiVRFItUHFYNDUU/yKSyRGo16kiL1JF+RRGo06kmORKroS6RqL0Gk+qHV
5FDUk/wYEJHqfxO1KxKp0aknKVJPUqSepEg9SZF6kr/6jUhVJFKjU0/yw0lE
qnahRGoM6knpW2ysfVBPUqSe5Eik+hFe1j6oJ/kWIpEag3qSIvUkRepJjkTq
XeIjFj0pZtGT/CQxa59FT4pZ9CSfRLH2WfSkmEVPiln0pJhFT9IUQ6RGFD3J
0wJrj6InRRQ9KaLoSRFFT4ooelJE0ZMiip6kSKRqS0ek+rlq1r6KnhSr6EmG
E2tfRU+KVfSkWEVPilX0pFhFT4pV9KRYRU+KLHpSZNGTIoueFFn0pMiiJ/mT
z9qz6El6c4lUbdKIVD9lztqz6EmRRU/Sm0Ckxi56UuyiJ8UuetIVIxiJVNVK
pPphd9a+i54Uu+hJPixl7afoSYpEapyiJ8UpepL290RqnKIn+dSZtZ+iJ8Up
elKcoifpCiVS4xQ9ST9HpK6v6EnrK3rS+oqe5Ef/k0MVPWl9RU/ykd7iUEVP
EjKIVP16ROr6ip60WtGTNJUTqVqYEqlaThKpqxU9SR9QIlWRSNX0S6T6vORw
qKInrVb0pNWLnuQvQmDtvehJqxc9afWiJ2naIFK1pSFSVy960r1fg1j0JEUi
1d/HwNpH0ZPWKHqSz/NZ+yh6kr+Zl7WPoietUfSkNYqetEbRk7wZZu2j6Elr
Fj3J37DJ2mfRk/ydkqx9Fj1pzaIn+esLWfssepK/nYK1z6InrVn0JO80WHsU
Pcnflcbao+hJK4qe5K/lYu1R9CR/8xRrj6InrSh6kr/kiLVH0ZP8tT6sfRU9
aa2iJ/kbZFj7KnqSv6uDta+iJ61V9CR/PQdrX0VP8vdTsPZV9KR7GSEWPclf
OsDas+hJfuqetWfRk6ycsPYsepIfpWbtWfSklUVP8lO7rH0XPckKEWvfRU9a
u+hJfiSSte+iJ/khQNa+i560dtGT/LwZa99FT/IDV6z9FD1p3WU7IpHqp2hY
+yl6kh8jYe2n6El+cIK1n6In+dkA1n6KnpRf0ZOsoaN26+Co3eI1avd1dDhU
0ZPs+HYOVfQkW63BoYqelF/RkyxQonabi6jdBiFqt6uH2u/Nd8SiJ1kL6xyq
6En2ooJDFT3JJtDmUEVPsuyC2i2dsPZe9CR7Fay9Fz3JdzZZey96UvaiJ/nQ
mrX3oif5mJa1j6In5Sh6kk8EWfsoepKPxFj7KHpS3p3l9z8DSVGT
    "], 1, {
    "Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.775859865867455*^9, 3.7758598789248047`*^9}, 
   3.7758606863497057`*^9, {3.775860841102602*^9, 3.775860863835128*^9}, {
   3.775860897208123*^9, 3.775860907607193*^9}, 3.7759042385133953`*^9, 
   3.777226378421563*^9, 3.7772270566935062`*^9, 3.777235348719771*^9, 
   3.777235574747532*^9, 3.778273582901844*^9, 3.779280283693385*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"5df7a8f2-358f-4554-b5bf-727c4de45b88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tsData2", "=", 
  RowBox[{"WeatherData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Boston\>\"", ",", "\"\<MA\>\""}], "}"}], ",", 
    "\"\<Temperature\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "07", ",", "31"}], "}"}], ",", "\"\<Day\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.775859811829064*^9, 3.775859875610491*^9}, {
  3.775860665220282*^9, 3.775860666411714*^9}, {3.775860832235526*^9, 
  3.7758608629863243`*^9}, {3.775860906336584*^9, 3.7758609069746857`*^9}, {
  3.777226990376522*^9, 3.777227025588318*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"de6a930b-be4a-4784-a9d2-c17c1f9c940c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jul 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1672", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jul 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1672", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     QuantityArray[
      StructuredArray`StructuredData[{
       1672}, {{-3.28, 1.33, -2.06, 3.5, 
         4.22, -8.17, -7.33, -12.89, -7.61, -4.44, -7.56, -0.44, 
         2.22, -8.5, -4.22, -2.39, -7.39, -6.28, 7.94, 
         1.22, -1.33, -0.67, -0.17, -0.33, 
         0.06, -4.94, -3.89, -9.94, -6.83, -2.11, -3.44, -7.06, -6.72, -11, \
-8.67, 2.33, -12.11, -7.78, -2.33, -9.83, -9.11, -3.5, -7.28, -4.78, -11.72, \
-4.39, -16.5, -9.67, -5.89, -2.89, -10.17, -8.5, 
         0.39, -0.44, -13.17, -8.67, -3.56, -6.33, -6.22, -5, -0.83, -3.67, 
         2.39, 0.78, -8, -6.56, -0.17, 0.39, 4.72, 4.06, 3.89, -2.61, 0.61, 
         2, -1.78, 2.78, -1.28, -5.39, -2.11, -2.67, 
         2.94, -4.89, -2.61, -0.56, 2.89, 7.44, 3.78, 0, 1.22, 4.78, 3.89, 
         3.33, 10.67, 9.11, 2.94, 3.39, 4.11, 2.78, 1.94, 2.17, 12.22, 7.44, 
         11.33, 14.83, 14.78, 10.39, 12, 12.22, 7.78, 6.17, 13.11, 13.11, 
         8.44, 4.89, 6.11, 8.56, 10.44, 9.33, 13, 9.83, 7.44, 4.78, 11.83, 
         11.78, 20.44, 13.11, 15.89, 19.44, 8.33, 17.06, 24, 10.22, 19.33, 
         12.78, 14.89, 16.33, 16.06, 12.44, 10.33, 17.17, 11.83, 13.89, 14.94,
          13.89, 20.44, 19.72, 22.94, 21.22, 22.67, 14.39, 22.11, 9, 8.28, 
         8.22, 10, 11.11, 12.56, 16.11, 15.17, 19.28, 19.44, 24.28, 25.44, 
         21.94, 21.67, 17.39, 12.94, 19.56, 16.78, 18.06, 19.44, 18, 17.11, 
         18.11, 24.89, 23.72, 22.39, 16.17, 15.83, 11.89, 19.89, 21.17, 22, 
         22.83, 20, 17.67, 23.94, 21.83, 24.33, 20.33, 19.44, 23.44, 25.44, 
         26.78, 19.89, 22.17, 20.11, 17.44, 21.06, 22.11, 26.17, 28.11, 24.61,
          23, 22.83, 19.89, 17.17, 22.33, 24, 23.33, 28.39, 26.39, 25.94, 
         25.56, 23.44, 24.5, 21.83, 22.72, 22.78, 18.22, 18.11, 17.89, 20, 
         23.67, 23.67, 22, 22.67, 22.5, 26.56, 26.22, 24.39, 23.28, 20.72, 
         23.22, 19.61, 20.72, 21.94, 22.78, 22.83, 21.5, 20.67, 22.78, 25.39, 
         24.22, 21.22, 24.67, 22.44, 21.39, 25.11, 27.33, 23.5, 25.44, 18.33, 
         18.11, 18.28, 18.06, 21.39, 22.44, 21.67, 23.17, 20.89, 20.67, 16.33,
          15.44, 16.11, 16.33, 16.61, 14.39, 12.5, 15.56, 20.56, 21.83, 14.28,
          13, 11.11, 11.94, 10.89, 11.39, 13.06, 16.5, 11.56, 16.11, 10.11, 
         14.22, 14.89, 17.5, 12.22, 11.06, 10.67, 5.78, 1.94, 7.5, 15.22, 
         12.11, 12.11, 6.22, 11.94, 11.22, 6.89, 7.5, 16.11, 13.44, 7.22, 
         11.61, 12.56, 11, 15.56, 11.67, 18.06, 19.44, 10.5, 8.83, 9.22, 10, 
         8, 12.78, 8.5, 3.11, 10.67, 5.33, 2.78, 5.67, 11.72, 7.78, 4.44, 
         5.17, -0.22, 3.33, 4.33, 9.22, 13.33, 5.11, 0.67, 2.83, 6.06, 9, 
         5.89, 6.89, 6.5, 7.22, 5.61, 4.22, 8.94, 7.78, 10.83, 11.61, 8.17, 
         11.89, 9.94, 4.33, 10.33, 4.33, 0.83, 1.11, 10.94, 13.39, 9.28, 
         15.11, 13.89, 7.28, 1.94, -0.83, -3.67, 1.33, 3.94, 1.67, 
         2.22, -1.06, -8.89, -1.22, 0.56, 0.11, 4.39, 4.22, 
         11.06, -3.78, -1.56, -5.33, -2.72, 5.06, 
         3.5, -1.61, -6.67, -6.78, -2.61, -4.89, -3.39, -6.17, -0.33, -1.06, 
         6.83, 1, 0.94, 2.17, 2.89, 9.89, 7.39, 2.72, 12.89, 
         7.61, -2.94, -0.83, 3.5, -6.56, -3.56, 
         0.17, -10.67, -5.78, -18.22, -13.72, -0.5, 8.17, 1.94, -3.5, 0.78, 
         8.89, 6.22, -0.44, 2.5, 10.28, 6, -2.5, 1.5, 7.06, 5.33, 
         3.83, -3.44, -2.11, -2.72, -0.22, -0.11, 6.61, 12.44, 16.67, 8.89, 
         7.33, 12.44, 8.44, 4.89, 5.78, 7.11, 9.06, 4, 1.44, 0.78, 3.67, 6.17,
          5.78, 3.22, 6.56, 1.72, 3.44, 6.89, 4.17, 5.94, 17.22, 16.06, 
         3.28, -1.67, -3.28, -0.89, 5.11, 10.5, 3.33, 3.22, 6.22, 12.67, 6.83,
          6, 5.39, 7.33, 6.33, 8.72, 8.22, 10.56, 7.78, 16.39, 17.33, 11.22, 
         7.56, 11.22, 3.22, 10.33, 8.06, 7.44, 8.89, 6.44, 8.28, 7.72, 6.83, 
         7.56, 7.89, 8, 10.94, 10.94, 16, 16.17, 15.67, 17.11, 16.44, 8.17, 
         11.94, 13.5, 12, 12.33, 16.11, 14.44, 11.83, 14.78, 11.72, 22.44, 
         15.33, 20, 26.33, 11.94, 20.11, 20.44, 14.11, 14.11, 18.56, 19.17, 
         18.56, 22.22, 19.11, 15, 15.44, 15.11, 17.67, 13.11, 17.33, 19.89, 
         22.11, 16.94, 18.94, 16.06, 17.94, 19.44, 22.78, 20.33, 18.11, 17.33,
          17.44, 20, 21.44, 21.89, 22.67, 24.11, 21.61, 20.67, 22.39, 22.67, 
         20.56, 26.83, 16.72, 16.61, 15.67, 15.78, 20.44, 23.33, 23.06, 24.56,
          27.56, 26.89, 20.17, 25.94, 21.78, 23.56, 25.67, 26.83, 22.56, 21.5,
          26.39, 28.22, 27.56, 24.78, 23.83, 21.94, 21.44, 21, 21, 21.11, 
         21.28, 22.33, 25.67, 25.17, 23.94, 23.61, 28.56, 28.06, 27.89, 20.33,
          29.22, 23.33, 25.56, 23.78, 27.33, 20.67, 21.33, 21.33, 19.56, 22, 
         24.28, 24.33, 27.56, 21.89, 21.89, 21.94, 21.78, 23.56, 22, 18.61, 
         16.89, 17.11, 16.89, 18.94, 20.89, 26.22, 23.94, 24.17, 19.06, 18, 
         19.67, 17.89, 14.89, 18.5, 19.22, 23.11, 20.89, 22.33, 21.67, 20.94, 
         15.44, 14.28, 13.56, 17.28, 16.56, 14, 14.06, 13.83, 12.78, 15.33, 
         15.11, 11.11, 12, 15.5, 15.33, 18.22, 9.89, 8.89, 10.44, 12, 15.22, 
         9.78, 9.22, 16.78, 18.33, 20, 18.89, 16.89, 17.94, 7.22, 12.28, 8.67,
          4.56, 3.44, 8.94, 8.44, 13, 8.39, 5.78, 12.61, 12.67, 12.11, 7.22, 
         9.06, 6.44, 4.94, 8.5, 8.83, 9.11, 4.78, 5.78, 9.83, 11.28, 12.39, 
         10.56, 7.78, 8.89, 7.83, 0.83, 0.33, 1.39, 1.5, 4.72, 5.61, 4.83, 
         3.83, 4.39, 12.94, 10.06, 6.94, 6.11, 2.39, 0.44, 3.78, 4.39, 3.89, 
         1.33, -3.61, -5.56, 2.28, 3.33, 3.39, -2.67, -8.17, -6.56, 1.28, 
         1.83, -6.39, 0.94, 1.56, 2.11, 3.33, 4.89, -1.5, 5.67, 4.44, 1.11, 
         2.33, -0.56, 4.44, 1.72, 5.17, 
         5.89, -0.06, -1.83, -5.17, -7.89, -8.89, -8.28, 3.78, 5.39, 
         13.06, -2.06, -1.22, -2.33, 1.5, 2.78, 0.5, 4.17, 3.39, 8.33, 4.5, 
         2.89, 2.11, 3.44, 5, 2.78, 1.28, 1.28, -3.11, 0.17, 
         2.17, -1.44, -3.22, -2.44, 2.06, 1.06, 2.83, 
         4.78, -10.17, -8.11, -6.61, 1.28, -3.78, -1.61, 1.5, -2.06, 0.44, 
         7.39, 9.83, 1.5, 3.39, 4.89, 11.39, 12.67, 11, 0.83, 5.72, 11.56, 
         14.28, 0, -3.72, -11.28, -5.39, -0.11, 8.33, 8.11, 
         4.56, -3.94, -9.22, -6.56, -2.44, -0.56, -5.22, -0.78, 0.83, 1.11, 
         2.11, 5.56, 7.33, -7, 0.78, 7.33, 2, 2.78, 3.33, 3.56, 3.78, 4.28, 
         1.83, 1.11, 8.89, 6.89, 4.67, 4, 7.94, 6, 7.89, 11.56, 13.72, 16.78, 
         13.22, 10.33, 12.61, 21.17, 20.67, 9.17, 7.06, 8.83, 7.06, 6.56, 
         8.83, 11.94, 9.11, 8.5, 11.56, 12.39, 21.33, 19.89, 8.28, 7.89, 
         13.67, 10.33, 10.11, 10.11, 13.22, 10.44, 8.11, 8.44, 10.11, 9, 9.22,
          9.11, 9.44, 13.44, 21.78, 25.56, 26.89, 17.44, 12.89, 13.89, 11.56, 
         14.78, 12.39, 10.5, 11.89, 12.78, 13.89, 9.5, 13.5, 19.11, 18.89, 
         16.17, 15.67, 14.83, 11.39, 9.83, 13.78, 13.89, 21.11, 22.89, 26.22, 
         28.44, 21.72, 16.11, 16.89, 16.28, 22.44, 24, 24.33, 23.56, 22.89, 
         23.78, 23.5, 24.89, 20.33, 20.22, 17.22, 20.67, 20.56, 24.5, 23.22, 
         26.11, 24.61, 21, 20.44, 20, 18.11, 22.22, 23.11, 23.78, 25.22, 
         21.83, 15.22, 16.83, 21.11, 22.89, 22.11, 26.22, 28, 24.33, 27.56, 
         24.56, 17.89, 14.67, 16.11, 19.44, 19.5, 21.22, 16.78, 18.83, 23.56, 
         22.56, 23.06, 22, 22.22, 21.89, 20.89, 19.11, 18.78, 22.67, 21.89, 
         20.78, 20.89, 24.11, 21.33, 23.67, 22.22, 21, 23.17, 19.89, 23.78, 
         25, 24.44, 22.44, 19.22, 19.22, 17.78, 17, 16.33, 17.22, 16, 16.94, 
         14.89, 15.78, 14.89, 19.89, 21.89, 18.94, 17.33, 17.33, 17.11, 19, 
         20.44, 22.44, 21.72, 21.78, 19.28, 17.06, 18.11, 17.78, 18.83, 21.06,
          18.44, 16.5, 16.11, 20.44, 18.67, 21.67, 24.11, 15.33, 13.83, 12.61,
          14.67, 13.78, 13.33, 17.89, 21.22, 19, 21.78, 21.78, 23.17, 19.67, 
         15.22, 10.22, 14.22, 18.11, 20.72, 8, 9.11, 13.78, 15.33, 16.5, 
         16.11, 13.22, 16.28, 21.39, 15, 9.61, 11.78, 14, 15.72, 10.72, 9.06, 
         11.44, 15.89, 13.56, 9.89, 14.56, 12.22, 4.33, 3.89, 
         6.94, -3.72, -0.11, 4.67, 3.11, 3.89, 3.78, 6.56, 1.78, 9.61, 3.78, 
         4.44, 9.72, 3.17, 1.83, 4.61, 9.89, 4.06, -1.67, 6.67, 5.22, 7.94, 
         4.33, 4.06, 4.61, 3.56, 13.78, 2.61, 3.17, 2.5, -0.22, 1.06, 
         1.56, -2, -5.22, -6.61, -3.78, -2.94, -4.22, 2.28, 8.5, 0.28, -2.94, 
         0.39, 3.67, 
         2.39, -2.11, -6.83, -10.17, -14.56, -12.78, -10.17, -14.67, -12.28, \
-6.22, -3.5, -8.22, -13.06, -15, -8.89, 0.22, 0.44, 0.44, 7.61, 
         14.44, -5.72, -8.44, -6.5, -0.11, -0.11, -3.5, -0.56, 5.5, 2.28, 
         3.61, 5.39, -2.61, -4.89, -2.5, 9.83, 6.67, -1.61, -3.61, 1.5, 
         3.28, -10.28, -3.89, 5, -3.22, -1.28, -1.22, -3.61, -0.94, 8.17, 
         3.33, 1.11, -2.22, 4.72, 8.33, 2.61, 0.39, 2, 9.56, 6.22, 15.28, 1, 
         3.06, 5, 4.72, 5.94, 5.78, 8.61, 5, 4.17, 3.94, 2.5, 2.33, 2.11, 
         0.94, 1.56, 1.22, 1.56, 3.06, 3.28, -0.61, 1.33, 
         2.33, -1.33, -5.67, -3.11, -0.78, 0.72, 3.33, 2.89, 4, 3.22, 0.5, 1, 
         3.33, 5.83, 6.94, 8.72, 8.72, 4.22, 1.22, 3.78, 6.56, 1.17, 4.89, 
         2.61, 2.33, 3.33, 3.06, 3.89, 8.44, 7.39, 4.06, 1.44, 9.56, 5.44, 
         7.33, 5.28, 5.56, 9.33, 10, 9, 11.44, 11.44, 12.33, 8.28, 14, 7.28, 
         10.78, 14.44, 23.39, 20.78, 23.22, 18.33, 10.28, 9.83, 14, 8.56, 
         16.56, 13.06, 9.72, 9.72, 15.56, 15.83, 10.78, 18.44, 9.11, 12.06, 
         19.56, 16.44, 17.33, 20.22, 13.44, 24, 16.78, 10.11, 13.5, 20.44, 
         16.44, 21.33, 22.72, 16.22, 11, 10.61, 13.17, 13.89, 15.11, 21.28, 
         19.78, 16.39, 18.5, 19.44, 22.44, 17.28, 20.89, 19.11, 19.78, 24.94, 
         22.89, 24.17, 18.78, 17.44, 15.61, 21.33, 16.44, 21.56, 21.33, 22.89,
          28.11, 27.94, 22.78, 28.94, 28, 28.56, 26.83, 20.89, 21.56, 21.22, 
         27.28, 26.44, 21.11, 19.33, 19.89, 22.06, 21.28, 24.94, 22.33, 23.44,
          20.56, 20.67, 19.39, 22.78, 24.56, 26.28, 25.33, 25.94, 25.83, 26, 
         24.39, 23.06, 23.72, 28.94, 28.11, 26.06, 25.39, 28.94, 29.89, 26.56,
          24.72, 26.28, 21.83, 21.17, 20.89, 22.5, 24.78, 28.67, 24.06, 25.67,
          20.78, 20.11, 19.39, 19.72, 22.67, 22.78, 22.39, 22.72, 26.94, 
         26.94, 31.72, 28.78, 21.39, 20.11, 22.17, 27.17, 28.78, 23.28, 24, 
         24.44, 19.61, 16.33, 17.67, 19.78, 20.11, 19.83, 20.44, 18.78, 19.06,
          24.28, 23.06, 18.94, 17.11, 17.22, 20.83, 15.17, 14, 13.56, 20.83, 
         23.17, 16.56, 17.17, 16.72, 16.61, 14.67, 15.06, 18.11, 16.61, 13.5, 
         16.83, 15.72, 19, 23.72, 18.61, 14.94, 10.94, 9.72, 11.89, 14.11, 
         11.33, 8.11, 5.33, 12.94, 11.5, 3.61, 6.83, 8.06, 5.28, 4.61, 8.61, 
         8.67, 11.11, 8.67, 6.94, 14.39, 11.72, 19.22, 8.89, 7.39, 10.83, 
         14.78, 10.94, 7.17, 9.56, 3.06, 2.89, 7.5, 5.28, -2.28, 2.11, 3.33, 
         5.61, 4.22, 3.94, 2.72, -3.39, -8.78, -1.67, 7.17, 7, 7.17, 3.67, 
         4.33, 3.5, 3.67, 6.56, 10.17, 4.22, -2.22, 0.44, 
         2.11, -2.78, -1.72, -0.72, -1.11, 0.78, -4.11, 0.94, 7.33, 5.72, 
         5.33, 0.39, -0.78, 1.44, 6.5, 12.56, 3.06, 1, 2.11, -1.06, 2, 0.94, 
         8.83, 0, -0.11, 8.44, 0.78, 3.11, 4.61, 5, 4.17, -3.33, 1.17, 3.33, 
         2.78, -2.89, -6.33, -6.22, -3.33, -1.11, -1.5, 1.17, -2.67, 
         3, -0.06, -8.44, -13.61, -4.67, 8, 5, -1.17, -0.78, 5.72, -2.78, 
         0.67, -9.11, -8.89, -8.11, 1.11, 2.44, 6.72, 7.28, 3.28, 
         6.06, -0.39, -1.22, 0, -3, 3.33, 1.28, 4.11, 
         8.22, -0.33, -0.72, -5.56, -4.33, -2.78, 5.06, 1.83, 3.67, 
         6.39, -0.89, -6.67, -5.78, -1.44, 0.17, 0.44, 
         1.61, -2.56, -3.89, -6.39, -2.89, -1.83, 0.72, 3.83, 4.06, 2.28, 
         3.67, 5.72, 12.33, 3.11, 0.61, 2.83, 2.67, 5.89, 5, 4.61, 2.94, 9.72,
          2.33, 2.33, 4.83, 8.56, 10.28, 14.39, 5.67, 5.33, 8.44, 7.83, 5, 
         8.61, 11.56, 12.22, 3.33, 4.33, 2.94, 7.44, 13.61, 15.22, 11.11, 
         8.22, 9.56, 8.67, 15.61, 19.11, 17.11, 13.72, 11.28, 8.39, 9.56, 
         9.06, 8.28, 7.5, 9, 9.56, 10.44, 10.56, 8.89, 11.22, 9.83, 9.89, 
         9.06, 14.44, 11.33, 12.94, 16.78, 13.33, 7.39, 6.89, 7.28, 13.17, 
         12.94, 16.56, 13, 22.61, 19.5, 16, 15.94, 18.39, 16.22, 15.83, 23.72,
          16.61, 11.78, 10.89, 15, 15.56, 12.56, 14.44, 16.67, 21.67, 20.94, 
         19, 19.44, 17.67, 17.94, 18.72, 19.11, 16.83, 12.83, 18.44, 21.89, 
         18.83, 20.17, 16.67, 19.78, 20.22, 20, 19.33, 24.61, 18.06, 20.89, 
         17.22, 18.89, 26.22, 23.61, 21.67, 25.39, 25.72, 26.33, 24.33, 24.61,
          23, 21.56, 25.44, 26.33, 23.67, 23.11, 22.78, 25.94, 25.89, 24.67, 
         27.11, 25.33, 23.22, 31.39, 32.22, 30.89, 19.67, 21.44, 21.89, 22.44,
          22.78, 22.78, 27.78, 29.22, 27.78}, "DegreesCelsius", {{
        1}}}]]}, CompressedData["
1:eJxdnE2uJDtXRR8SosEsmEH45/jYQ0CixRBoINGi8TEIhs3eaSivQ+eptupd
V96dkV52eEX+07/957/++9/99ddff/t7/edf/uNv//X/0n//A9I//6P+MFY/
X5z+fX9im7EQ+9Bfvjjanojzm5vxNA4VmRxqrcmhMj4OtcfiUPcf/t849HNn
MTq92HafiH3tjTgiONScjUNF3xxqtcmh8vs4VO7kUDsHh/q9qD+xfXNhqNZG
x1CtN9Q+ml7IYjydQ83cHCrW5FArGofKkRzq182Lp30c6hzUrso3a+9tsfbe
g7X3MVl7n52192isva+Ptd+36MVM1t73Yu26sFi73lHWPvzLI/aPteuHWfsY
ydrHXKz9XikvrsHaR3bWPnZj7WMf1j7OZu1TVxKGmnoLMZR6ZO0KrP1esC/G
x9pnbNY+V7L2mYu1zz1Z+zyDtWtg1h7tY+3RDmu/n5sXx2LtMYO1RwzWHquz
9sjG2iMPa9fvx9rjJGtfX7D2+/F9sQ/W7s8KhtILZu36ULH29Rv4xbVY+8rJ
2tcerH2dztrvLIJ4WHu2zdqzL9aerhbx9/u9GJ21691m7bkOa8/crP1OZi+e
YO1bEyWG2m2w9t0ba9+/mhEPa9+6CjlULNa+12Ttd059cXfWvs/H2vc5rF1/
ydrP791+sQdr17XP2s/srP1EY+13akfcrP1ksvazidRxDpGqHyNS59eI1KmP
IGpXJFJ1vRKp8xLmxSBS57eIVM1ARKp/98OhNpE6v0OkzvYRqbM1InW2TqTO
C7oXJ5GqmY9IVSRSNQ6ROn8XGeImUqcmJNQ++0ekzt6I1Hl5+2InUmcfRKrm
YyJ19iBSZ19Eqq4bIlWRSDUUWbtmdtZ+sf9iI1LFASJ1CnWsXdcvax+TSJ2a
Rlm75i/WrnmEtesTy9rv6uNP1DCsXRcHa9ebxNrVDmufg0idyqxdlGDtcxGp
ikTqvIugFzeROuchUgVJItVvJ2uPTqTOGESqIpE6YxKpM4JInXct9mISqYIz
kTrjEKmKROr8vUOIjUidYiZr9xIDQ/ki5VBBpCoSqXMtIlVLBiJ1rk2k6k0g
Umd+ROrMRqT6omLtmhZZ+12ZvjiJVLVMpIoZROrUFMvacxOpikTq1AqCte+P
SJ27EanzLpBfHESqVkxEqiKROncQqXMvIlVXKJGq345I1WqDSJ3nI1LnXacj
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
EKm+v87aR/GRziw+0pnFRzqz+EiKRKpWiETqmcVH0j9DpJ5ZfCTPoax9Fh/p
zOIjnVl8JO1+iVStTIlUvQVE6oniI50oPtKJ4iP5tIG1R/GRThQfyRcoa4/i
I+n1E6naSxCpZxUfSTMQkXpW8ZHOKj7SWcVHOqv4SGcVH+ms4iOdVXyks4qP
dLL4SJraiFQt1IhUn72w9iw+0sniI50sPpLYRKRqu0Ckniw+0j0cfXEXH0mR
SPUREGvfxUc6u/hImtiJVC3xiVTtWohURSL17OIjCQtE6tnFR/LJE2s/xUc6
p/hI5xQfSZFI1eaJSNWMQ6SeU3wk0YlI1eaQSPWBGGs/9JG01KSP5DuOQKoi
fSRF+kiK9JEU6SM5AqmK9JEU6SN5xQuk+k4nkJpfo4/k2wpAqiJ9JEcgVZE+
kiJ9JEX6SOnjweBQ9JF8wxVIdQRSFekjpZY1QKoifaS8ezZE+ki+fdFYe6eP
pEgfSZE+km8DB2vv9JEU6SNZ82qsfdBHcjysfdBH+i2IWfugj+Tbz4O1D/pI
ivSRHA9rH/SRFOkj+fMXrH3SR0qf2bL2SR/Jd8E/1j6pJylST1KknqRIPUmR
epIi9STNsNSTHA9rD+pJ9hUWaw/qSYrUkxSpJ/2mctYe1JMUqScpUk9Kn2Cz
9kU9yWcCnbUv6kmK1JMcN2tf1JPymi6I1JMUqSelD9JZ+6Ke5HhYe1JPUqCe
ZIckWHtST1KknuSTtsbak3pS+jyftSf1JL+IYO1JPUmXOvUkRepJitSTHDdr
39STFKknpbUC1r6pJ/mgprP2TT3J8bD2TT0pv0M9SZF6kiL1JEXqSX7yobH2
Qz1JkXqSj4+StR/qSYrUk9IHYKi9fdSTFKknOQKpackCtQspQKpXU0CqIvUk
RepJitSTHInUewMOkXpStkY9Ke16oHb1RqS2Rj3JkUhtjXqSIvUkO7tEamvU
kxSpJylST/oNg9oVidTWqSf5TI9IbZ16kiL1JEXqSYrUkxyJ1NapJ6XNF9be
qSf5LJFIdXOsfVBPciRS26CepEg9SZF6km97EqlaXxCpbVBP8pEmkapIpApd
RGqb1JN+63LWPqknKVJPUqSe5EikatVDpLZJPckHrURqm9STsgX1JEXqSfcM
62MkUrXoIVKtI7H2oJ7kA14i1Zczaw/qSY5EagvqScIA9SRrE0RqW9ST0qWz
9kU9yZFIbYt6kiL1JEXqSfYTiNS2qCdlS+pJitSTHIlULUWJ1JbUk3z6TaS2
pJ6kSD1JkXqSI5HaknqSIvUkP8ZGpLZNPcmn7kSq5hgiVZFI1ZtLpNpmYO2b
epK7IFI1sxOpVtVY+6Ge5EikaqojUtUMkdoO9SRF6kl5T1MQqSc5Eqk25lj7
oZ6kSD3J/ySRqjUBkdo/6kmORGr/qCcpUk9SpJ70u1U9OBT1JKsQRGr/qCc5
Eqm9UU9SpJ6kSD1JkXqSIvWktD+YHIp6kndhRKr5szgU9SRF6knZO/UkRepJ
jkRq79STFKknKVJPshhCpAqDRKr2IUSqBiZSfZOFtXfqSdkH9SRF6km+pUak
9kE9yX4KkapIpOonidQ+qCcpUk/Ku8hDpJ6UeoFEqqVO1j6pJylST7I1Q6T2
ST1JkXqSIvUkRepJjkSqrjki1QRl7UE9ydsDIlVrEyK1B/UkRyJVbz6R2oN6
kiL1JEXqSWnFlbUH9SRLQ0SqpyfWvqgnKVJPUqSe5LNvIrUv6kmK1JMcidS+
qCcpUk+yykSk9qSepEg9Kf3LsvaknmSwEak9qSelhV/WntSTrFARqVowEqk9
qSc5Eqn6QSL1Ho0jUk9SpJ6U9o5Z+6ae5Eiket3K2jf1JEXqSX6ajkjth3qS
IvUkRyLV546s/VBPUqSeZL+MSNVbQqRqQiJS+6Ge5EikajFNpI6PelLawkbt
46OeZK+NSPUUujgU9SRF6kmK1JMUqScpUk9SpJ6kRTv1JEcidTTqSV7hE6mj
UU9SpJ70u2N+OBT1JEXqSY5Eqp304FDUk2z5Eama94nU0aknKVJPciRS744d
kXqSIvWktBrP2jv1JMuGRKq3Vqx9UE9SpJ6kSD1JkXqShWYidQzqSemriLUP
6km+10OkaodHpI5BPSnFTCJ1TOpJitSTHIlUvUYi1Q8KsPZJPcnqJZHqtSZr
n9STHIlUkZxIHUE9SZF6kiL1JH/BBJE6gnqSDVAiVZFI1bVOpI6gnpQGOWsP
6kmeX4nUsagnORKpY1FPyrGoJ+XvKW0ORT0pf4+GcCjqSXkHYiRSf6deGCqp
J+VvM42hknpS/j6yGCqpJzkSqVpeEakjqScpUk9SpJ70k0hY+6ae5Eikjk09
yXwlUsemnqRIPUmRepIi9SRF6kmOROrY1JMUqSdZFiZSx6Ge5BmGSNVsRaSO
Qz1JkXqSIvUkRepJitSTLCkTqeNQT3IkUvUXRKqPP1H7/KgnKVJP8qVApPrJ
nuBQ1JMcidT5UU/y6pFI1VqbSJ2NelLe26+I1JMciVQ/YHQ4FPUkRepJNriJ
VE0iRKqW/ESqIpE6G/UkP51CpM5OPSl9b4u1d+pJvhVApM5OPcmRSJ2depIi
9SRF6kmK1JNS+CFS/bgVax/UkxSpJ9lnJ1LnoJ6kSD1JkXqSIvUkRyJVwCFS
56Ce5KuGSJ2TepIi9SR71USqtmFEqndlrH1ST/ItJyJ1TupJ6YfPWPuknmSd
n0hVJFJnUE9SpJ6kSD0pLxUQqSf5zI5I9TNwrD2oJylST/JDBkTqXNSTFKkn
+XsuiNS5qCc5EqlzUU/6GYGsfVFP8sMNROpc1JMUqSc5EqkzqScpUk+yj0Gk
zqSelH4ikLUn9SQ/Y0Gk+vdh7Uk9SZF6kiL1JF021JMUqScpUk9yJFJ1lRGp
c1NP8pMfROrc1JMUqSf9rl7WvqknKVJPEtepJxnzRKoudiJ1HupJitSTFKkn
ORKpuhKI1HuWhkg9SZF6UvoxTdQeH/UkRyLVt/lRe3zUk7wyIVK13SVS46Oe
5EcNiVRFItUHFYNDUU/yKSyRGo16kiL1JF+RRGo06kmORKroS6RqL0Gk+qHV
5FDUk/wYEJHqfxO1KxKp0aknKVJPUqSepEg9SZF6kr/6jUhVJFKjU0/yw0lE
qnahRGoM6knpW2ysfVBPUqSe5Eik+hFe1j6oJ/kWIpEag3qSIvUkRepJjkTq
XeIjFj0pZtGT/CQxa59FT4pZ9CSfRLH2WfSkmEVPiln0pJhFT9IUQ6RGFD3J
0wJrj6InRRQ9KaLoSRFFT4ooelJE0ZMiip6kSKRqS0ek+rlq1r6KnhSr6EmG
E2tfRU+KVfSkWEVPilX0pFhFT4pV9KRYRU+KLHpSZNGTIoueFFn0pMiiJ/mT
z9qz6El6c4lUbdKIVD9lztqz6EmRRU/Sm0Ckxi56UuyiJ8UuetIVIxiJVNVK
pPphd9a+i54Uu+hJPixl7afoSYpEapyiJ8UpepL290RqnKIn+dSZtZ+iJ8Up
elKcoifpCiVS4xQ9ST9HpK6v6EnrK3rS+oqe5Ef/k0MVPWl9RU/ykd7iUEVP
EjKIVP16ROr6ip60WtGTNJUTqVqYEqlaThKpqxU9SR9QIlWRSNX0S6T6vORw
qKInrVb0pNWLnuQvQmDtvehJqxc9afWiJ2naIFK1pSFSVy960r1fg1j0JEUi
1d/HwNpH0ZPWKHqSz/NZ+yh6kr+Zl7WPoietUfSkNYqetEbRk7wZZu2j6Elr
Fj3J37DJ2mfRk/ydkqx9Fj1pzaIn+esLWfssepK/nYK1z6InrVn0JO80WHsU
Pcnflcbao+hJK4qe5K/lYu1R9CR/8xRrj6InrSh6kr/kiLVH0ZP8tT6sfRU9
aa2iJ/kbZFj7KnqSv6uDta+iJ61V9CR/PQdrX0VP8vdTsPZV9KR7GSEWPclf
OsDas+hJfuqetWfRk6ycsPYsepIfpWbtWfSklUVP8lO7rH0XPckKEWvfRU9a
u+hJfiSSte+iJ/khQNa+i560dtGT/LwZa99FT/IDV6z9FD1p3WU7IpHqp2hY
+yl6kh8jYe2n6El+cIK1n6In+dkA1n6KnpRf0ZOsoaN26+Co3eI1avd1dDhU
0ZPs+HYOVfQkW63BoYqelF/RkyxQonabi6jdBiFqt6uH2u/Nd8SiJ1kL6xyq
6En2ooJDFT3JJtDmUEVPsuyC2i2dsPZe9CR7Fay9Fz3JdzZZey96UvaiJ/nQ
mrX3oif5mJa1j6In5Sh6kk8EWfsoepKPxFj7KHpS3p3l9z8DSVGT
    "], 1, {
    "Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.777227010975256*^9, 3.777227058309784*^9}, 
   3.777235350008204*^9, 3.7772355782293787`*^9, 3.778273583580854*^9, 
   3.779280285053794*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8211e57b-841e-465b-9abe-905cfa19a985"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"tsData", ",", "tsData2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.777227033352366*^9, 3.777227048233883*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"4f9885b0-7b84-408d-9485-bae3d64b99c2"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVXHX8zt4X31e36fpgupluppvpZrqZbqab6Wa6mW6mm+lmuh5MN7+Pe53n
97z9gfO6deqee8/7nmdpWnar1SaCIAhjowjC33/D/5gPor8qxf+bRwn/y4kZ
41Wpig8GJNxYIe9f2s8fTk85/Clzk7gF/9KSFk6HNz4YcIXR6vgY/8Yb+f7S
xrZwOlBzV6pR63L/pe174XSWJuEzrM75l/aixXxVqnvxGNeX6dn/0mLemP/m
n5LmL600DadTj3oVPkOGv7Q+JpwO71w8Rv2sf2lrczi9PJy83oqt594Op8NX
Cx/A1hOixPq3fjbGvyzHovmy/KW1RrFo/cx/aXNksD0jk39jLNIH49e/EYv4
Y/xKEWP/W69QJiZ/jtjEH+tv1I/9Tz91ZCb/sNi0HuPPWxeb9FWAyX8tOF96
Jr8Q55/+TzB+9axBmq1n1QmnmXkeMH24Q+LQ/GmZ/GviEP+MX/lysD0Hk/9X
HLJHLiZ/prg0P7d/zbg0P9OPPzAu9We0tDIuycf6q25ckp/xZ3yPS/pi+rTT
i9SejclfXST7Mf2I/UVan/GjLBNpfS7/OZH4Z/5gfRHBf9w08V6VOvJ3ucOp
mfxV41E7W1/uE4/4Z/xpVjzSP/MP83Q8sLfzMR6tz/Tpp4r/qtRfcRNuTMXk
rxSf5GP8qT3j03qMf2NhkGbz2yfi0/zMX713wfFMf2JYAtov+Zn85ROQPzD5
dD0B7UemL2teAtqPrL97NAGtx2jhLfU/wdaTkyWk9dh+1cqE03/VkXlBISZ/
l4S0fxi/zuyExC/Tl38oIemD6UcKJKT5GT9q4kTEL9//SpBm/m13TET2Lszk
n5GI+OX+fxD7Ky8SkbyMPz1B4n/jHzH5rOKJqT+Xv12wnY0XpiUm/hkt70v8
T94wLv/TxP/W99l4U0xC7Ww9p0gSko/191snIf0w+aQpScCe6u4kZD8u/yOi
s3H5YyclezF7ewWTkj/y+NcyKew3ZWJSiF/6jqS0PpvP8pISf1z+GMlAP0L+
ZKQfxr/cPBntVy7/uGQkL5d/azLij83v3E0G+vCjJqd4z/pLeZKDvdQm1F6H
9TdGB2nW37aTkz3Z+t6t5KR/1l+MnILWK8Lkz5UC5tMbUvsCNt4akYL8mfmT
uyEF6YuNF26kAPvJEcKA1rKHkTxsvFkvDOZ3jDCyJ5d/bRj4q3Q1OL4ok/9P
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
Uv6fv/8B7NdZ+g==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
QdDXZRaE9d2zm+WcpI/xiJ9/SPbzxSsE9gwULYS/960L8e8B/R65JxWC3yt9
B/a37nP7ApLt2IXh91UpXJjjlX5fNG9h/j0U+50JhTk+SR9za2GYb/67sp3G
c2IUgf2aq0AR+L31NC/C+tP6b4wtwvrQ/tu3Scpiv3urCOtD46nRisrzKOHX
inI7jac3LQr2sEYV5ffT77+9oSj7R+C/URT2V1rkYjy+WO9yF4P9stmoGL+P
9PMPLwbnB2etbE9G+K8Wg/2/RynO9klL+HMU5/HJn776xSUfQPiHoqyuLi7P
s4T/UnGwp/5Tjkf6WVlLsH9SEf46JeD9yuASuN9ZUYLHE/t9W8qpCf+3EqwP
vc+fqSTsn5xaJSX/QfgHlIR48iwryfYS/j9bEuaT73NJ+L0NpC/F45F91Rql
eD9B5wd331LcPwPht0rhfu+UlGk/aH8oBftrJV1pyUcQ/qqlGW8Mwt+rNPjX
XFia+YUkhP94aTzvvS3N56ekhD91GcmvEP5KZeC8ZehlJF9H+OeV4ecTE/4j
ZZgPOUN815sycH51p3CzPvS8Xt4N9rC6utle5E97tmyn8ZVDUn4cik8t6Obx
CY83aVnGR/FmusvC/tvfqazkfwj/jLIQb64Dsn9Kwv+8LMSTkagcv5/s5StV
DvjQQHspk3/UaeXAfu695Rgf+Ud/Ug7i01LLSz6V8BcvD/tPpW15yQeS/6eU
B3t6d5WH85P5ENv9cStI/oj43iIV2J9v6bzfqgKPT/p5/q3A7yd/GNvl82RP
X6AC60/rQSBWRThvqYUqSj6P8P9TEdYXfXxF4LOsLRWBz7LvVAR+WolRifkN
4ke0/JV4f/At1O5tVgn4YXNMJeavnND4fl8l1o/4OOemHO898V1RK0u+h9a/
vJU5nvcS39eksuQbCf/Iyuj/9ZVhvVWvV5Z8UOh97khVWJ8voffpuarI+Rlq
txpWYf2Jr7KNKvy8iP+1VYCP167I/l9D43l/V+H5SHyemb0q60N8sb9eVeC3
nCFVgf9yrZL9iT/2XKwq+ZWQbPyoCny2L0s1sG/AU03y04R/UDXW1yG+679q
f36PE78m/5+vBvyS9bUa8Gt2xursL4p3pVZ1yd8T/v7Vpb0o/pfK/rRemmeq
y3wDxf+n6pIfI/yuGhB/ruo1MN/Rpwbwo8biGsDf+k7WkHxpCE/gfQ25/oba
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
4TzrareT+5P+HnMn2NPYvRO/9360E+q1AvF2yfpTwl9sl+QLCH/rXXC+1Sft
AvtbO3bB+Pb9XaCPEmc3nNe1wrsx/r27ZX0r4Z+wG/D6t+6G+kbn7m6oH3TF
3AN8mafAHuCLjeZ7JL9A/h+7B/iQwKY9wI+pt/dg/W+0vVB/qmt74b4Kq+le
4M/tUXvhfKts3Mt8zAXiP27geN7I++B7fTP3PqgP9DfaB/kBZ/g+qK90rdsH
90t4ru4DPtBQ9sv5RPhz7JfnL8Jffz/0V4dJmfq7V8v+dH+Efmk/3nfwcz/U
s9pZD8j6uJCs1D0g+eWQrA0+INcjwr/iAPDXpn1A+pf4z28HgF90MvlBdtX2
Q72wZ4Af6rGMZVKmfIfvrJRJv8Bnv/x+gPBnOAjrg7sGynrfg4DXsg4C32af
ku3EjykfD0J8aOkOyXwMxX/VQ8DHm71kO9Xn+hfKdnHfwfFDUL/rencIzque
1IdhPhuVDgOf69MPQz4oMO8w1v8ePQz1ne43h2U9Mfk/xRG876T8EeDX7a5H
gO9W5hyB+x+0Q0cgn+ANHgF9zKRHZf6H8h/uo1C/53Q6Cnyga+ZR4PM8B6T8
F8X/86OQ7/MlOgZ8bKDUMVh/1A7HYD66px3D+y72HmP8ZG/riXye+D5bPc72
EvnvEsehnl5re5ztIb7/mXIc7GfuOg76+h8eh/pcJ+4J/P6r6An+fRH1z61O
wHjGvycg3+LbfgK+xwgETsD6qsY+Cfkud6GTyP/+cxLyc9b4k7De2ltOwn0Z
yl1s12KcQvz5T0G8mc1OyftGyP9jTuF9R75ToJ/r1v/b6b6PqKdlfo/8n/c0
5G98TU4j/z3yNOdrnlL8bziN+c/rpyHfpEc6g/xvrjNQj2s3lO2U71KGn0H/
rz0D43uvnOH1m/xp/j4D+xd/9rNQf+zUQ9k19Cx8z+JZdRbsb1w8i/m/H2dh
vxLIco73A+8If51zkH9xDzoH80P/7xzY3zp/DvDYX8+Bf5VM52H/pNU6D/yo
t/95yBeZS8/DfsJ/5jzU0zufzsP8c6W32V60fnqq21j/38fm/tTuW2xD/iJw
0ob7QNQPNnzf5057AfhavcoF2N9aPVG2F1yAemHl+AXgp7W3F2B/7U11Eb63
Mite5P60v/Z3vwi/Z87ci7y/p/OM68hF4CM8ry8CX2YkvwT1NL5yl+D7kECX
S3jfyexLuP8/eAnuU9FfyudF/WeSy5A/tstchv2r0gllbYbsL77/3X8Z7m8w
n11G/AmvwPnWKXkFzlOu9ld4PLK3Z+oVqN8z9sjnxfn38RU8/8e/CnylWvwq
8OvuNleBT9UnXwU+y9p5Ffh9+4HsT/tbJe41OG9rRa6BPt6W14AfMideg/sF
/NtYLirOf/eu4fevsa5zu/j+r+B1eZ8V4W9xHfhq3zjZX9R/beZ2UQ+q3pH9
Bf8R/QZ8v6DnuwH1eNbfN4APtEffAH5E8d2A+jjt5g3gy7xRbgIfZ+a5Ce/3
N77JfI6o/x1xE/hR1/qbUH/ouXYT+Dzjr1t430XOW4yf4i3Q4BbWfxq3wD/u
Nbc4ngT/dxn7W79ugT52tttwP4ZS7zbrT/yrNuQ21I97V8p26m9euA18rv/7
baindTLfgXpkl+cO2NMz8A7oayy/A/yJ79wd9gfpE/hyh/HSeGrGu8BHu2ve
hfuD9H53gX+zltxlPkrgP30X4kn5dBf8p7nuQT2mt9o9vO+k9z3IB/gX3YN8
gXPiHsej4H/e3wN7etIEgN82KgdYH5H/6hHg9xM/GpgfgPpw9Ri3Xxb1z06A
/SHqX1Peh/syrAr3gZ+2u92H+2uUuffBv9rh+xAf3lfyeRrfTPYA7rPwl30A
zzuduf0h1Ue7Zj2A+z08/gf8foH/xQPEn/gh5CcCpR9Cvljt+BDrf6c/hPtE
9H0PoV7desrPryX97ASPGI/gv0s+gnpyrd0j+L3ymo/gexVz9yPwr//RI7zv
Kd5j/P6h2GP0f+vH8H2DMekxrKe+HY/ZnmSPwH2U1ThPuH8Zwl/4CY8v7rvx
PgF+zZrwBPS3tz6B+3eUe1IW8z/mUxjPW4Blcd+K2fwp3ncz9inw986mp3Df
iuv2U+DfPdGewfczhvYM1lNf02egb2DUM44Hwf9vfAa/V+4bz2A91SM/h/pu
K/dzqIe3Gz2H+aCMeA58vLbuOfDt3qvPIV9gKi9YHzH/c7yA+7Gc+i9gf+Ia
9gL4RM9qfN649AL5358vYP8SyPoS7h9S676E71vcg1/C9y36ipfAZ1v2S34/
6Wd/ewn8sJI5CM9rtYOwP/AOCEI+0FwWBL7Vf1b2F/H/OQjriyvDK6z/r/EK
7lMz+kpZ3H9ivYL9WODUK8jPqx9fwfdg7nSv4X5AveprqHewer2G74Ptha+h
HlY58Zr1F/n/d6+R/0j9Br4nNCu9ge8X/fob2L87894Av+g6+gbPv2/eQD23
kcKB+nhfeQfaA10dOG+pcxy4v8Z9yIHv9fSgHE/Ef9K3UD9ku99i/Vvnt3B/
hDZTtov77g68xe8fn7/l8yvV2/gTvYPzjlPqHZyvXB3ewfnUM+0d3v+y9x2e
f568k3yUP4RffQ/ne7XEezz/tn0P9dH6lPdw3rR2vQc+wX74Hr7vV+J9gPsJ
tKIfGD/xfd5WH4CPNv/9gPi3f5D1ZIQ/gO2u2B+BL/UU+gj8tPHPR7gfwDce
+we2fITzsHr3o+RDCX+MT4BXz/8J+CWr2SesfxzzCeypbPok69kI/61Psj6Y
+K+onyX/QPjzfpZ8FvEfTT5D/Zwz8jP7g/hn14bPwMd4rn/G82+kL1j/mOsL
zNdAwy/Ad6nDvwA/4l77Bc7f+pUvcN+K9fsL3M9jZ/+K5//6X5H/GPoV7ONd
9RXuozAvfgW+zf/jK+BzsnyDejNXnW9Qr+kZ9A34WuO/b8A3+M5/A3sGvsp2
0lfN9B3WF3et78Cn6f2/A59mLf0u50vIH/aZ78CnKJ+/w3zS0v+A+kZv9R9w
n7HZ5wfcL+xf/AP4dufkD3if68MPiBdP2p9Q725U+Qn6+Hr+hPr9wALZX+A/
LvtTPbr77U/gy/VUv3j9E/dfVPwl82eEv/svzH/O+wX20478kvpQ/L/+BfFm
Jv8N8eov9xvmj9PlN9wn5Jr9G+6n9hz8DfkE46VsF/edJ1GCUP9ZJkL+Uz9L
+DtFyOL9FN/uGRFyGD+j74+Qw/hK65mUBf+b8K8gzyeq/y31VzCc79baR8hh
8eqdKmXiJ809EXL4/QePI+Swem0nfqQgz3+K/+JSFvWPbSKxvnTfizE5Qg5b
X3w7I7G+4vuPBxHyn/UyJKtxIwfD7e0uImUR/y0j5LD8ozUxQg5bT+1tEbJY
3+n7IyUQOQj3P8SKEgy/78ZbMArrS/etmC2iBMPr5/3jogTD6+2dzRFyeP7n
jmz/Sutf9Kj8PsqPGPmiBsPzFb6/o0r9CP9o2U7zT/VFlfgo/m9GDYbzw3qU
aOwfkf/NEy0I+c/GUo5E+EdGA/to66MFw+Pbey1aMJwvNP+KHgxfj/w5owfD
7992GkTn99P64TKi8/j0e+tZE53xEZ9sXI4eDJ9/vl/Rg+HrWyBbjGD4/dNq
vRjB8P2he0iMYDjfq69E2boQIxj+vZT9PUYwnC9UssQMhvONmidmMHx/5R0Y
Mxj+PY65PGYQ7j87FzMYvn47X2S7uO8/YyzA56kZIYftB41+sVgf2r/5lsRi
fOL7v9OxYL6pn2IFw/cPbldssI9eLTbHG60HVu/Y/D5R/7IoNo8v8j8nZTvt
P7X3sWG+etPECYbv78zKEXLY/tTfI04wnK9y5scJQv3rMSmL+y+cODw+6WOk
jMv2F/vfCnHZ/iL/1S0uvF+dK+UMhP+wfF7cd/wqbjB8f2kli8cy9bfLxoPx
lC7x2H/C/7Nku/j+zx8vGL5/Nl/EY/3F/YeJ4wfD+WmndHzuL/j/jvFBX8/0
+MFwvtzYJ58X+J/KdnHfcQI1GM7nqiXVYHg9krudGgzfz+umlMX9J7tV+H2w
H6nBcP5ViZ8A3qcVSxAMP396Wydg+4n6p0kJ/vhzgeB/d3C7qK907sv+ov43
TkIeX9x/WDjhn3huLfhPb8JgOH/sm5AwGM63B7ZyuzhPqvcSBsPPq+6YiVhf
cf4pkIjtJep/midifcT5d2yiYDi/r2yWssB/OxH4xxstcTD8PidTk7Kof2ya
OBj+fbYzKjG/T8T/Rm4X/LPnhnxe8B+Rk/Dzgv/NnYTxivs/GiWB+aSOiJDD
zuPudUnYXqS/fpXHE/kIS0kaDK8/tHMkDYbX6ykNkgbD76PQhiUFvN7VSYPh
/Ix5KSn7S/AfP5MyXoE/a7JgOB/rqpuM/SX478HJguH3XRorkgXD+TyfnSwY
zrcEvsl2Uf+XOTm3i/ueayfn8UX984Dk4B9rWfJgOF9pn+Xnd4r7b78kZ31F
/XuGFMHw+mRvjRSgv9k3BeMV919YKYLhfLZzKgXbX9z/8DEFjO9JlzIYXl9r
VE3J/hX8T6+UwXC+MLAwZRD43xMp2R6C/30nxxP5n9SpeDxx/2+lVMFwPtnW
U7H9BP81PxXbh/hE7ah83k3433D7w9KEP0XqYHh9or98asYr8HdNDfHmmiPb
Bf95KDXgM4Io+5KmYVnw/+40rC/xyWrnsPb/AS8uMZo=
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6290592*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         StyleBox["\"2017\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         StyleBox["\"2019\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6290592*^9, 3.77352*^9}, {-18.22, 32.22}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.777227039378055*^9, 3.777227059969295*^9}, 
   3.777235350944611*^9, 3.7772355789280024`*^9, 3.7782735845927153`*^9, 
   3.7792802860070267`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"f907a45b-e4fa-40e2-bea1-0c667660d744"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Financial data", "Subsection",
 CellChangeTimes->{{3.77827820133182*^9, 
  3.778278209487742*^9}},ExpressionUUID->"32408466-02c8-4937-9648-\
f3a8b84bf0ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finData", "=", 
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<NYSE:GE\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "9", ",", "1"}], "}"}], ",", "\"\<Day\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.775859811829064*^9, 3.775859875610491*^9}, {
   3.775860665220282*^9, 3.775860666411714*^9}, {3.775860832235526*^9, 
   3.7758608629863243`*^9}, {3.775860906336584*^9, 3.7758609069746857`*^9}, {
   3.777226381670412*^9, 3.77722643697816*^9}, {3.777226478142383*^9, 
   3.7772264783438883`*^9}, {3.777226519590075*^9, 3.7772265666357718`*^9}, 
   3.777226880153287*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"1eb82c1b-206c-450c-941f-836e51bd3bdd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Jan 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"30 Aug 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1425", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Jan 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"30 Aug 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1425", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     QuantityArray[
      StructuredArray`StructuredData[{1425}, {CompressedData["
1:eJxtWX9k3Gkan1uijNIrw8puOp3MJNmZTJJNMs1lMsk3GaGGvbI356hj1Pbq
Yil7Qy+uhqWWUWqJpVRY1RVWKbFUiSXEUKHCqitR4nSUWOIqrLBKuee+n8/n
u98nkj/69H3f531+fJ4f7/t9p/9v//jz33+XSCS+6Ung79Zs1f6tdlsh/Wxl
MaS3gk9AO1MhfVUvc3xUAf+PFcz/inHyMuSUSuBv3a1QTkgfNN/NhOOD5zPg
+6WM8VnMd5ZnyB9S+19IH9T6QVf/Sv5vQrqVbpfjcl6tjYd8WzunISf1BeTs
XpvBehNympsh/Wzpe9Il0I00+Q7LcTu20hcp95Kz61X9ptsnebdSb7hertB+
4pCsgG8f/CudGeIGuYU+Z7fkZdZrzg7Zu3X0OXF8TDvug7/xE3Hr0v/XXP/P
TNyOardSgdwe2Ln6kv5tKT4zjKOz61bniYuj+V+B3hXmwb0K92G+fR3+d5ap
ZxXz69sV4lChnbTnKfhT606OxZf7bnPcdPLNfo4PnNxIX/sR9BS+rTCezMsv
yf+Vo5Zn4Dt6SL5NxvEZ7Xrhxls7Xx+zf2yWds4yXqivpSFXRxaPWeJZYZwc
HpZPrs6O4xLhyzqzOBGnGvNtyfmdKOyBJrao7wr9rSN+pZL3h/5HuKV7ZuNj
xbXafcs87eG+n1VPzLtnzPd7zK8bzM815vWQ6tzXXbrH1a/qz+xycs0e5uuL
Y/m/xnw9S79O05+Gw8v0O/8/W3nP1a/G8lP1ojqxeHK+l/FJuXoXn/BRPVq+
cv8U8b1YiY8VV8nTfvUZixP9/Y7yrrt+sHWUP9anltSf1C/KwLXKfrPN/npR
/XWafpWxXhM/+/Fzzp9ycVU/juLGOFjfdvFRHK0+Xf9SXxNVv1HcrJ5YFzcZ
p6vEp31i31G+WhxnibvrG3Y+sS4SzO89V4/qE1F+M4+kt5p83+XJq7UfXP+M
8pl92+ob+CbvlSm/TDyA727OxVF9V7gpzy1ex3D6xunLNM4wL1d13uK8bKXK
kH9F8YM93bfT9H+a8qfpxzTtZT68DKn1L5cXdo/wftWucrw7Hddr/mN/Z6rM
ONL/PPPrljvnLX/It8H5p5IDP9g/Mu0i+0SV5+x7qi+/znuB+pTOSd1T7DxW
v/T9hnmoOlNeS67yXnVm+Li6yDQ+dftetf5yrC5vHsuXn+Hvzk6Z9jBuaVe/
hi/vQby/pMZc/xQOdm/j+Ks5xOc73v9+5Lm0jPpYr80Sx1nKwfm1cV/93dWP
2cd66LJu0pCbfJ/3wdQs/ae8i64OzQ93Hlqd+/X1U+4+qvM0kkO5dn7MEl/e
WzewL7VO/raj8j+SQ78tLhzfPvFe/KAZOD7JMVyp/9qJ92fpsbpzciyfsL7z
9TF9SYej+XXi/UT3KcPB9UXlddS3eL5oXfujewv1yS7rQ7PxOJuf7HOLuke4
803nn9Z1P4zmee7pXNS8xVf3KdZhwP79hPW45857nYfROcnzXfmtOlQfMr3T
9H8a9r1XJnXnpM4zy+Np4ky+r9iXEqivzhHr8mvW27r7HlF/0neDzuvofsN6
triq37Av5FzdW/6XGVf3/aPzOzpn2Td0j1Semh3M41NzxGmOeueIC+O76vjs
HEB/aL6bw/w2xqsv54D/3YC4BMQhAC7LAfy4FkDP5YB+QN/SEufvgT+4Q/41
8WGc2IL8jfQ85h/NM04Yr9fmgVtjHn7VsZ5uk14k/8N56nNj7RO1vkn9RYzr
vwbEYx44fDkPe66Qf5x8NzG/9D3oyqKjssvwnCdOzn7Dw8m3/IHc1guu74t/
AftPL2B+aAF4P+H+TfiTqMp+xLF0Q/GaI86Ma4C4Ns4E1D8Xp/bHPLnn+K0/
cN+njs/qkPnRq3h6Pe1H4EuNKe6cLzK/anPw75LsVh+EnsIe7UE+Wf0j79I9
oEefY75eZh4eMY8rAXGmXTn4W+sGtId4lRGvzjJo8Mk88WHcTrs8MTtcnime
yh/Tz/EB8+/9BcpD3A7OLsCvvgXivgB7Wwvw7wX4gmegqTdcr5C+dflhfZl2
P6P+J7T/J59/6R7YsX7K2aN8Eo3kr3QgL7Xu9Jk9bmySQXdfe3sOzmre1bP1
nYD+zsfxNJzIv6Y4kj5B/ArfkjZQn40V5S/o6ssgLsf8nY/rNfxY930nxlV8
lifE71PWV0B8k6pP5Nta0/UXsxv8q6uujk0+82Rb/YN58Bz+HdSDuB3qE8qH
KD9KNzje1H6MV3ur4P+gCvz7q4jTWBVy/0TaBG39E/zJf1Vh97WQZtp/BF0/
xfk15GP9JvMGfch2LhAnlzfqT6Yf/O2i22f1Qr5Lbmz1Rr8CRyOcuG7f606/
4ebqwuqYfXHKzVu+wM6NK06+fe87+bI/qtMgqTp1fTrKs9Jjd15ZnZB+wfPk
kctL5Y/qQeef+pHVE8+d28zH++58/P+OODX8XD9Un/ztvN1HX00/Zf9/7c5x
nfM6B6xeAzcfyfle9wV9N8wRb/rXKz/cOaK+bnmnc4O4XCf/d+rfrm/ZvcL1
FZ1v6m+6D5g97EdjiGfyMvOm6fIkOjfZzyzfHb/6sPLV6pd5e5t0m3x7rv5M
M+UucrxFOQccZ1h3v0c9ql5rXdbNPvPwsc5zp//V2g9u3e43tONb8i+7vFad
yj/lvepM9aD6MP+EM/Mq4e45ur/YPVnnmst7s8/lvebtnuX6s+pB9z77LnP1
oPPT7se8B91wduheZ99brq9H9zDd3xo/BX5+3PV/+WdxZJ/d8fZG98o9V5+W
N67OVa+WB+6+e7xu5aflo5sXXjoHZYfkRv7xHmrnLfW9C1w8iJ/Vt8Nb/aKa
3HVxje7FvK+LGt6Uu+j6ie7/hq/7HtC9yvqnv3exf5i9vMc9dn3D9Ose6O6T
+p7X71BWr44v6iOtF/w+/ZK/N91w7wUPalfdd7/hSblv+Q7wxr0HWD7ynf5Q
1N+b135w/tuf4sU+2K/vI/f9bt9peif37wB8B4neU/geKT/0fqHveL1L63cb
vTf+9vvaM/f9r+8//X5gdus90r3L6/ccvc/qXV7f15bH/l2dfHq/1e9Xen+M
3p8bK+69Ut+/lid6v3XfuXZu8L1uy31P6z1U75ZWX/qedut6NzT73Duk5ETv
qCsd9z1t+Ov9Gu+S9Y1p4sP3zz5+9y/y+/4N3yuX+Z1f4v56OW6/5Tnf6fR7
3hv3zmr3Dr3P+d8z9R7A91PrO85vixftavBd4izs3TmNd9nu2z/E163v4Z1j
I+3eb61+uL8O/t3XU7D/1hTnQYNnF4DH56T5C8TtAuQflohvOLY6uAB8pi5Q
L+ab70qMl/aHYzv3JojvJPRXJ7l/kv5M0F7wLQ1N0q9Jyp+kfeRvYX/wySTs
6U4gTr9QT2cC/A8noOeJo3a/4frPjt/6KPgOnrt5qxfKvwE76zcniOME4zUB
O65OMC6OX/7JL6s32n+H4xpoYwX4/Pu/kw6/lY7Dy/oG7E8/HSeuIbX7zDj8
eD0O/JrjsG9snHEbp75xxuXj+D7Tp/WPicMo7Ryjv2PcN0LcR4nbKHC6HFLL
b4xLj0dhb+8Y4zZKPLC/Gbix1TvkJRKjwLk8Av1J8Y9Az+4I7Ryl3bQzORq3
y+oWdhf2KOfOCORuhNTO5xHYn5O8IvEu0v5hrg9jfbtA+ZgvNIqIy9Ew7Rtm
PIYZT/LtYX4jHVLLywJxGUacDguUN0w8xIf11l3oOagXuV7EfMr5bfuF9wj9
cFR+at34Sffob8nxCS/FyfJbuIbU7vWeNs6Mxan5xfi0x+jHWFyv5Bheo24+
eRn5cJQX3wj1FGH/ajEeL8O5GPfD4uGoxc3x237EY2mJdL9AnAq018XHJBWA
ewty2gdFxgdxqJcht7k5HKeKu+VRkXqKcf8UR1HZafVTJN5F6qc/y9QTKE8K
8bHZgbzZueTyzfJGeUl9rWHawbyu0c6S45f/lu+hHsuHAv3I06+QWp/JE9cT
qektgO8Q/K0U8t0QissV7qoHzUu/2VugX+TvKRCvvBsfPcwTjwLidV31RfuX
CvQT+uob5DvIU0+eOH1EO4YYH9DGmY/gx91wbP015Lc+mEecjvJx+arrKE9W
e5W3rP9mIb7f4kd8S8CxdpU4dvJx/zW2deEj3D8iHaIdQ7RjgHIHgFM+Rz+y
tCcLObtZ4pQlf5b8/fTvPP3pp90Z6s8Ar2SG+s7TjnRIm8F54FhL0640/ThH
uRqHfPbn9pnf52jXOerpY/w+5PhD2v8BcNzpI38f7eiLyzG7nX6t2/fCh8Tj
HPBJSV86br/FMUN58LuzDBy6rX7O99OPfsSp66jZRzyXhWs/5We5P0ucHJ/Z
1c/5LHDec/IUL1sfgL6rIbU6GIC/i4OhX2uHA9RDej8H+WcGaE8O+G8OEAfM
p8Ykx+WT9lkeDBDfQdoxSJwH4d825AR3KKczwHnkY70c2q/8NL9A0+0c4zDA
eNGvg3De4uz8tbpyeuSP6cs5u7lf+q2vunWL54l+Wr/h+tss9Qn3LHALEJ9E
Ikv9Lr5atz6aJV70+6EbR3J2c/C/s5yL4yy7bIU0EeJseTFAPAdol4uj4mfx
zVEf/Wq7dftTnHJxvBQXyx/ivw8c6hu0e5O4HGJc62aJXy4uN8I9uUv/mHer
vbQvIO4rylPGc3kgzmf7mZ/rLs9Nntt/PC/MD4eb9pneQeI36NaZZ8JbY+Gs
ejme31H+sd4UB9Wl9X3GreHiZ3k26OQESdqxrz7u4mRxZjxzileIu/LU9GSJ
G+aZfxaXLPVlYN9d9JPk5X7qz1B+SK3OSLvs8+iHFv/z5Nc5kSFemer/APal
TPs=
        "], 
        HoldForm["USDollars"], {{1}}}]]}, {
     TemporalData`UniformTimeSpecification[CompressedData["
1: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
JN5DQ8//A/MSB5s=
      "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     TemporalRegularity -> True}}, True, 11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.777226406244183*^9, 3.777226479526761*^9, {3.777226524959585*^9, 
   3.777226567102873*^9}, 3.7772353532435837`*^9, 3.777235581464808*^9, 
   3.7782735889331417`*^9, 3.778278215274684*^9, 3.779280291114595*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"7335ce06-db6e-4823-9588-c0bfb7ed430c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Experiments", "Subsection",
 CellChangeTimes->{{3.775854778216126*^9, 
  3.775854784605438*^9}},ExpressionUUID->"431ebe36-a1bc-4a14-bfd4-\
3ddaa047c3a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToQRMonWLCommand", "[", 
  RowBox[{
  "\"\<create from tsData; rescale both axes; echo data summary; compute \
quantile regression with 12 knots\>\"", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
  3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
  3.775904324725012*^9}, {3.7772361485637417`*^9, 3.7772361728495283`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"86cc20e8-61d0-44f0-b03f-c36ab9de9a57"],

Cell[BoxData["\<\"QRMonUnit[tsData] \[DoubleLongRightArrow]\\nQRMonRescale[\\\
\"Axes\\\"->{True, True}] \[DoubleLongRightArrow]\\nQRMonEchoDataSummary[] \
\[DoubleLongRightArrow]\\nQRMonQuantileRegression[\\\"Knots\\\" -> \
12]\\n\"\>"], "Output",
 CellChangeTimes->{
  3.777235965206006*^9, 3.777236042199121*^9, {3.777236154093946*^9, 
   3.777236197238185*^9}, 3.778273595354354*^9, 3.77928032144976*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"cabdfc95-5a9c-4263-9f07-c4748e438541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{"ToQRMonWLCommand", "[", 
   RowBox[{
   "\"\<\ncreate from tsData; \ndelete missing;\nrescale regressor axis; \n\
rescale value axis; \nsummarize data; \ndo quantile regression with 12 knots; \
\nshow plot;\nfind outliers;\n\>\"", ",", "False"}], "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
  3.775857875734325*^9, 3.775857948172743*^9}, {3.77590432288169*^9, 
  3.775904324725012*^9}, {3.7759045527015743`*^9, 3.775904558361993*^9}, {
  3.775905814433103*^9, 3.775905964431409*^9}, {3.7759060160814457`*^9, 
  3.775906050190753*^9}, {3.775908628071768*^9, 3.775908629249481*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1cef7145-ad03-4f23-9026-d5da10c9dc72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.211836`", 
   ",", "\<\"QRMonUnit[tsData] \[DoubleLongRightArrow]\\nQRMonDeleteMissing[] \
\[DoubleLongRightArrow]\\nQRMonRescale[\\\"Axes\\\"->{True, False}] \
\[DoubleLongRightArrow]\\nQRMonRescale[\\\"Axes\\\"->{False, True}] \
\[DoubleLongRightArrow]\\nQRMonEchoDataSummary[] \
\[DoubleLongRightArrow]\\nQRMonQuantileRegression[\\\"Knots\\\" -> 12] \
\[DoubleLongRightArrow]\\nQRMonPlot[] \
\[DoubleLongRightArrow]\\nQRMonOutliersPlot[]\\n\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.77590455658858*^9, 3.77590455893264*^9}, {
   3.775905818220645*^9, 3.775905827211928*^9}, {3.775905864209796*^9, 
   3.7759059034019117`*^9}, {3.775905938885104*^9, 3.77590605083995*^9}, {
   3.775908632160707*^9, 3.775908634534561*^9}, 3.777226381533615*^9, 
   3.777227199585183*^9, 3.777235381922071*^9, 3.7772355819429092`*^9, {
   3.77723618358715*^9, 3.7772362061793833`*^9}, 3.7782736018639193`*^9, 
   3.779280322933392*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"2108c410-0cb3-4a57-aeb4-6f88db66afc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ToQRMonWLCommand", "[", 
   "\"\<\ncreate from data; \nrescale both axes; \necho summary; \ncompute \
quantile regression with 12 knots; \nshow plot\n\>\"", "]"}], ";"}]], "Input",\

 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
  3.775857875734325*^9, 3.775858006133646*^9}, {3.775858132847616*^9, 
  3.775858153758481*^9}, {3.775858207064753*^9, 3.775858237077544*^9}, {
  3.775906058280981*^9, 3.775906068021555*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"e414cb98-07d7-4a4b-b6bd-a6ed7acab0a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"GetData:\"\>",
   "EchoLabel"], " ", "\<\"Cannot find data.\"\>"}]], "Echo",
 CellChangeTimes->{
  3.779292571460752*^9},ExpressionUUID->"6840d40d-606b-4a3a-98ca-\
51005b801539"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"QRMonBind:\"\>",
   "EchoLabel"], 
  " ", "\<\"Failure when applying: QRMonRescale[Axes -> {True, \
True}]\"\>"}]], "Echo",
 CellChangeTimes->{
  3.779292571489808*^9},ExpressionUUID->"7ec841a3-1d22-4dc1-8f57-\
0ca0e1bf2a7a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qrmon2", "=", 
   RowBox[{"ToQRMonWLCommand", "[", 
    RowBox[{
    "\"\<\ncreate from tsData;\ndelete missing;\necho data summary; \ncompute \
quantile regression with 20 knots and probabilities 0.01, 0.25, 0.5, 0.75, \
0.98; \nshow date list plot; \ncompute and display outliers\n\>\"", ",", 
     "True"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775858006133646*^9}, {3.775858132847616*^9, 
   3.775858153758481*^9}, {3.775858207064753*^9, 3.7758583426146297`*^9}, {
   3.775859390092031*^9, 3.775859406807631*^9}, {3.775859525534582*^9, 
   3.7758596537188168`*^9}, {3.77585988503401*^9, 3.775859886662125*^9}, {
   3.7758599565072203`*^9, 3.775859957954381*^9}, {3.775860006445978*^9, 
   3.7758600142318707`*^9}, {3.775860079774292*^9, 3.775860090695641*^9}, {
   3.7758604670508423`*^9, 3.775860468297913*^9}, {3.77586076485455*^9, 
   3.775860767787331*^9}, {3.775860876366447*^9, 3.77586087656569*^9}, {
   3.77590458036803*^9, 3.775904582333478*^9}, 3.775905803859097*^9, {
   3.7759060765376587`*^9, 3.7759061143394623`*^9}, {3.777236227550514*^9, 
   3.777236228402968*^9}, {3.777236439506547*^9, 3.777236453271559*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"ccb64cfe-f10e-4d19-91c3-2537fc804677"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Data summary:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["\<\"1 column 1\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", "3.6290592`*^9"},
           {"\<\"1st Qu\"\>", "3.6652176`*^9"},
           {"\<\"Mean\"\>", "3.7013200363636365`*^9"},
           {"\<\"Median\"\>", "3.7013328`*^9"},
           {"\<\"3rd Qu\"\>", "3.737448`*^9"},
           {"\<\"Max\"\>", "3.77352`*^9"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"2 column 2\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", "4.72`"},
           {"\<\"1st Qu\"\>", "19.44`"},
           {"\<\"Mean\"\>", "22.223540669856455`"},
           {"\<\"Median\"\>", "23.28`"},
           {"\<\"3rd Qu\"\>", "26.06`"},
           {"\<\"Max\"\>", "31.17`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.779292575066533*^9},ExpressionUUID->"beee19fb-0cf9-46f5-956c-\
a53ec8203894"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Plot:\"\>",
   "EchoLabel"], " ", 
  TemplateBox[{GraphicsBox[{{{}, {{{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]], 
          PointBox[CompressedData["
1:eJxVXHX8zt4X31e36fpgupluppvpZrqZbqab6Wa6mW6mm+lmuh5MN7+Pe53n
97z9gfO6deqee8/7nmdpWnar1SaCIAhjowjC33/D/5gPor8qxf+bRwn/y4kZ
41Wpig8GJNxYIe9f2s8fTk85/Clzk7gF/9KSFk6HNz4YcIXR6vgY/8Yb+f7S
xrZwOlBzV6pR63L/pe174XSWJuEzrM75l/aixXxVqnvxGNeX6dn/0mLemP/m
n5LmL600DadTj3oVPkOGv7Q+JpwO71w8Rv2sf2lrczi9PJy83oqt594Op8NX
Cx/A1hOixPq3fjbGvyzHovmy/KW1RrFo/cx/aXNksD0jk39jLNIH49e/EYv4
Y/xKEWP/W69QJiZ/jtjEH+tv1I/9Tz91ZCb/sNi0HuPPWxeb9FWAyX8tOF96
Jr8Q55/+TzB+9axBmq1n1QmnmXkeMH24Q+LQ/GmZ/GviEP+MX/lysD0Hk/9X
HLJHLiZ/prg0P7d/zbg0P9OPPzAu9We0tDIuycf6q25ckp/xZ3yPS/pi+rTT
i9SejclfXST7Mf2I/UVan/GjLBNpfS7/OZH4Z/5gfRHBf9w08V6VOvJ3ucOp
mfxV41E7W1/uE4/4Z/xpVjzSP/MP83Q8sLfzMR6tz/Tpp4r/qtRfcRNuTMXk
rxSf5GP8qT3j03qMf2NhkGbz2yfi0/zMX713wfFMf2JYAtov+Zn85ROQPzD5
dD0B7UemL2teAtqPrL97NAGtx2jhLfU/wdaTkyWk9dh+1cqE03/VkXlBISZ/
l4S0fxi/zuyExC/Tl38oIemD6UcKJKT5GT9q4kTEL9//SpBm/m13TET2Lszk
n5GI+OX+fxD7Ky8SkbyMPz1B4n/jHzH5rOKJqT+Xv12wnY0XpiUm/hkt70v8
T94wLv/TxP/W99l4U0xC7Ww9p0gSko/191snIf0w+aQpScCe6u4kZD8u/yOi
s3H5YyclezF7ewWTkj/y+NcyKew3ZWJSiF/6jqS0PpvP8pISf1z+GMlAP0L+
ZKQfxr/cPBntVy7/uGQkL5d/azLij83v3E0G+vCjJqd4z/pLeZKDvdQm1F6H
9TdGB2nW37aTkz3Z+t6t5KR/1l+MnILWK8Lkz5UC5tMbUvsCNt4akYL8mfmT
uyEF6YuNF26kAPvJEcKA1rKHkTxsvFkvDOZ3jDCyJ5d/bRj4q3Q1OL4ok/9P
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
Uv6fv/8B7NdZ+g==
           "]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]]}, {}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]]}, {}}}, {{}, {}}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
v10AN32d1HboSbFk5bdM60AB/A8uoHZL
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1937096#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
tc8jW7hQ6bdSPni5AMO8bos+pv7/H4izbw8=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1937096#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
PBMh9tb8TcFdf1OlHQskuGqnfMPYLwr+B4QYcj8=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1937096#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
ux6mcrsWiLBK0kSrjMmr/wHMckMZ
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1937096#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1937096#5"]& ]}}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {3.6260496000000005`*^9, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      LabelStyle -> {FontFamily -> "Times"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{3.6260496000000005`*^9, 3.77352*^9}, {0, 31.17}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"0.01`", "0.25`", "0.5`", "0.75`", "0.98`"}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Echo",
 CellChangeTimes->{
  3.779292576949801*^9},ExpressionUUID->"89e71b6f-799a-4f92-87d4-\
4dbbca97b4c4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Outliers plot:\"\>",
   "EchoLabel"], " ", 
  GraphicsBox[{{{}, {{
       {GrayLevel[0.5], PointSize[0.004583333333333334], AbsoluteThickness[
        1.6], PointBox[CompressedData["
1:eJxVXHX8zt4X31e36fpgupluppvpZrqZbqab6Wa6mW6mm+lmuh5MN7+Pe53n
97z9gfO6deqee8/7nmdpWnar1SaCIAhjowjC33/D/5gPor8qxf+bRwn/y4kZ
41Wpig8GJNxYIe9f2s8fTk85/Clzk7gF/9KSFk6HNz4YcIXR6vgY/8Yb+f7S
xrZwOlBzV6pR63L/pe174XSWJuEzrM75l/aixXxVqnvxGNeX6dn/0mLemP/m
n5LmL600DadTj3oVPkOGv7Q+JpwO71w8Rv2sf2lrczi9PJy83oqt594Op8NX
Cx/A1hOixPq3fjbGvyzHovmy/KW1RrFo/cx/aXNksD0jk39jLNIH49e/EYv4
Y/xKEWP/W69QJiZ/jtjEH+tv1I/9Tz91ZCb/sNi0HuPPWxeb9FWAyX8tOF96
Jr8Q55/+TzB+9axBmq1n1QmnmXkeMH24Q+LQ/GmZ/GviEP+MX/lysD0Hk/9X
HLJHLiZ/prg0P7d/zbg0P9OPPzAu9We0tDIuycf6q25ckp/xZ3yPS/pi+rTT
i9SejclfXST7Mf2I/UVan/GjLBNpfS7/OZH4Z/5gfRHBf9w08V6VOvJ3ucOp
mfxV41E7W1/uE4/4Z/xpVjzSP/MP83Q8sLfzMR6tz/Tpp4r/qtRfcRNuTMXk
rxSf5GP8qT3j03qMf2NhkGbz2yfi0/zMX713wfFMf2JYAtov+Zn85ROQPzD5
dD0B7UemL2teAtqPrL97NAGtx2jhLfU/wdaTkyWk9dh+1cqE03/VkXlBISZ/
l4S0fxi/zuyExC/Tl38oIemD6UcKJKT5GT9q4kTEL9//SpBm/m13TET2Lszk
n5GI+OX+fxD7Ky8SkbyMPz1B4n/jHzH5rOKJqT+Xv12wnY0XpiUm/hkt70v8
T94wLv/TxP/W99l4U0xC7Ww9p0gSko/191snIf0w+aQpScCe6u4kZD8u/yOi
s3H5YyclezF7ewWTkj/y+NcyKew3ZWJSiF/6jqS0PpvP8pISf1z+GMlAP0L+
ZKQfxr/cPBntVy7/uGQkL5d/azLij83v3E0G+vCjJqd4z/pLeZKDvdQm1F6H
9TdGB2nW37aTkz3Z+t6t5KR/1l+MnILWK8Lkz5UC5tMbUvsCNt4akYL8mfmT
uyEF6YuNF26kAPvJEcKA1rKHkTxsvFkvDOZ3jDCyJ5d/bRj4q3Q1OL4ok/9P
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
Uv6fv/8B7NdZ+g==
         "]]}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{3.6366624*^9, 12.44}, {3.6438336*^9, 18.06}, {3.652992*^9, 
         19.94}, {3.6625824*^9, 6.22}, {3.6745056*^9, 22.78}, {3.6887616*^9, 
         12.22}, {3.6929088*^9, 5.89}, {3.6986976*^9, 10.}, {3.7115712*^9, 
         23.94}, {3.7240128*^9, 5.28}, {3.7253088*^9, 4.72}, {3.739824*^9, 
         23.78}, {3.752352*^9, 9.}, {3.7578816*^9, 7.22}, {3.7647936*^9, 
         17.44}}]}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]], PointSize[0.01], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQQJziKvHWP6D33VmGPhAORvyBJ97bikwJbrerIl
iH/BUu21YyGQu7jAFsRv2Kr+2hGkPKYfzL+QYfza8U3gDrlWbXsQ/4GiLVT/
Y7B+h3hXqPxqsPkMHG4w/WC+AHso1H4Za7B6QyAfqPp1oAWYL3Az5bUjxKlg
8wU4iqDu+QCWP8Bfh2r+2iaY+yHmr5kIk7cC8QsYJsHsA/MFFJfAzLcD2++9
BOZ+MH/D7w2vHT0eVomsc7cB27dlF4r5F1r2QP3Dbwbif8g6CgsvsPyBx8dh
5oH5E7qvw8ILbJ4C1w2YfjCf4ds9lPBVUHoLDY8dYHkH+Xcw/0DC597X145A
xz2sugI2vyCR+Q3EPw3g8F/QDeSD3X8cEp/twm+QzU9gE4HKu9s6AAAjor03

         "]]}}, {
       {GrayLevel[0.5], PointSize[0.004583333333333334], AbsoluteThickness[
        1.6]}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]], PointSize[0.01], 
        AbsoluteThickness[1.6]}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]], PointSize[0.01], 
        AbsoluteThickness[1.6]}, {}, {}, {}, {}, {}, {}, {}}, {
       {GrayLevel[0.5], PointSize[0.004583333333333334], AbsoluteThickness[
        1.6]}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]], PointSize[0.01], 
        AbsoluteThickness[1.6]}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]], PointSize[0.01], 
        AbsoluteThickness[
        1.6]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{{}, {}, 
      TagBox[
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[0.1], LineBox[CompressedData["
1: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
v10AN32d1HboSbFk5bdM60AB/A8uoHZL
           "]]},
         "0.01`"],
        Annotation[#, 0.01, "Tooltip"]& ],
       Annotation[#, "Charting`Private`Tag$1937232#1"]& ], 
      TagBox[
       TagBox[
        TooltipBox[
         {GrayLevel[0.9], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]},
         "0.98`"],
        Annotation[#, 0.98, "Tooltip"]& ],
       Annotation[#, "Charting`Private`Tag$1937232#2"]& ]}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{3.6260496000000005`*^9, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Automatic,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{{0}, {0}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   LabelStyle->{FontFamily -> "Times"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{3.6260496000000005`*^9, 3.77352*^9}, {0, 31.17}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Echo",
 CellChangeTimes->{
  3.779292577402952*^9},ExpressionUUID->"ee5a13b1-4559-4c4b-8bcd-\
1fd0929d3cc0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qrmon2", "=", 
   RowBox[{"ToQRMonWLCommand", "[", 
    RowBox[{
    "\"\<\ncreate from finData;\ndelete missing;\necho data summary; \n\
compute quantile regression with 120 knots and probabilities 0.5; \nshow date \
list plot; \nshow absolute errors plot;\nfind anomalies by the threshold 1;\n\
echo pipeline value\n\>\"", ",", "True"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.775855718349896*^9, 3.775855726461151*^9}, {
   3.775857875734325*^9, 3.775858006133646*^9}, {3.775858132847616*^9, 
   3.775858153758481*^9}, {3.775858207064753*^9, 3.7758583426146297`*^9}, {
   3.775859390092031*^9, 3.775859406807631*^9}, {3.775859525534582*^9, 
   3.7758596537188168`*^9}, {3.77585988503401*^9, 3.775859886662125*^9}, {
   3.7758599565072203`*^9, 3.775859957954381*^9}, {3.775860006445978*^9, 
   3.7758600142318707`*^9}, {3.775860079774292*^9, 3.775860090695641*^9}, {
   3.7758604670508423`*^9, 3.775860468297913*^9}, {3.77586076485455*^9, 
   3.775860767787331*^9}, {3.775860876366447*^9, 3.77586087656569*^9}, {
   3.77590458036803*^9, 3.775904582333478*^9}, 3.775905803859097*^9, {
   3.7759060765376587`*^9, 3.7759061143394623`*^9}, {3.777236227550514*^9, 
   3.777236228402968*^9}, {3.777236439506547*^9, 3.777236453271559*^9}, {
   3.7782737026452017`*^9, 3.7782737444975863`*^9}, {3.778273838998969*^9, 
   3.778273849898136*^9}, {3.778276088605216*^9, 3.7782761212152023`*^9}, {
   3.778277185038562*^9, 3.778277199660467*^9}, {3.7782777309643793`*^9, 
   3.778277757327875*^9}, {3.778278135282344*^9, 3.778278137599764*^9}, {
   3.7782782231809797`*^9, 3.7782782683043833`*^9}, {3.778279307690497*^9, 
   3.778279322570643*^9}, {3.778279354311413*^9, 3.778279379957733*^9}, {
   3.778279583555056*^9, 3.778279595623474*^9}, {3.778280008586865*^9, 
   3.7782800531132603`*^9}, {3.778280322668962*^9, 3.7782803232069483`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"0dbad1da-1c5d-48bd-9834-869a83213854"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Data summary:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["\<\"1 column 1\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", "3.5976096`*^9"},
           {"\<\"1st Qu\"\>", "3.6422568`*^9"},
           {"\<\"Median\"\>", "3.6866016`*^9"},
           {"\<\"Mean\"\>", "3.686831818105263`*^9"},
           {"\<\"3rd Qu\"\>", "3.7316376`*^9"},
           {"\<\"Max\"\>", "3.776112`*^9"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"2 column 2\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", "6.710000038146973`"},
           {"\<\"1st Qu\"\>", "14.380000114440918`"},
           {"\<\"Mean\"\>", "22.688708101239122`"},
           {"\<\"Median\"\>", "25.739999771118164`"},
           {"\<\"3rd Qu\"\>", "28.922500133514404`"},
           {"\<\"Max\"\>", "32.93000030517578`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7792803306313972`*^9},ExpressionUUID->"8cf73422-3bde-4794-babd-\
d4adbf068e93"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Plot:\"\>",
   "EchoLabel"], " ", 
  TemplateBox[{GraphicsBox[{{{}, {{{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]], 
          PointBox[CompressedData["
1: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
LV3fbuTVc23N/IFybekv8G/Tlnkt2LO/rdHH/6StyadQ6bcNjrZ62/IfruOJ
6+GHh2/r+hfDDyXamfXFW7SjPuA/1I5757Rjf4UfirZX/56GH15vb/TxDG7P
/YQfZv13PfJse3vTn91N31F8QsZ9A9/h/oL/zHeMPyNbiPOA/413mD+ot/4d
6EfB4e+Jl+F8s6mD+msG6jFO3AH1mP9d1T8R+TbtXfoPebFB8fTDyIsr7xo+
vjwdub/gX6+jWa/3Ukf6D37I+R79jvqr+56p11j390y9+s+/Z+YLZfMxT5AP
tXzMc/ihm495DL2DPuY/9MzSifWDfKuueLYffujSif0E/Md3ot7gv6KT6jEd
fqja2fZjX2fyhx/Gdla/bwb/Pzjuhp9PdFb/7IEf3u2iuCX6xeguRo/Ib11U
L5wn4ke7mHxwpXnf5Eds8fvsF8iHwxxfi/p7viufj/or35X9ziN6Luyq8+cX
7D6g442LCPY5ujG/BQfLdlO+XsGR1sR+wd59iocOFBx43E31Hiw4XOoD1buL
4FjLDzRfmwl2fvIB80Nw6AGvnw09i3fX/jFEsKNFd+Y58vjj7lrfHuTx7O70
k+B4kR4mb1zNe9CfyOePenD9yOdQD/YH5Nu2HuZ5niY92V+g74Ce7OfItx/s
eHRzT/Y38L/Rk35Gv/D3MjjyXS/jp/jGXuZ+1zXFOfuCf77eZv2xqb3pN/hj
fW/TLzyXe7Mfg3/uPpovVcDf08dc717Xh/kCfS/20frtCP45+lr+dfqqPyuB
/wd9Df+ws5/RP1azn+kXzq79WN/gm9jP5Es0s5/1gHyo7rd51tmvz1+K+hvn
Z/6j/pb72U9wfqjSn3ri89p7/XX/FyCPv+pv5g8v7W/yJ3a8v+kP/g4f6jg+
/4W+/FD9hfNRNPwh+xPy+OiH6q/R4J96gOo7E/kwcoDpD/FFilOeIPwPWexN
NZD+A/8XB2p94nzoXDBQ9cR50vPvQF0vPt/6nw4kP5w/ywzS+Tbh/PnmIK4X
5+G9g6gPzvOPBrGf4zxf8iPuL/h7P2J/Bf9hH5nrw/c/MnxixQYrn7k4z78x
mP0W/IcMZv8G/58G09/Qt8gQ5h/0bTaE+wH+g4bQT+D/4xDWO/hvHcK8w/n4
tY/Zn6Dvh4pH9YI/ZnxMPujX/wCnnL/RX65/zH6O/tFvKNaTOAL+nj6UfoW/
Nw5lvqP/XR2q/sL5zZd3GP2K/vHtMOqD/vf3MOY58iJ5mOZzW9TjK59wfai3
vz4xeeK/8Imp11D24coX57No7eHMd+TbB8PN/MGzw1m/yIesn5p8jdf4lP0X
+fb+p6wH8J1AvBl5kekz+hd5Ue0z2/86fcZ6AP+vP1O+9cF/GccjyLfKAfoN
+dYxoOMu9L8xAdXHif73e8D01/ixAP0EPUd9zvoB3yWfM4/A98jn3H/wfWGE
Wb9j0Qh9Xhj8Do4w9/ueG6n1OAr6lhupesyAfr+O1PkHQb/9I01eB56MNP00
XPoLs3+xVl+YvA89/ML2sxKjTH9weEeZ/uEeOor7h/PZvVEmf+NFv1TsgD9f
/5L8cD4b/CX7F85ns3Q8MRXqxzVan4fzsafpaJP3/oGjqR/yd+Zok/fRLfZ6
X+MxWp/z0B/6j9H6xvk58v0Y0x/im8aov/X7vvgY1XMl6r/vV7Y/TPuKeQL+
G77S/W6H8+WVr5TPAJwv84w1ergjY7nfqPdLYzXPW+N8nvNrHcd5PVL3a10/
vg/zriXGeTNw/mtd327wzTbOXB+rZbGz2zjlo+f1M+PM/kWzjGc9Im9rjNe8
2IG87TLe6OsbP97oEc84wdzvqjrB9E+vbwLzBvzHTjB+Cv8xwfRXT6VE5gH8
8G4i/Q0/jE40/Tb6W6Lpt45jiWY/g+2DzEf44YuguT6+OGj85TrMcXwe9D4/
0egR+3yi4etcONHsn+fARH0+vg/1Oybp/FfBv+wkXd9j6Dt/kqkP375Jxn/B
x5PYv8G/1DfG34HoN6oPzhfhB9+ovw+Cb/HJZr+dLSYzD8D3Y8X6/Xr0rsWO
olPob/BtPoV5DD98NEX9jPNJMDSF68P3aYW/pX/Rf5t8a8YDA75lHoH/D4or
VQL/zXq/ngf8r07VfMH5I+SfSn1xvvluKvMB3wdumsr9xPeB16Zy/Tgf9JnG
/orvK6dOo/7gv34a+z/eh1+epnzx76ECuaezv+J8M2W6mc+zbjrrBeebi9NV
r/14H57jO9VjON431/mOeuP98bnvmOd4/+38Xv3XCe+/a35Pv+P9cleOJ+H9
9+nvle8DfD+ZeQb1wvuh6sT4fYCn8wzmI97fj5vB/cP774w/mP10V/mBfHEe
e4/jYZzHvrLXR5b+QD+ivl6eyfqCHzrMVP5FcJ78cqbqtxn8w7we79+dR2eq
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

           "]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]]}, {}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]]}, {}}}, {{}, {}}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
nGsp9TQm/wN1XNnB
            "]]}, 
          Annotation[#, "Charting`Private`Tag$610690#1"]& ]}}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {3.5938908000000005`*^9, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      LabelStyle -> {FontFamily -> "Times"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{3.5938908000000005`*^9, 3.776112*^9}, {
        0, 32.93000030517578}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"0.5`"}, "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Echo",
 CellChangeTimes->{
  3.77928033190718*^9},ExpressionUUID->"d96a757c-a4bd-4925-b238-9d2f240315b3"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Error plots:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{"0.5`", "\[Rule]", 
    GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxUnXecS0sYhqN3oneid6J3ols1WJ0VZVdbRO8cvRO7WF10q91oqxOr9+id
KKuXaKtz53u/cGbmj3s9v8kmbyZz5szMOXmSq0u/5sFxDQbDDqPBQP8XxRpz
/mUN/OvAqoPiv1qqC4LbRETlbDq+umDjbOL1Oye32LnrsGDLngv+x//cRo+3
PyL2rpsU8Xoe1TuTXxS8+VeKCNtm+ntPOeJXtXy9qh6hetsu4mQD7WOsbmLH
A+KltTN1HXCaHu9O4nlZw5J0+asraWOIfaUF29pffdxxzmNiU5BgQzvT8g+l
ooi9CS8JfnghT5I6+HtjyUv+fG32UT5Le+KnvpQBfbbR69knEVvyFnKef0ls
iH9ZvN7bTSeeLblDbC4u2NDjc0TWfevp+WxtiD+l2b4h/1rkHU+84dKYE50v
Iu9m4uS9g3qX2Ez11iJXXtbwXl+Q7MOsGGKtpWCt+KBE5Y/dJnaNFezO9Gvs
g053ib2RV/x5s52qSvmv0uPLNMmZOQme39n8Kr1+TPT2utyeowS7Wy4r3Orl
LWLDesEWb+j72mmvEZsvCdYihp1usw9s+yHYNvDnnG/puf3WXBPPt6vDKdft
q8TWC8R3A3N/m7aSWPsqWAvY+vN64cvIm/u6eP5LoYPmX3qAz3+lYC1Tz4t3
F5xBe569Tp9/1pN7v5/H5/+Z6u9HBzUtjnpPzhv8/lL2K3iI/t+AuE2VBu0W
zUd7nhKshSYZN+TZVWL3B+KeSxK8aHkOn3+2my9rmG4mK//D6UX+eoLdn8K6
xwx/ifz9iRd9X/0xx3P0h3eCneUWvu7b9Cn6Q5ZbIn9Rb99Mbx4SW2oTl7yn
FTt8m9je9xbl/xH5fPtE5F8o2H367dod5T3oDxlvc/4q7dJUo/asQfz4UQZn
/1P0947exMWSDkr9Fe/XPV+wVrFZqkW18Pe+w1Rv3xj5oO0x9Idqd8Tzl29m
vt0e9a4ed+j5La+n9X1Lz+8NI+5SKOX9pweo3niQ+PLZLOn3oj9anhEnHFFu
wyL0f0/wXcGx83aO8+HzMzjuIq+WLthKz2feR7y0S704hY+hPzwhDlvum+hA
/3CkvCf49sQT3dIeQvvOIk6z5NFN8070593Ex7pYHAVPIf/De9wey7I1oed3
Jbsv3m+zLS+/TruJ/lxWsOVhSfPysIfoHzsFG47blz8Jv4b2vU+PH3p+WKIZ
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
8Q1xYK7JzsMb0Z4ZEwp2Dqj4ptQy5K0hWNs+79AnC8ZPZ++E/H4N5U7S+/XM
p/qQ7Wunf8L8wpYukag/UiaT1foU7VlNsDdhpYHFxqP/unsItnz7OvVWa/Rf
Xxg9fvaIGsvuYDw3HRSsFU1yLPlYnO9dlROLz2PEo1xlDqO/eoMFW+a8fP4i
4B7yOwRr5rbju6XA/MT+hOpzeV+uy4X+aOiaRNSneBSncAacH82ziAN/H63y
5Tz67+4k/vfTYxb1T3eypIJdObK4R/L8d7pg7derDSFHkU/bKdjkrfux12wc
r6779Pj2nYrtXMvrz8TJqP89uZI6Bc5HxtKC3blWDzU3QX9ybqN6x+vzX7Is
wed9J5n/9QtFUXsaEian/tC/RYWOnZDXTJxxWv2JK7G+t7Ujvl+/15ji6L+m
eCkEP3dOzHcS5xNrMeLt65fFuYb5m9ZasKllaPzd+TBfcI0TrLXdVjBD4xf4
vA0pRf3UkWFn1j9D+xUWrDU+ur/xEbSvM1CwYUn/FFvr4/jxjCE2v/X66i1F
+0bS43ed69/7Ah8/BVKJ+lQ5hiY9jfHX3Yw4TdePG4y7MP6OFOzOEDWheR3M
r0zrUvnfvxaE+YSHuIq1WdxCmN96mxgFz0s4vnGLTWjP4cS+gK57SoTh/Laa
2DOj1szYyTi/nScOip9oVbQL+b8Q167xsWdK9CebM7XgNiEljVNw/nacIS7Y
MeuktJhvuT8J1nK9L7yvB96vL0caf75jizBfXyZY6xH1NvtbHG+uk1R/oV26
8F1bkPe9YHdrW5bGF9EfjdnSivru69d2e8bzs7rEo4NDbsTcwOd/jDjL2e/1
soEN74jPLQ2J0xTnJ3PmdOL17J6y3cbz+qJWOn8e8xJqL0cfwRZjzfnxv2F+
ZXpN9aU10/HhON9bM6QXn2/ya6vb50J/1SyCDZ32zt16FvNPVy/BWvH0TxwW
fH7eecTrj38ZfNSL9kybgcavjlunZuLxqirxxNsjQlKuQv7uxLM3BVZ5i/mP
IYx4bxbTjQs4P5sPCNZ6Pt587Qbev7tSRpHnfM+qu2Kx/+DrJtjyI3W6jlNw
/jXNyeh/f2O3oT/sJS6bd2eihljfaI+JN7e5WqQC9s+MXTIJ3jAl5anZGO8t
MwW7H9cammgE5t/2KKofV21HonjYj3J6iR8VijdpJvaPbNMyCz4/s9Fgw2P0
3x2CtWf7R11c8Qr9955gd43o1dO7v0N/SJRF1If16GIai+c3lRJsm1zt9PTR
cS3Uni7Bjs+LFxRY+wHj1W3Bruefc05M/RH9IUFWMR4GRHcLsL1C3hKCbX2i
jrp3YT/J3lawaVPohZlJsb9iuClYa36p49m6vN6Mm03keekwNnPy+q1oNn97
XcV+o6MVcc2yxRvXwvnHrWWj/pyv79I1OH9Y/xCPyN5jU0f0J61QdvH4XUtO
pXqxA+NDC+LnrnpTb2P8947O7n9+w1Lsp20QrJ3PVu2AAeszZ/4con5qUKeV
37De81iJR1+rYO6CfIaRxN3ido1aivmhea1grc3QYrNNJ5D/ItV3zFlgcRjW
U77GOUV93A2vjvtwfjMNE+wu1KtV7Fk8n3WVYMN/VcYFdt6D/OeIuxoTD36N
+aQrlvh+xvqBv7F/aBlsErwqx/z2mzAe21eY/O/HMp7ej/O0YK3eo/i27hgf
PB+JN3VPmmUIH485conHxz4ZPeUl998TgrWT1kJrq+Lz8Pmovub4K98W8/5J
1tyiP5e4UHHzZDyftY5gQ5+GRWsEYrz2HiX+Oml8uqIb0X/f5vbnWYD5pSVT
HsHaV1+zNZjf2GsSX+pdYFsczBedocRB++NMLIT9U/Mr4h/u9s/zoz1s6fPS
82Vt8n3JAPTn6oLdoeb0iWORx92T6jNVPD/2EucPJy648MfiKf/hfJEmH9WP
3HhrM57PVYV444Sp7VPuQP4Q4q89AtfOmID8c4mPbT8TfBrrScv+fP73s2Yh
ta+nYn7RXu/PpHidEvsvhm7ETeal/G8NxgvzbOLHNboeSYD5u21Pfv/fH1iJ
8e0R8apll+3T8PmaOhcQj786+MWZu1h/WGcUoPH3aqv1CdA/tF3E3TPPGDUO
5x/XA+LAEpPHmyPRnlMLis/n6ouIjoP4fLy9IJ1v3WMnTMb82HNXsPvNrb7T
RmI8MCQqJOpPJl/Y8gDO7+aSgrXF2eu6f2A+4P6P6kud2jVzxB605y2qz5al
25/+mK+Y4hem9npdImgy3q+1OHGc5DFLHmA/VWsj2PS+cFS3rW8wPtwQ7E7n
Lt1zCI8PcYqI52vXO/+k/o+Qvwjxt3jp69VE/3S2LOJvrw3L0N5jBdsSt2/o
yo3x2/ab6nPETInXGedbR8GigqPefr2xH/MJd3Pip5cbZEyC/TrfKOIFTS7E
/bgbx9964q2n6kzOgf0PV75iND+cv3psHDyft2kxmi8UyV8uL84fxhHF/p7P
W1MeyxrixVUu9GiG+ZT9AvHUjlVmnbuA9m1cXLxfV4nVN3dg/DcPLU7zX/uv
tk15/baSWOucIX1tnH8cZ4nTVeiQ8SLY/VmwJezko7oF76N9B5UQz9di2dHT
6dF+2nLiSWeaBwZgvuM6JViLbfBlUhqMr94Pgg1ru6+OrYPxz5jdLB7vdd29
Pwaft3OJYFNu77sqfd+ifxwnftdxkvvWF+T3CTYsq1H0U3PMd81ZSoq/3925
zNxKeD+22oJtOWO6DkyF1/NFCzZMbrmowHXM10xvBDuzDE1ROg7+3pqxlL/9
Xm7EfKMG8awFkXkbY/xw9Sbu3b7C3Xs4n9vTlRavZwyblt+D49tZTbChbf3w
Nztw/vf0IPZVGnHv4nLkDResBcW0is2E9YEjdRlRb7tk7zF/JPpDZcFavq6N
Bo7g83OwYEfPT1ElK+F8ZnKUofP15XNX3Xg/1n1l/Hnjb6e83gpl6XhMc6Ps
Tg/as6tgzWhvd+EA2DKLeNuFzBGfwPbdZf1/n2oX/b3zIXH8Sm/+xGC/02wr
J17PN6JT3CY4H9umC/bOuDf4dx5eX+wsR/NNS2+jiddH9+nxadYnWDcT60df
4vLi9YY0/FXgOu+3TylP64OHX581xPnWtU2wO2OW7wc2o7947wh2LsuV5X0q
vF9jwgqifs7Uuw23gC1mwc58iYdN7v8O54utVH8ne8YZTXm9casCjcdj2668
shf541UUr3f5S7Ek/fB52YoRd0+4ZehJ7Ec6WhN7v9zKNBTjg+l6RX97BIZT
e1gNlUT+l5nuD2yM96MVrkTjobWMfRb+3hVI3HPl/WRDcH7yjiFeN2vX3laY
f9l/EeffMzxTI8x3nQUq0/ojZPzQYaORvxlxtXWP3tXHfoVhlGBNe3MppCKv
l9cRP0hcfHcQ77/nrSK4c8qCDT+hf/maVKH5+vc6eacvQv7hxA0WLegWgfmw
dXUV//tZhf6hnae/zzawTHcz1l/GRlUFV7WU+fQbz2cZQjwlT+j53ZiP252C
3U+PJn+cDOsX55mqtD5L8v3PRIxXnk9gr3se7+fYBlaj+eqmwKDVuF7hWEY8
u/rpuAmxH+I+SWxouilFZBv07/eCLSmCgloO4fVItuqiftiy3xGRWB+7Flf3
569yGPttx4gvmNb334Xx3vhOsJYo6kqeajgf2GtZRP2cmqXn/MD+vSGa+Nis
mmNGYT/M/JrYOzjBkDgz0B8y1BB8b1X6RheRz2Ehvvlt8tgqOL+7ewnWdrw6
W/kY1mPWF8QFX0aMyoD+oqWtSeuHtymL/MZ+r6uqYG+vIC1RARy/3u6C3R8H
9e13jPeLw+jx+RPlilmE/UinsZbg+o+GRlydg/GiEvGeqgVHPVuH/MGCbbmz
9P6+H89nnlPL3x5BW7DfvVewFmDp2icb5sO+8rVFe1b8+io8/D7aswvx3Z0d
ts7CeGqdWZvmF+KUsgfjkRYlWNt84s+d1ZgPWjrV+Xv+GEfPb58mWMvZ2xc+
h9ejO4gb9/sU14LjzXNPsHN/WlOaaRiPHJPrivdbrEOCGx9wvdvtqkvz1auv
o9O8xud9m9iV7Mb+lXi8KUE9waUdh86nR/+2lhBsWLKt06Q52H/zbhFs+Vl9
S4kCmI8ab9Lj+1bN/Sg1xhtL3PqCl/bPUqAC3p+9aH1qz+zlE57D+cjZqr7/
/TzfQP3f9ofY4Wr8wY7Py1EoQPx96+CU5X9jPeluQbx66/T0rbB+9I0WbChn
LNnlF8/PfhI3mf443yqcv135G9D4fa/M6OOYP3utgrX8MwptWYfxzjiyAb++
0/wW88u1gm0l5iWO8WC88+RpSOvNmNymzjx+NSFuc3lNdA3M/8zDBLunHM/W
ZQzmM7ZVgk0fjm1plATnU8c5evzOeq2+HsX8z9SwkXj90z/a/T6B/mAd3IjG
oxBT/eq8H7xCsLti8SPBMzCeuU4Ltp3wJZoT/BHt/ZH+fv5cz/mBfP5d2lj8
vedwgtQ9cH3bc4I4dlKL2KHY3zC8J37Xv9nmQXw9I2sTf3tnw/rRvagJ9a8z
rW794uudR//WO7F+Nr0lThln0x0j8lgzNaXz+ZexRVtj/NZqEvsepT5UeCaO
nyNNaTyslX/yYqwnLa+o/unH0HkJcT63p7eK93exZppMtfnzr07cw7VrfMW7
aO+egi1F3hc+1xXnH9tzwVqJpElvx8F835GmGa3Hyu7pUxzrXXcV4vBLCayp
0T98IYIte2scG/yM1/tzqX5I68sZArHec6VqTuvdrc9epefrLRUFa5PehPZO
iP05YzfB3syngvuWxP6bZTY9/mr408KnMJ7Z9zT/u95rgv2o8i0El1lo+WrA
9V5zZ+JhawqaIxwYv2YQ7wl68tm3COPXLmJn+R7Li3bDeBUUSP059liOD9j/
1qYKNlS6dDlfavRv13bBpm13kmYpxfcb3BVse96qa7w+2I8yJmop3q/lYcub
A3D8OicJ1gY7T3TtwNe3/mvpz3sG8yXDbeJWXzru5fWSOX4raj9Xj1rBOF/a
igvWvMf21smG8ca3mervhedI1wn7y6YbxDETx+7rchL9IU5rOr+l2t42Cu9P
K0JsiDiX70Vn5G/Z+u/8ZxHmu1eJLeNz/Og3EO35mzgmcmPqHVi/OAu2oeN5
XlAHK9rb05zYdbj2rwqY3xlGt6HxZe2ZRhpfb/lB9ZdHfn6WAuzO15ZeL8GI
Xg2qIH9T4pyx/90MwP6aaQRx9/DVEYmwP21dQ1wwylDIw+v53O1ovVso44kv
fP27sWDD55FDX0TifGAZShy5y9JiFF7PvlKw5VBHb+b4WL87z1L9wsjW8dcj
r7lBe8EVw9+V/YDr17ZBgi3Fn7197+PxeLlg96m09UJa4nhwn6LHN1r44lw5
rAd9H4i/9N5UrRvvR/TvILiH5/yCWD6fLengb9+iKzC/PE682FP4Ujwcn0Zf
B9qfHbjbOBDjsyVLR1Hf9E6BkFYYnz0LBVvKFI9//iTej+Eo1TdKFGQN3Ir+
/KYjrSeT1n89DXlsGYMEdwuvOmM11seOGoIN53OuOOXfX31J9c2Gz5jiQj4t
XSdRfyJyaLa0vP9QrRPndW/3Im8P4jYn9j7w8vW3Z8SHLpYpXwbrf2dqG82/
tJCAF7z+rEy87eW7MSFYjxhCiDtUqfru52K0t0Owe8WnbxuXYv3qTtlZHD+3
b0ccb4Pzl69CZ3972YbT65u6EntvuPPfxv6MdRbxwkvV9lw6jPy7iS/0DZq1
DtcHjOW6CJ7/KOD9Cr7eaROsmWI3H96F/mGf3sX//G8jMV/fKdhybnTCE5+w
3vHcp8cvbb++b9L36A8du4rz85MnLVs8/oH+PEWwtczS9zviY7x3bxNsSdQ1
7fw9fD3gjmCDO022VHfweqaE3QRnjTZ8a4883q3EGZ6mGbQN60fjLWJbhp3D
4mG+ZIkXLDhbzlzl9qJ97cUEa/GyXkg6AJ+XYXOwP797EOU3XyeucKrajA84
v9gMIfT6Zdfm3Tobn39h4k0DYn+MxnzVHUg8tPfS4Ee8nr8iWFuxt/nkOLzf
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
sHNT3erHrLh+Zvws2Nq49rmXsWBLzrd0/flQ/COLcPzaAwRbCr0pUJT7p3Mg
1a/LGN5sP/ZzzR+o3vPq5phO+Pxs2d6J17u+rmD2FsjjqCvYMqh7+hRxcfy4
7e/87z8W17d8iwWbypwplq8Dxmsts0/Un0ybPF47XL911SJuUiWoww6sl7x9
BJsuje+bYATGb+NCwa7lWuC+Svh8LNGC7ZkGTb4Rhv0Lj+U9fT/258ZkXowv
ht6CDeHPb89ftwH55xMHNmtvHID5pO2wYK3T6/UxE3D8OF4IttwsP23UHqxH
TD0+iOeLuyKyNo9v1rAP9P4eGydmR//UDgg2VOhwOvNBzBdcTz/QfqUp7Ehh
XL/wGj/633/8cFyPmUN86kHODokxX3buJc7x6s21Wny/3WPiXH+i1kzH8Wmu
8Em83tHLlh+xfD0x6hPt77UtV2kcz3+8gp07Et6othF/b0r2WdQ3rz4ubxT2
t6xlBbvCqpXrdg37r1qnz/48V7AeMt4X7NzQsL+lOebnlsSx4v0uWpR0UhNc
f3d2iKXrcd9jpiTA5++ZTPxjozHjZOwf2xJ8ofvpvs65uB/rVUcJwbbHBSaE
D0T/c7f9Qvsr/dKEbUP7+SZ8ofszrpyv8JWv12/98ne9zdc/i34VXHjT2nYv
MV/2thKsnXLN6ZgR+0nGccQ95wwqeALjgWUT8YfjdcPH8/111+jvp3c/8a0I
9vMMgd/E+7eM/jBwIH+fa4NgW9tMvjJDMX45Lgt2Fxj1PmIV31/w8xt9X+Zq
1IR6fP/qyO/i70deH7XUzt8Xufjdn3fCDnyf4RtxjUu33lxlP0TeH4L/DLDY
B2B/zLlKsDvadN4QyvPdcz/o+oztkysd/C6GL/T4YTVGPvmC8d6c66d4/fI/
06Zvyb60hoLdH4qNmFKR7/c8/ZPWZ61fF9+A/mz69JPuLzt57toRXi/n+CXq
P+xNXtaM6/dafeIRkb0edMb9QK4Bv/z5p45Cf8z6W4xnT8otrZwK53NnHcG+
1IWS9/yM9vL0E2zuOtc3ZADYsPg3jb/bni9uye2X6Y/I96V39W2dsJ521xRs
6Le50iInjldfqGDbgIg48UP5elyEYF+HYYfX7OTrGUcEe+3zbmVYDRaT3tc1
vD2ub9vxDud/Yy/BhvMHy+TPj/0KyzzBnhqfa385yN+3PyTY9GJm0vfz+Ptb
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
7EOW8msqw4csMfuQpfwtVJZ8yJx/g8rsQ9YL+5ClMlJl+JDl/BdVhg9ZYviQ
5fyrVGYfspQ/VmX2IetF9yH7859WGT5kOT98yHqBD1nO61MZPmQ5bx2V2Yes
F92H7M8LH7KUt6bK7EPWC/uQ9eL3If8r8CHL+XuqzD5kvbAPWS/sQ5byh6jM
PmQp/36V4UOWGD5kOf9slXUfsj//I5XhQ5aYfchS/l0qsw9ZL/AhS8w+ZCnv
XZXZhyzlLaky+5D1Ah+ynBc+ZClvcZXhQ5YYPmSJ4UOW8xdRWfch+/OPVZl9
yHphH7KUv7nK7EOW8q9XmX3IeoEPWc4/QmX2IUv5L6gMH7KE7EOW8q9UmX3I
Uv7PKsOHLDF8yHL+UyqzD1nKTz5kieFDlhg+ZDm/T2X4kOX8tVVmH7Je4EOW
8//zIfvz11CZfch6gQ9ZzltNZfYhSyVcZfYh6wU+ZDlvsMrwIct596nMPmS9
wIcsMXzIcv7dKrMPWS/wIUsMH7Kcf6fK8CHL+cmHLDF8yBLDhyznv6MyfMhy
frPK8CFLzD5kKX+8imr+YirDhyyx7kPmAh+ynL+wyuxDlvKPUZl9yHphH7KU
v5nK8CHL+depDB+yxOxDlvIPV1n3Ifvzn1cZPmSJ4UOW8ztVZh+ylP+TyuxD
1gv7kKX8J1WGD1nOn6262r6LVWYfspT/ncrsQ5ZKtMrsQ5bywocs5bWoDB+y
xPAhS8w+ZClvVZXhQ5bzhqnMPmS9sA9ZKsEq6z5kf/69KsOHLDF8yHL+mSrD
hyyx7kPmAh+ynHeHyvAhSwwfssTwIcv5bqsMH7Kcr4TK8CFLDB+ynDdufTVv
UZV1HzIX9iFLecmHLOdtoTL7kPXCPmS9sA9ZymtV+Z8P+W/etSqzD1kqTVSG
D1nOv0pl9iHrBT5kidmHLOVfoTJ8yHL+jyqzD1nKe0Jl9iFLef/5kLnAhyyx
7kP2532rMvuQpbw1VYYPWWL2IesFPmQ5f3WV4UOWGD5kidmHLOWvojJ8yHL+
uSqzD1kv8CHL+bupzD5kKf8eldmHrBf2IUv5Z6jMPmS9wIcsMfuQpbzbVYYP
Wc6bqKXanpNU1n3I/nJbZfYhS3mLq8w+ZL2wD1nKH6e1mr+IyroPmQv7kPXC
PmQpP3zIUv7mKsOHLCH7kPXi9yHr+ZuqzD5kKf8aleFDlph9yFL+oSrDhyzn
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
BOQj8JDFxerri47Reic8ZDuTUZbLEN+1eMhsQBHWv7mHzJZ2XeX7Afk6PGTm
tSikpor2W3MPmY2eWK7Zlt6H4R6yGJ9YfqcvrXdyD1kSOWH8Rit6v4t7yGxy
H7M+b+n9B+4hi27HNlWG0f5U7iELuys7KHxEPAgPWZSmKefsoevnHjJrrlim
GIHnTx7y1herFN/Tfg7uITPNdy6tnNEeyUPOWKLxVw370+Ehs6abCy/k0Pt9
LR5yVBpvr+Qhe7ye4DCP8gvuIbPf5zd6LkD/IA85fNbr6mt4nvCQxV8hS8pm
U37BPWShrcWecBnmI/KQjabWTu9F8WSLh9z/MMY37iGzB+YPbP/gfpKH/Hac
z25F7LcjD1m68K7J+NNoz9xDZnnz/+oswHgBD5kdlv4cHIP+Dw9ZTEzZ9a0/
vZ/BPWQ2wHJ1oB7tt4SHPK5ZX0Og9QLuIbPDPY8O7YvxkDzk6D+eE/tivYI8
5Auz3ro1YP8seciTivo8nYN4iTxk8dbBG7t90R+5hyxI46v/LKD9odxDTjJU
sVuZWI37yT1kqbv2txcyjPfwkEXhfQ+7bahHyz3kKOT/5CFL5tas3Un78bmH
LGqHNl87iu8HD5mN32s9sg3lmy0ecjHqm+Qh2yvOuW+J9VrykMMTDjzfjHyL
POSJmrYbCzH/w0NmYTqXvVfTfg54yM6/dIVHJzC+wUN+8SC1cSjtr+Mesnih
ztcrlepT3EMWgrt1y3yE/SXwkAXlWBPnUprv4CHnHz+z9Abid3jIbJ/LZ/t7
eB7wkJmCyfuKl5ivyEPOGJd58eMh3E94yJf8/x6eSvsvyUPWLOqjsADtAR7y
rN+NWdvwfFo8ZDb9FvIf7iGLs7VHHlJE/gkPmc14cGTavE9oD9xDZj7pKVMX
0Hod95CFk/rN1k54HxUectKT3+09TuL3yUPO66h/zYHmC3jIad80pv6JR3uG
h1zmYrmlEPcfHrJ0ZfOtcZ0x/8BDtp3csbdmGfYDkIc8J/zNvjYYb+Ue8ge8
n0Ee8rjlNq920P4DeMjK5r96fkf7hocsnL19oP9vmj+4hyx8MW3uG0D1d3jI
JiUHf2fQ+zHwkD2cxxur4OfwkFmA2cT9GzGek4e8JG/Yvdm0vsg9ZLHHhD/r
rXH98JDFDUO3PGtTi+vnHrJUWdVwuFodrp97yFp2FxVTJuAzPGTToELrlUt/
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

       "], {{{}, {}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{1426, 1}], LineBox[{1428, 3}], LineBox[{1429, 4}], 
          LineBox[{1430, 5}], LineBox[{1432, 7}], LineBox[{1433, 8}], 
          LineBox[{1439, 14}], LineBox[{1440, 15}], LineBox[{1441, 16}], 
          LineBox[{1442, 17}], LineBox[{1444, 19}], LineBox[{1446, 21}], 
          LineBox[{1447, 22}], LineBox[{1448, 23}], LineBox[{1449, 24}], 
          LineBox[{1459, 34}], LineBox[{1460, 35}], LineBox[{1461, 36}], 
          LineBox[{1462, 37}], LineBox[{1463, 38}], LineBox[{1464, 39}], 
          LineBox[{1465, 40}], LineBox[{1466, 41}], LineBox[{1474, 49}], 
          LineBox[{1475, 50}], LineBox[{1478, 53}], LineBox[{1479, 54}], 
          LineBox[{1480, 55}], LineBox[{1481, 56}], LineBox[{1483, 58}], 
          LineBox[{1491, 66}], LineBox[{1492, 67}], LineBox[{1494, 69}], 
          LineBox[{1495, 70}], LineBox[{1496, 71}], LineBox[{1497, 72}], 
          LineBox[{1502, 77}], LineBox[{1503, 78}], LineBox[{1509, 84}], 
          LineBox[{1510, 85}], LineBox[{1511, 86}], LineBox[{1512, 87}], 
          LineBox[{1513, 88}], LineBox[{1514, 89}], LineBox[{1521, 96}], 
          LineBox[{1524, 99}], LineBox[{1525, 100}], LineBox[{1526, 101}], 
          LineBox[{1527, 102}], LineBox[{1528, 103}], LineBox[{1529, 104}], 
          LineBox[{1530, 105}], LineBox[{1531, 106}], LineBox[{1532, 107}], 
          LineBox[{1537, 112}], LineBox[{1539, 114}], LineBox[{1545, 120}], 
          LineBox[{1546, 121}], LineBox[{1547, 122}], LineBox[{1548, 123}], 
          LineBox[{1549, 124}], LineBox[{1550, 125}], LineBox[{1551, 126}], 
          LineBox[{1554, 129}], LineBox[{1555, 130}], LineBox[{1556, 131}], 
          LineBox[{1557, 132}], LineBox[{1563, 138}], LineBox[{1569, 144}], 
          LineBox[{1571, 146}], LineBox[{1572, 147}], LineBox[{1573, 148}], 
          LineBox[{1574, 149}], LineBox[{1575, 150}], LineBox[{1576, 151}], 
          LineBox[{1577, 152}], LineBox[{1579, 154}], LineBox[{1580, 155}], 
          LineBox[{1582, 157}], LineBox[{1593, 168}], LineBox[{1594, 169}], 
          LineBox[{1595, 170}], LineBox[{1596, 171}], LineBox[{1597, 172}], 
          LineBox[{1598, 173}], LineBox[{1599, 174}], LineBox[{1600, 175}], 
          LineBox[{1601, 176}], LineBox[{1602, 177}], LineBox[{1610, 185}], 
          LineBox[{1614, 189}], LineBox[{1615, 190}], LineBox[{1618, 193}], 
          LineBox[{1620, 195}], LineBox[{1621, 196}], LineBox[{1622, 197}], 
          LineBox[{1623, 198}], LineBox[{1624, 199}], LineBox[{1625, 200}], 
          LineBox[{1626, 201}], LineBox[{1627, 202}], LineBox[{1629, 204}], 
          LineBox[{1637, 212}], LineBox[{1638, 213}], LineBox[{1639, 214}], 
          LineBox[{1643, 218}], LineBox[{1644, 219}], LineBox[{1645, 220}], 
          LineBox[{1646, 221}], LineBox[{1647, 222}], LineBox[{1649, 224}], 
          LineBox[{1650, 225}], LineBox[{1655, 230}], LineBox[{1656, 231}], 
          LineBox[{1657, 232}], LineBox[{1663, 238}], LineBox[{1664, 239}], 
          LineBox[{1665, 240}], LineBox[{1666, 241}], LineBox[{1667, 242}], 
          LineBox[{1668, 243}], LineBox[{1669, 244}], LineBox[{1678, 253}], 
          LineBox[{1679, 254}], LineBox[{1680, 255}], LineBox[{1681, 256}], 
          LineBox[{1682, 257}], LineBox[{1683, 258}], LineBox[{1685, 260}], 
          LineBox[{1687, 262}], LineBox[{1688, 263}], LineBox[{1695, 270}], 
          LineBox[{1697, 272}], LineBox[{1698, 273}], LineBox[{1700, 275}], 
          LineBox[{1702, 277}], LineBox[{1703, 278}], LineBox[{1704, 279}], 
          LineBox[{1705, 280}], LineBox[{1710, 285}], LineBox[{1711, 286}], 
          LineBox[{1712, 287}], LineBox[{1713, 288}], LineBox[{1719, 294}], 
          LineBox[{1721, 296}], LineBox[{1722, 297}], LineBox[{1723, 298}], 
          LineBox[{1724, 299}], LineBox[{1725, 300}], LineBox[{1726, 301}], 
          LineBox[{1735, 310}], LineBox[{1736, 311}], LineBox[{1738, 313}], 
          LineBox[{1739, 314}], LineBox[{1740, 315}], LineBox[{1741, 316}], 
          LineBox[{1742, 317}], LineBox[{1743, 318}], LineBox[{1744, 319}], 
          LineBox[{1752, 327}], LineBox[{1753, 328}], LineBox[{1754, 329}], 
          LineBox[{1755, 330}], LineBox[{1756, 331}], LineBox[{1762, 337}], 
          LineBox[{1763, 338}], LineBox[{1764, 339}], LineBox[{1766, 341}], 
          LineBox[{1767, 342}], LineBox[{1768, 343}], LineBox[{1770, 345}], 
          LineBox[{1771, 346}], LineBox[{1779, 354}], LineBox[{1780, 355}], 
          LineBox[{1781, 356}], LineBox[{1783, 358}], LineBox[{1784, 359}], 
          LineBox[{1785, 360}], LineBox[{1786, 361}], LineBox[{1790, 365}], 
          LineBox[{1791, 366}], LineBox[{1792, 367}], LineBox[{1800, 375}], 
          LineBox[{1801, 376}], LineBox[{1802, 377}], LineBox[{1804, 379}], 
          LineBox[{1805, 380}], LineBox[{1806, 381}], LineBox[{1807, 382}], 
          LineBox[{1808, 383}], LineBox[{1818, 393}], LineBox[{1819, 394}], 
          LineBox[{1820, 395}], LineBox[{1822, 397}], LineBox[{1823, 398}], 
          LineBox[{1824, 399}], LineBox[{1825, 400}], LineBox[{1827, 402}], 
          LineBox[{1828, 403}], LineBox[{1830, 405}], LineBox[{1838, 413}], 
          LineBox[{1839, 414}], LineBox[{1840, 415}], LineBox[{1841, 416}], 
          LineBox[{1845, 420}], LineBox[{1846, 421}], LineBox[{1847, 422}], 
          LineBox[{1848, 423}], LineBox[{1850, 425}], LineBox[{1851, 426}], 
          LineBox[{1853, 428}], LineBox[{1857, 432}], LineBox[{1861, 436}], 
          LineBox[{1862, 437}], LineBox[{1863, 438}], LineBox[{1864, 439}], 
          LineBox[{1865, 440}], LineBox[{1866, 441}], LineBox[{1867, 442}], 
          LineBox[{1874, 449}], LineBox[{1875, 450}], LineBox[{1876, 451}], 
          LineBox[{1878, 453}], LineBox[{1879, 454}], LineBox[{1880, 455}], 
          LineBox[{1885, 460}], LineBox[{1886, 461}], LineBox[{1887, 462}], 
          LineBox[{1888, 463}], LineBox[{1890, 465}], LineBox[{1891, 466}], 
          LineBox[{1893, 468}], LineBox[{1898, 473}], LineBox[{1899, 474}], 
          LineBox[{1901, 476}], LineBox[{1905, 480}], LineBox[{1906, 481}], 
          LineBox[{1907, 482}], LineBox[{1908, 483}], LineBox[{1909, 484}], 
          LineBox[{1910, 485}], LineBox[{1917, 492}], LineBox[{1918, 493}], 
          LineBox[{1921, 496}], LineBox[{1922, 497}], LineBox[{1923, 498}], 
          LineBox[{1924, 499}], LineBox[{1925, 500}], LineBox[{1933, 508}], 
          LineBox[{1934, 509}], LineBox[{1935, 510}], LineBox[{1936, 511}], 
          LineBox[{1937, 512}], LineBox[{1939, 514}], LineBox[{1941, 516}], 
          LineBox[{1944, 519}], LineBox[{1946, 521}], LineBox[{1947, 522}], 
          LineBox[{1950, 525}], LineBox[{1954, 529}], LineBox[{1955, 530}], 
          LineBox[{1956, 531}], LineBox[{1957, 532}], LineBox[{1958, 533}], 
          LineBox[{1959, 534}], LineBox[{1965, 540}], LineBox[{1966, 541}], 
          LineBox[{1968, 543}], LineBox[{1974, 549}], LineBox[{1975, 550}], 
          LineBox[{1976, 551}], LineBox[{1977, 552}], LineBox[{1978, 553}], 
          LineBox[{1979, 554}], LineBox[{1980, 555}], LineBox[{1982, 557}], 
          LineBox[{1984, 559}], LineBox[{1985, 560}], LineBox[{1993, 568}], 
          LineBox[{1994, 569}], LineBox[{1995, 570}], LineBox[{1996, 571}], 
          LineBox[{1997, 572}], LineBox[{1998, 573}], LineBox[{1999, 574}], 
          LineBox[{2005, 580}], LineBox[{2006, 581}], LineBox[{2007, 582}], 
          LineBox[{2008, 583}], LineBox[{2014, 589}], LineBox[{2015, 590}], 
          LineBox[{2016, 591}], LineBox[{2017, 592}], LineBox[{2021, 596}], 
          LineBox[{2023, 598}], LineBox[{2024, 599}], LineBox[{2025, 600}], 
          LineBox[{2026, 601}], LineBox[{2027, 602}], LineBox[{2034, 609}], 
          LineBox[{2035, 610}], LineBox[{2036, 611}], LineBox[{2037, 612}], 
          LineBox[{2039, 614}], LineBox[{2040, 615}], LineBox[{2041, 616}], 
          LineBox[{2042, 617}], LineBox[{2048, 623}], LineBox[{2050, 625}], 
          LineBox[{2051, 626}], LineBox[{2052, 627}], LineBox[{2053, 628}], 
          LineBox[{2056, 631}], LineBox[{2057, 632}], LineBox[{2058, 633}], 
          LineBox[{2060, 635}], LineBox[{2061, 636}], LineBox[{2069, 644}], 
          LineBox[{2070, 645}], LineBox[{2071, 646}], LineBox[{2072, 647}], 
          LineBox[{2073, 648}], LineBox[{2074, 649}], LineBox[{2075, 650}], 
          LineBox[{2076, 651}], LineBox[{2077, 652}], LineBox[{2086, 661}], 
          LineBox[{2087, 662}], LineBox[{2089, 664}], LineBox[{2090, 665}], 
          LineBox[{2091, 666}], LineBox[{2092, 667}], LineBox[{2093, 668}], 
          LineBox[{2094, 669}], LineBox[{2103, 678}], LineBox[{2105, 680}], 
          LineBox[{2106, 681}], LineBox[{2107, 682}], LineBox[{2108, 683}], 
          LineBox[{2109, 684}], LineBox[{2110, 685}], LineBox[{2111, 686}], 
          LineBox[{2114, 689}], LineBox[{2122, 697}], LineBox[{2123, 698}], 
          LineBox[{2124, 699}], LineBox[{2125, 700}], LineBox[{2126, 701}], 
          LineBox[{2127, 702}], LineBox[{2128, 703}], LineBox[{2129, 704}], 
          LineBox[{2137, 712}], LineBox[{2140, 715}], LineBox[{2141, 716}], 
          LineBox[{2142, 717}], LineBox[{2143, 718}], LineBox[{2144, 719}], 
          LineBox[{2145, 720}], LineBox[{2146, 721}], LineBox[{2153, 728}], 
          LineBox[{2154, 729}], LineBox[{2158, 733}], LineBox[{2159, 734}], 
          LineBox[{2160, 735}], LineBox[{2162, 737}], LineBox[{2163, 738}], 
          LineBox[{2164, 739}], LineBox[{2170, 745}], LineBox[{2171, 746}], 
          LineBox[{2176, 751}], LineBox[{2179, 754}], LineBox[{2180, 755}], 
          LineBox[{2181, 756}], LineBox[{2182, 757}], LineBox[{2183, 758}], 
          LineBox[{2184, 759}], LineBox[{2185, 760}], LineBox[{2187, 762}], 
          LineBox[{2195, 770}], LineBox[{2196, 771}], LineBox[{2199, 774}], 
          LineBox[{2201, 776}], LineBox[{2202, 777}], LineBox[{2203, 778}], 
          LineBox[{2204, 779}], LineBox[{2205, 780}], LineBox[{2206, 781}], 
          LineBox[{2207, 782}], LineBox[{2208, 783}], LineBox[{2217, 792}], 
          LineBox[{2219, 794}], LineBox[{2220, 795}], LineBox[{2221, 796}], 
          LineBox[{2223, 798}], LineBox[{2224, 799}], LineBox[{2225, 800}], 
          LineBox[{2226, 801}], LineBox[{2227, 802}], LineBox[{2230, 805}], 
          LineBox[{2235, 810}], LineBox[{2236, 811}], LineBox[{2239, 814}], 
          LineBox[{2240, 815}], LineBox[{2241, 816}], LineBox[{2243, 818}], 
          LineBox[{2244, 819}], LineBox[{2247, 822}], LineBox[{2251, 826}], 
          LineBox[{2252, 827}], LineBox[{2253, 828}], LineBox[{2257, 832}], 
          LineBox[{2259, 834}], LineBox[{2260, 835}], LineBox[{2261, 836}], 
          LineBox[{2262, 837}], LineBox[{2263, 838}], LineBox[{2264, 839}], 
          LineBox[{2270, 845}], LineBox[{2272, 847}], LineBox[{2273, 848}], 
          LineBox[{2274, 849}], LineBox[{2275, 850}], LineBox[{2276, 851}], 
          LineBox[{2283, 858}], LineBox[{2284, 859}], LineBox[{2285, 860}], 
          LineBox[{2287, 862}], LineBox[{2288, 863}], LineBox[{2289, 864}], 
          LineBox[{2290, 865}], LineBox[{2291, 866}], LineBox[{2299, 874}], 
          LineBox[{2300, 875}], LineBox[{2301, 876}], LineBox[{2304, 879}], 
          LineBox[{2305, 880}], LineBox[{2309, 884}], LineBox[{2310, 885}], 
          LineBox[{2311, 886}], LineBox[{2312, 887}], LineBox[{2320, 895}], 
          LineBox[{2321, 896}], LineBox[{2322, 897}], LineBox[{2323, 898}], 
          LineBox[{2324, 899}], LineBox[{2325, 900}], LineBox[{2326, 901}], 
          LineBox[{2327, 902}], LineBox[{2328, 903}], LineBox[{2335, 910}], 
          LineBox[{2339, 914}], LineBox[{2340, 915}], LineBox[{2341, 916}], 
          LineBox[{2342, 917}], LineBox[{2343, 918}], LineBox[{2344, 919}], 
          LineBox[{2345, 920}], LineBox[{2348, 923}], LineBox[{2354, 929}], 
          LineBox[{2355, 930}], LineBox[{2356, 931}], LineBox[{2357, 932}], 
          LineBox[{2359, 934}], LineBox[{2361, 936}], LineBox[{2362, 937}], 
          LineBox[{2367, 942}], LineBox[{2368, 943}], LineBox[{2369, 944}], 
          LineBox[{2372, 947}], LineBox[{2375, 950}], LineBox[{2376, 951}], 
          LineBox[{2377, 952}], LineBox[{2378, 953}], LineBox[{2379, 954}], 
          LineBox[{2387, 962}], LineBox[{2388, 963}], LineBox[{2389, 964}], 
          LineBox[{2390, 965}], LineBox[{2391, 966}], LineBox[{2392, 967}], 
          LineBox[{2393, 968}], LineBox[{2401, 976}], LineBox[{2402, 977}], 
          LineBox[{2403, 978}], LineBox[{2404, 979}], LineBox[{2405, 980}], 
          LineBox[{2406, 981}], LineBox[{2409, 984}], LineBox[{2413, 988}], 
          LineBox[{2415, 990}], LineBox[{2416, 991}], LineBox[{2417, 992}], 
          LineBox[{2418, 993}], LineBox[{2426, 1001}], LineBox[{2427, 1002}], 
          LineBox[{2428, 1003}], LineBox[{2429, 1004}], LineBox[{2430, 1005}],
           LineBox[{2431, 1006}], LineBox[{2432, 1007}], 
          LineBox[{2433, 1008}], LineBox[{2434, 1009}], LineBox[{2443, 1018}],
           LineBox[{2444, 1019}], LineBox[{2445, 1020}], 
          LineBox[{2446, 1021}], LineBox[{2448, 1023}], LineBox[{2449, 1024}],
           LineBox[{2450, 1025}], LineBox[{2456, 1031}], 
          LineBox[{2457, 1032}], LineBox[{2459, 1034}], LineBox[{2460, 1035}],
           LineBox[{2461, 1036}], LineBox[{2462, 1037}], 
          LineBox[{2467, 1042}], LineBox[{2469, 1044}], LineBox[{2472, 1047}],
           LineBox[{2473, 1048}], LineBox[{2474, 1049}], 
          LineBox[{2475, 1050}], LineBox[{2477, 1052}], LineBox[{2478, 1053}],
           LineBox[{2481, 1056}], LineBox[{2482, 1057}], 
          LineBox[{2486, 1061}], LineBox[{2488, 1063}], LineBox[{2489, 1064}],
           LineBox[{2490, 1065}], LineBox[{2494, 1069}], 
          LineBox[{2498, 1073}], LineBox[{2499, 1074}], LineBox[{2500, 1075}],
           LineBox[{2501, 1076}], LineBox[{2502, 1077}], 
          LineBox[{2503, 1078}], LineBox[{2504, 1079}], LineBox[{2506, 1081}],
           LineBox[{2514, 1089}], LineBox[{2515, 1090}], 
          LineBox[{2516, 1091}], LineBox[{2517, 1092}], LineBox[{2518, 1093}],
           LineBox[{2519, 1094}], LineBox[{2520, 1095}], 
          LineBox[{2524, 1099}], LineBox[{2525, 1100}], LineBox[{2531, 1106}],
           LineBox[{2532, 1107}], LineBox[{2533, 1108}], 
          LineBox[{2534, 1109}], LineBox[{2535, 1110}], LineBox[{2536, 1111}],
           LineBox[{2538, 1113}], LineBox[{2540, 1115}], 
          LineBox[{2547, 1122}], LineBox[{2548, 1123}], LineBox[{2549, 1124}],
           LineBox[{2550, 1125}], LineBox[{2551, 1126}], 
          LineBox[{2552, 1127}], LineBox[{2553, 1128}], LineBox[{2558, 1133}],
           LineBox[{2559, 1134}], LineBox[{2560, 1135}], 
          LineBox[{2568, 1143}], LineBox[{2569, 1144}], LineBox[{2570, 1145}],
           LineBox[{2571, 1146}], LineBox[{2572, 1147}], 
          LineBox[{2573, 1148}], LineBox[{2574, 1149}], LineBox[{2575, 1150}],
           LineBox[{2576, 1151}], LineBox[{2577, 1152}], 
          LineBox[{2587, 1162}], LineBox[{2588, 1163}], LineBox[{2589, 1164}],
           LineBox[{2590, 1165}], LineBox[{2591, 1166}], 
          LineBox[{2592, 1167}], LineBox[{2594, 1169}], LineBox[{2595, 1170}],
           LineBox[{2596, 1171}], LineBox[{2602, 1177}], 
          LineBox[{2603, 1178}], LineBox[{2604, 1179}], LineBox[{2605, 1180}],
           LineBox[{2606, 1181}], LineBox[{2607, 1182}], 
          LineBox[{2615, 1190}], LineBox[{2616, 1191}], LineBox[{2617, 1192}],
           LineBox[{2618, 1193}], LineBox[{2619, 1194}], 
          LineBox[{2620, 1195}], LineBox[{2621, 1196}], LineBox[{2622, 1197}],
           LineBox[{2630, 1205}], LineBox[{2631, 1206}], 
          LineBox[{2632, 1207}], LineBox[{2633, 1208}], LineBox[{2634, 1209}],
           LineBox[{2640, 1215}], LineBox[{2642, 1217}], 
          LineBox[{2643, 1218}], LineBox[{2644, 1219}], LineBox[{2645, 1220}],
           LineBox[{2646, 1221}], LineBox[{2650, 1225}], 
          LineBox[{2651, 1226}], LineBox[{2656, 1231}], LineBox[{2657, 1232}],
           LineBox[{2659, 1234}], LineBox[{2660, 1235}], 
          LineBox[{2661, 1236}], LineBox[{2666, 1241}], LineBox[{2668, 1243}],
           LineBox[{2669, 1244}], LineBox[{2670, 1245}], 
          LineBox[{2671, 1246}], LineBox[{2678, 1253}], LineBox[{2679, 1254}],
           LineBox[{2680, 1255}], LineBox[{2681, 1256}], 
          LineBox[{2682, 1257}], LineBox[{2683, 1258}], LineBox[{2685, 1260}],
           LineBox[{2689, 1264}], LineBox[{2693, 1268}], 
          LineBox[{2697, 1272}], LineBox[{2698, 1273}], LineBox[{2699, 1274}],
           LineBox[{2700, 1275}], LineBox[{2701, 1276}], 
          LineBox[{2702, 1277}], LineBox[{2703, 1278}], LineBox[{2710, 1285}],
           LineBox[{2712, 1287}], LineBox[{2714, 1289}], 
          LineBox[{2715, 1290}], LineBox[{2716, 1291}], LineBox[{2717, 1292}],
           LineBox[{2718, 1293}], LineBox[{2719, 1294}], 
          LineBox[{2726, 1301}], LineBox[{2727, 1302}], LineBox[{2728, 1303}],
           LineBox[{2729, 1304}], LineBox[{2730, 1305}], 
          LineBox[{2733, 1308}], LineBox[{2738, 1313}], LineBox[{2739, 1314}],
           LineBox[{2740, 1315}], LineBox[{2741, 1316}], 
          LineBox[{2742, 1317}], LineBox[{2743, 1318}], LineBox[{2750, 1325}],
           LineBox[{2751, 1326}], LineBox[{2752, 1327}], 
          LineBox[{2753, 1328}], LineBox[{2754, 1329}], LineBox[{2759, 1334}],
           LineBox[{2760, 1335}], LineBox[{2761, 1336}], 
          LineBox[{2762, 1337}], LineBox[{2763, 1338}], LineBox[{2769, 1344}],
           LineBox[{2770, 1345}], LineBox[{2771, 1346}], 
          LineBox[{2772, 1347}], LineBox[{2773, 1348}], LineBox[{2778, 1353}],
           LineBox[{2781, 1356}], LineBox[{2782, 1357}], 
          LineBox[{2783, 1358}], LineBox[{2784, 1359}], LineBox[{2785, 1360}],
           LineBox[{2786, 1361}], LineBox[{2787, 1362}], 
          LineBox[{2792, 1367}], LineBox[{2796, 1371}], LineBox[{2797, 1372}],
           LineBox[{2799, 1374}], LineBox[{2801, 1376}], 
          LineBox[{2802, 1377}], LineBox[{2803, 1378}], LineBox[{2804, 1379}],
           LineBox[{2805, 1380}], LineBox[{2811, 1386}], 
          LineBox[{2813, 1388}], LineBox[{2814, 1389}], LineBox[{2816, 1391}],
           LineBox[{2818, 1393}], LineBox[{2819, 1394}], 
          LineBox[{2820, 1395}], LineBox[{2821, 1396}], LineBox[{2829, 1404}],
           LineBox[{2830, 1405}], LineBox[{2831, 1406}], 
          LineBox[{2832, 1407}], LineBox[{2833, 1408}], LineBox[{2835, 1410}],
           LineBox[{2836, 1411}], LineBox[{2839, 1414}], 
          LineBox[{2843, 1418}], LineBox[{2845, 1420}], LineBox[{2846, 1421}],
           LineBox[{2847, 1422}], LineBox[{2848, 1423}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{1427, 2}], LineBox[{1431, 6}], LineBox[{1434, 9}], 
          LineBox[{1435, 10}], LineBox[{1436, 11}], LineBox[{1437, 12}], 
          LineBox[{1438, 13}], LineBox[{1443, 18}], LineBox[{1445, 20}], 
          LineBox[{1450, 25}], LineBox[{1451, 26}], LineBox[{1452, 27}], 
          LineBox[{1453, 28}], LineBox[{1454, 29}], LineBox[{1455, 30}], 
          LineBox[{1456, 31}], LineBox[{1457, 32}], LineBox[{1458, 33}], 
          LineBox[{1467, 42}], LineBox[{1468, 43}], LineBox[{1469, 44}], 
          LineBox[{1470, 45}], LineBox[{1471, 46}], LineBox[{1472, 47}], 
          LineBox[{1473, 48}], LineBox[{1476, 51}], LineBox[{1477, 52}], 
          LineBox[{1482, 57}], LineBox[{1484, 59}], LineBox[{1485, 60}], 
          LineBox[{1486, 61}], LineBox[{1487, 62}], LineBox[{1488, 63}], 
          LineBox[{1489, 64}], LineBox[{1490, 65}], LineBox[{1493, 68}], 
          LineBox[{1498, 73}], LineBox[{1499, 74}], LineBox[{1500, 75}], 
          LineBox[{1501, 76}], LineBox[{1504, 79}], LineBox[{1505, 80}], 
          LineBox[{1506, 81}], LineBox[{1507, 82}], LineBox[{1508, 83}], 
          LineBox[{1515, 90}], LineBox[{1516, 91}], LineBox[{1517, 92}], 
          LineBox[{1518, 93}], LineBox[{1519, 94}], LineBox[{1520, 95}], 
          LineBox[{1522, 97}], LineBox[{1523, 98}], LineBox[{1533, 108}], 
          LineBox[{1534, 109}], LineBox[{1535, 110}], LineBox[{1536, 111}], 
          LineBox[{1538, 113}], LineBox[{1540, 115}], LineBox[{1541, 116}], 
          LineBox[{1542, 117}], LineBox[{1543, 118}], LineBox[{1544, 119}], 
          LineBox[{1552, 127}], LineBox[{1553, 128}], LineBox[{1558, 133}], 
          LineBox[{1559, 134}], LineBox[{1560, 135}], LineBox[{1561, 136}], 
          LineBox[{1562, 137}], LineBox[{1564, 139}], LineBox[{1565, 140}], 
          LineBox[{1566, 141}], LineBox[{1567, 142}], LineBox[{1568, 143}], 
          LineBox[{1570, 145}], LineBox[{1578, 153}], LineBox[{1581, 156}], 
          LineBox[{1583, 158}], LineBox[{1584, 159}], LineBox[{1585, 160}], 
          LineBox[{1586, 161}], LineBox[{1587, 162}], LineBox[{1588, 163}], 
          LineBox[{1589, 164}], LineBox[{1590, 165}], LineBox[{1591, 166}], 
          LineBox[{1592, 167}], LineBox[{1603, 178}], LineBox[{1604, 179}], 
          LineBox[{1605, 180}], LineBox[{1606, 181}], LineBox[{1607, 182}], 
          LineBox[{1608, 183}], LineBox[{1609, 184}], LineBox[{1611, 186}], 
          LineBox[{1612, 187}], LineBox[{1613, 188}], LineBox[{1616, 191}], 
          LineBox[{1617, 192}], LineBox[{1619, 194}], LineBox[{1628, 203}], 
          LineBox[{1630, 205}], LineBox[{1631, 206}], LineBox[{1632, 207}], 
          LineBox[{1633, 208}], LineBox[{1634, 209}], LineBox[{1635, 210}], 
          LineBox[{1636, 211}], LineBox[{1640, 215}], LineBox[{1641, 216}], 
          LineBox[{1642, 217}], LineBox[{1648, 223}], LineBox[{1651, 226}], 
          LineBox[{1652, 227}], LineBox[{1653, 228}], LineBox[{1654, 229}], 
          LineBox[{1658, 233}], LineBox[{1659, 234}], LineBox[{1660, 235}], 
          LineBox[{1661, 236}], LineBox[{1662, 237}], LineBox[{1670, 245}], 
          LineBox[{1671, 246}], LineBox[{1672, 247}], LineBox[{1673, 248}], 
          LineBox[{1674, 249}], LineBox[{1675, 250}], LineBox[{1676, 251}], 
          LineBox[{1677, 252}], LineBox[{1684, 259}], LineBox[{1686, 261}], 
          LineBox[{1689, 264}], LineBox[{1690, 265}], LineBox[{1691, 266}], 
          LineBox[{1692, 267}], LineBox[{1693, 268}], LineBox[{1694, 269}], 
          LineBox[{1696, 271}], LineBox[{1699, 274}], LineBox[{1701, 276}], 
          LineBox[{1706, 281}], LineBox[{1707, 282}], LineBox[{1708, 283}], 
          LineBox[{1709, 284}], LineBox[{1714, 289}], LineBox[{1715, 290}], 
          LineBox[{1716, 291}], LineBox[{1717, 292}], LineBox[{1718, 293}], 
          LineBox[{1720, 295}], LineBox[{1727, 302}], LineBox[{1728, 303}], 
          LineBox[{1729, 304}], LineBox[{1730, 305}], LineBox[{1731, 306}], 
          LineBox[{1732, 307}], LineBox[{1733, 308}], LineBox[{1734, 309}], 
          LineBox[{1737, 312}], LineBox[{1745, 320}], LineBox[{1746, 321}], 
          LineBox[{1747, 322}], LineBox[{1748, 323}], LineBox[{1749, 324}], 
          LineBox[{1750, 325}], LineBox[{1751, 326}], LineBox[{1757, 332}], 
          LineBox[{1758, 333}], LineBox[{1759, 334}], LineBox[{1760, 335}], 
          LineBox[{1761, 336}], LineBox[{1765, 340}], LineBox[{1769, 344}], 
          LineBox[{1772, 347}], LineBox[{1773, 348}], LineBox[{1774, 349}], 
          LineBox[{1775, 350}], LineBox[{1776, 351}], LineBox[{1777, 352}], 
          LineBox[{1778, 353}], LineBox[{1782, 357}], LineBox[{1787, 362}], 
          LineBox[{1788, 363}], LineBox[{1789, 364}], LineBox[{1793, 368}], 
          LineBox[{1794, 369}], LineBox[{1795, 370}], LineBox[{1796, 371}], 
          LineBox[{1797, 372}], LineBox[{1798, 373}], LineBox[{1799, 374}], 
          LineBox[{1803, 378}], LineBox[{1809, 384}], LineBox[{1810, 385}], 
          LineBox[{1811, 386}], LineBox[{1812, 387}], LineBox[{1813, 388}], 
          LineBox[{1814, 389}], LineBox[{1815, 390}], LineBox[{1816, 391}], 
          LineBox[{1817, 392}], LineBox[{1821, 396}], LineBox[{1826, 401}], 
          LineBox[{1829, 404}], LineBox[{1831, 406}], LineBox[{1832, 407}], 
          LineBox[{1833, 408}], LineBox[{1834, 409}], LineBox[{1835, 410}], 
          LineBox[{1836, 411}], LineBox[{1837, 412}], LineBox[{1842, 417}], 
          LineBox[{1843, 418}], LineBox[{1844, 419}], LineBox[{1849, 424}], 
          LineBox[{1852, 427}], LineBox[{1854, 429}], LineBox[{1855, 430}], 
          LineBox[{1856, 431}], LineBox[{1858, 433}], LineBox[{1859, 434}], 
          LineBox[{1860, 435}], LineBox[{1868, 443}], LineBox[{1869, 444}], 
          LineBox[{1870, 445}], LineBox[{1871, 446}], LineBox[{1872, 447}], 
          LineBox[{1873, 448}], LineBox[{1877, 452}], LineBox[{1881, 456}], 
          LineBox[{1882, 457}], LineBox[{1883, 458}], LineBox[{1884, 459}], 
          LineBox[{1889, 464}], LineBox[{1892, 467}], LineBox[{1894, 469}], 
          LineBox[{1895, 470}], LineBox[{1896, 471}], LineBox[{1897, 472}], 
          LineBox[{1900, 475}], LineBox[{1902, 477}], LineBox[{1903, 478}], 
          LineBox[{1904, 479}], LineBox[{1911, 486}], LineBox[{1912, 487}], 
          LineBox[{1913, 488}], LineBox[{1914, 489}], LineBox[{1915, 490}], 
          LineBox[{1916, 491}], LineBox[{1919, 494}], LineBox[{1920, 495}], 
          LineBox[{1926, 501}], LineBox[{1927, 502}], LineBox[{1928, 503}], 
          LineBox[{1929, 504}], LineBox[{1930, 505}], LineBox[{1931, 506}], 
          LineBox[{1932, 507}], LineBox[{1938, 513}], LineBox[{1940, 515}], 
          LineBox[{1942, 517}], LineBox[{1943, 518}], LineBox[{1945, 520}], 
          LineBox[{1948, 523}], LineBox[{1949, 524}], LineBox[{1951, 526}], 
          LineBox[{1952, 527}], LineBox[{1953, 528}], LineBox[{1960, 535}], 
          LineBox[{1961, 536}], LineBox[{1962, 537}], LineBox[{1963, 538}], 
          LineBox[{1964, 539}], LineBox[{1967, 542}], LineBox[{1969, 544}], 
          LineBox[{1970, 545}], LineBox[{1971, 546}], LineBox[{1972, 547}], 
          LineBox[{1973, 548}], LineBox[{1981, 556}], LineBox[{1983, 558}], 
          LineBox[{1986, 561}], LineBox[{1987, 562}], LineBox[{1988, 563}], 
          LineBox[{1989, 564}], LineBox[{1990, 565}], LineBox[{1991, 566}], 
          LineBox[{1992, 567}], LineBox[{2000, 575}], LineBox[{2001, 576}], 
          LineBox[{2002, 577}], LineBox[{2003, 578}], LineBox[{2004, 579}], 
          LineBox[{2009, 584}], LineBox[{2010, 585}], LineBox[{2011, 586}], 
          LineBox[{2012, 587}], LineBox[{2013, 588}], LineBox[{2018, 593}], 
          LineBox[{2019, 594}], LineBox[{2020, 595}], LineBox[{2022, 597}], 
          LineBox[{2028, 603}], LineBox[{2029, 604}], LineBox[{2030, 605}], 
          LineBox[{2031, 606}], LineBox[{2032, 607}], LineBox[{2033, 608}], 
          LineBox[{2038, 613}], LineBox[{2043, 618}], LineBox[{2044, 619}], 
          LineBox[{2045, 620}], LineBox[{2046, 621}], LineBox[{2047, 622}], 
          LineBox[{2049, 624}], LineBox[{2054, 629}], LineBox[{2055, 630}], 
          LineBox[{2059, 634}], LineBox[{2062, 637}], LineBox[{2063, 638}], 
          LineBox[{2064, 639}], LineBox[{2065, 640}], LineBox[{2066, 641}], 
          LineBox[{2067, 642}], LineBox[{2068, 643}], LineBox[{2078, 653}], 
          LineBox[{2079, 654}], LineBox[{2080, 655}], LineBox[{2081, 656}], 
          LineBox[{2082, 657}], LineBox[{2083, 658}], LineBox[{2084, 659}], 
          LineBox[{2085, 660}], LineBox[{2088, 663}], LineBox[{2095, 670}], 
          LineBox[{2096, 671}], LineBox[{2097, 672}], LineBox[{2098, 673}], 
          LineBox[{2099, 674}], LineBox[{2100, 675}], LineBox[{2101, 676}], 
          LineBox[{2102, 677}], LineBox[{2104, 679}], LineBox[{2112, 687}], 
          LineBox[{2113, 688}], LineBox[{2115, 690}], LineBox[{2116, 691}], 
          LineBox[{2117, 692}], LineBox[{2118, 693}], LineBox[{2119, 694}], 
          LineBox[{2120, 695}], LineBox[{2121, 696}], LineBox[{2130, 705}], 
          LineBox[{2131, 706}], LineBox[{2132, 707}], LineBox[{2133, 708}], 
          LineBox[{2134, 709}], LineBox[{2135, 710}], LineBox[{2136, 711}], 
          LineBox[{2138, 713}], LineBox[{2139, 714}], LineBox[{2147, 722}], 
          LineBox[{2148, 723}], LineBox[{2149, 724}], LineBox[{2150, 725}], 
          LineBox[{2151, 726}], LineBox[{2152, 727}], LineBox[{2155, 730}], 
          LineBox[{2156, 731}], LineBox[{2157, 732}], LineBox[{2161, 736}], 
          LineBox[{2165, 740}], LineBox[{2166, 741}], LineBox[{2167, 742}], 
          LineBox[{2168, 743}], LineBox[{2169, 744}], LineBox[{2172, 747}], 
          LineBox[{2173, 748}], LineBox[{2174, 749}], LineBox[{2175, 750}], 
          LineBox[{2177, 752}], LineBox[{2178, 753}], LineBox[{2186, 761}], 
          LineBox[{2188, 763}], LineBox[{2189, 764}], LineBox[{2190, 765}], 
          LineBox[{2191, 766}], LineBox[{2192, 767}], LineBox[{2193, 768}], 
          LineBox[{2194, 769}], LineBox[{2197, 772}], LineBox[{2198, 773}], 
          LineBox[{2200, 775}], LineBox[{2209, 784}], LineBox[{2210, 785}], 
          LineBox[{2211, 786}], LineBox[{2212, 787}], LineBox[{2213, 788}], 
          LineBox[{2214, 789}], LineBox[{2215, 790}], LineBox[{2216, 791}], 
          LineBox[{2218, 793}], LineBox[{2222, 797}], LineBox[{2228, 803}], 
          LineBox[{2229, 804}], LineBox[{2231, 806}], LineBox[{2232, 807}], 
          LineBox[{2233, 808}], LineBox[{2234, 809}], LineBox[{2237, 812}], 
          LineBox[{2238, 813}], LineBox[{2242, 817}], LineBox[{2245, 820}], 
          LineBox[{2246, 821}], LineBox[{2248, 823}], LineBox[{2249, 824}], 
          LineBox[{2250, 825}], LineBox[{2254, 829}], LineBox[{2255, 830}], 
          LineBox[{2256, 831}], LineBox[{2258, 833}], LineBox[{2265, 840}], 
          LineBox[{2266, 841}], LineBox[{2267, 842}], LineBox[{2268, 843}], 
          LineBox[{2269, 844}], LineBox[{2271, 846}], LineBox[{2277, 852}], 
          LineBox[{2278, 853}], LineBox[{2279, 854}], LineBox[{2280, 855}], 
          LineBox[{2281, 856}], LineBox[{2282, 857}], LineBox[{2286, 861}], 
          LineBox[{2292, 867}], LineBox[{2293, 868}], LineBox[{2294, 869}], 
          LineBox[{2295, 870}], LineBox[{2296, 871}], LineBox[{2297, 872}], 
          LineBox[{2298, 873}], LineBox[{2302, 877}], LineBox[{2303, 878}], 
          LineBox[{2306, 881}], LineBox[{2307, 882}], LineBox[{2308, 883}], 
          LineBox[{2313, 888}], LineBox[{2314, 889}], LineBox[{2315, 890}], 
          LineBox[{2316, 891}], LineBox[{2317, 892}], LineBox[{2318, 893}], 
          LineBox[{2319, 894}], LineBox[{2329, 904}], LineBox[{2330, 905}], 
          LineBox[{2331, 906}], LineBox[{2332, 907}], LineBox[{2333, 908}], 
          LineBox[{2334, 909}], LineBox[{2336, 911}], LineBox[{2337, 912}], 
          LineBox[{2338, 913}], LineBox[{2346, 921}], LineBox[{2347, 922}], 
          LineBox[{2349, 924}], LineBox[{2350, 925}], LineBox[{2351, 926}], 
          LineBox[{2352, 927}], LineBox[{2353, 928}], LineBox[{2358, 933}], 
          LineBox[{2360, 935}], LineBox[{2363, 938}], LineBox[{2364, 939}], 
          LineBox[{2365, 940}], LineBox[{2366, 941}], LineBox[{2370, 945}], 
          LineBox[{2371, 946}], LineBox[{2373, 948}], LineBox[{2374, 949}], 
          LineBox[{2380, 955}], LineBox[{2381, 956}], LineBox[{2382, 957}], 
          LineBox[{2383, 958}], LineBox[{2384, 959}], LineBox[{2385, 960}], 
          LineBox[{2386, 961}], LineBox[{2394, 969}], LineBox[{2395, 970}], 
          LineBox[{2396, 971}], LineBox[{2397, 972}], LineBox[{2398, 973}], 
          LineBox[{2399, 974}], LineBox[{2400, 975}], LineBox[{2407, 982}], 
          LineBox[{2408, 983}], LineBox[{2410, 985}], LineBox[{2411, 986}], 
          LineBox[{2412, 987}], LineBox[{2414, 989}], LineBox[{2419, 994}], 
          LineBox[{2420, 995}], LineBox[{2421, 996}], LineBox[{2422, 997}], 
          LineBox[{2423, 998}], LineBox[{2424, 999}], LineBox[{2425, 1000}], 
          LineBox[{2435, 1010}], LineBox[{2436, 1011}], LineBox[{2437, 1012}],
           LineBox[{2438, 1013}], LineBox[{2439, 1014}], 
          LineBox[{2440, 1015}], LineBox[{2441, 1016}], LineBox[{2442, 1017}],
           LineBox[{2447, 1022}], LineBox[{2451, 1026}], 
          LineBox[{2452, 1027}], LineBox[{2453, 1028}], LineBox[{2454, 1029}],
           LineBox[{2455, 1030}], LineBox[{2458, 1033}], 
          LineBox[{2463, 1038}], LineBox[{2464, 1039}], LineBox[{2465, 1040}],
           LineBox[{2466, 1041}], LineBox[{2468, 1043}], 
          LineBox[{2470, 1045}], LineBox[{2471, 1046}], LineBox[{2476, 1051}],
           LineBox[{2479, 1054}], LineBox[{2480, 1055}], 
          LineBox[{2483, 1058}], LineBox[{2484, 1059}], LineBox[{2485, 1060}],
           LineBox[{2487, 1062}], LineBox[{2491, 1066}], 
          LineBox[{2492, 1067}], LineBox[{2493, 1068}], LineBox[{2495, 1070}],
           LineBox[{2496, 1071}], LineBox[{2497, 1072}], 
          LineBox[{2505, 1080}], LineBox[{2507, 1082}], LineBox[{2508, 1083}],
           LineBox[{2509, 1084}], LineBox[{2510, 1085}], 
          LineBox[{2511, 1086}], LineBox[{2512, 1087}], LineBox[{2513, 1088}],
           LineBox[{2521, 1096}], LineBox[{2522, 1097}], 
          LineBox[{2523, 1098}], LineBox[{2526, 1101}], LineBox[{2527, 1102}],
           LineBox[{2528, 1103}], LineBox[{2529, 1104}], 
          LineBox[{2530, 1105}], LineBox[{2537, 1112}], LineBox[{2539, 1114}],
           LineBox[{2541, 1116}], LineBox[{2542, 1117}], 
          LineBox[{2543, 1118}], LineBox[{2544, 1119}], LineBox[{2545, 1120}],
           LineBox[{2546, 1121}], LineBox[{2554, 1129}], 
          LineBox[{2555, 1130}], LineBox[{2556, 1131}], LineBox[{2557, 1132}],
           LineBox[{2561, 1136}], LineBox[{2562, 1137}], 
          LineBox[{2563, 1138}], LineBox[{2564, 1139}], LineBox[{2565, 1140}],
           LineBox[{2566, 1141}], LineBox[{2567, 1142}], 
          LineBox[{2578, 1153}], LineBox[{2579, 1154}], LineBox[{2580, 1155}],
           LineBox[{2581, 1156}], LineBox[{2582, 1157}], 
          LineBox[{2583, 1158}], LineBox[{2584, 1159}], LineBox[{2585, 1160}],
           LineBox[{2586, 1161}], LineBox[{2593, 1168}], 
          LineBox[{2597, 1172}], LineBox[{2598, 1173}], LineBox[{2599, 1174}],
           LineBox[{2600, 1175}], LineBox[{2601, 1176}], 
          LineBox[{2608, 1183}], LineBox[{2609, 1184}], LineBox[{2610, 1185}],
           LineBox[{2611, 1186}], LineBox[{2612, 1187}], 
          LineBox[{2613, 1188}], LineBox[{2614, 1189}], LineBox[{2623, 1198}],
           LineBox[{2624, 1199}], LineBox[{2625, 1200}], 
          LineBox[{2626, 1201}], LineBox[{2627, 1202}], LineBox[{2628, 1203}],
           LineBox[{2629, 1204}], LineBox[{2635, 1210}], 
          LineBox[{2636, 1211}], LineBox[{2637, 1212}], LineBox[{2638, 1213}],
           LineBox[{2639, 1214}], LineBox[{2641, 1216}], 
          LineBox[{2647, 1222}], LineBox[{2648, 1223}], LineBox[{2649, 1224}],
           LineBox[{2652, 1227}], LineBox[{2653, 1228}], 
          LineBox[{2654, 1229}], LineBox[{2655, 1230}], LineBox[{2658, 1233}],
           LineBox[{2662, 1237}], LineBox[{2663, 1238}], 
          LineBox[{2664, 1239}], LineBox[{2665, 1240}], LineBox[{2667, 1242}],
           LineBox[{2672, 1247}], LineBox[{2673, 1248}], 
          LineBox[{2674, 1249}], LineBox[{2675, 1250}], LineBox[{2676, 1251}],
           LineBox[{2677, 1252}], LineBox[{2684, 1259}], 
          LineBox[{2686, 1261}], LineBox[{2687, 1262}], LineBox[{2688, 1263}],
           LineBox[{2690, 1265}], LineBox[{2691, 1266}], 
          LineBox[{2692, 1267}], LineBox[{2694, 1269}], LineBox[{2695, 1270}],
           LineBox[{2696, 1271}], LineBox[{2704, 1279}], 
          LineBox[{2705, 1280}], LineBox[{2706, 1281}], LineBox[{2707, 1282}],
           LineBox[{2708, 1283}], LineBox[{2709, 1284}], 
          LineBox[{2711, 1286}], LineBox[{2713, 1288}], LineBox[{2720, 1295}],
           LineBox[{2721, 1296}], LineBox[{2722, 1297}], 
          LineBox[{2723, 1298}], LineBox[{2724, 1299}], LineBox[{2725, 1300}],
           LineBox[{2731, 1306}], LineBox[{2732, 1307}], 
          LineBox[{2734, 1309}], LineBox[{2735, 1310}], LineBox[{2736, 1311}],
           LineBox[{2737, 1312}], LineBox[{2744, 1319}], 
          LineBox[{2745, 1320}], LineBox[{2746, 1321}], LineBox[{2747, 1322}],
           LineBox[{2748, 1323}], LineBox[{2749, 1324}], 
          LineBox[{2755, 1330}], LineBox[{2756, 1331}], LineBox[{2757, 1332}],
           LineBox[{2758, 1333}], LineBox[{2764, 1339}], 
          LineBox[{2765, 1340}], LineBox[{2766, 1341}], LineBox[{2767, 1342}],
           LineBox[{2768, 1343}], LineBox[{2774, 1349}], 
          LineBox[{2775, 1350}], LineBox[{2776, 1351}], LineBox[{2777, 1352}],
           LineBox[{2779, 1354}], LineBox[{2780, 1355}], 
          LineBox[{2788, 1363}], LineBox[{2789, 1364}], LineBox[{2790, 1365}],
           LineBox[{2791, 1366}], LineBox[{2793, 1368}], 
          LineBox[{2794, 1369}], LineBox[{2795, 1370}], LineBox[{2798, 1373}],
           LineBox[{2800, 1375}], LineBox[{2806, 1381}], 
          LineBox[{2807, 1382}], LineBox[{2808, 1383}], LineBox[{2809, 1384}],
           LineBox[{2810, 1385}], LineBox[{2812, 1387}], 
          LineBox[{2815, 1390}], LineBox[{2817, 1392}], LineBox[{2822, 1397}],
           LineBox[{2823, 1398}], LineBox[{2824, 1399}], 
          LineBox[{2825, 1400}], LineBox[{2826, 1401}], LineBox[{2827, 1402}],
           LineBox[{2828, 1403}], LineBox[{2834, 1409}], 
          LineBox[{2837, 1412}], LineBox[{2838, 1413}], LineBox[{2840, 1415}],
           LineBox[{2841, 1416}], LineBox[{2842, 1417}], 
          LineBox[{2844, 1419}], LineBox[{2849, 1424}], 
          LineBox[{2850, 1425}]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJwN00OCIAgCALDaadu2bdu2bdu2bdu2bdu2bXtzyBOSoGG7im3/FxAQMCFI
QECiUAEBiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKR
nwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGf
BjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/60Z8B
DGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUs
ZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzk
EIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQR
j3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REDog4H/8
RyACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhI
IhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEgh
ClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa
04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYz
hKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOE
pSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4Sj
HOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc8
4zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh7/8IyCM//xHIAIThKAE
IzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQj
OSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4
JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozkt
aEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMY
yShGM4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJ
KlazhrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkp
TnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv/wjIKz//EcgAhOEoAQjOCEISShC
E4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKT
hrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOG
spSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2
tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGM
YzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxj
PRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8
F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f
+MgnPvOFr3zjOz/4yS9+84e//CMgnP/8RyACE4SgBCM4IQhJKEIThrCEIzwR
iEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnI
SCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4aylKM8FahI
JSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6Egn
OtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQm
M4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjaz
ha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOF
q1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84Wv
fOM7P/jJL37zh7/8IyC8//xHIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4Wo
RCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxk
Izs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSj
OjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2Mgm/g93mAdR
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.004583333333333334], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.004583333333333334], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.5938908000000005`*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameStyle->Automatic,
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{{0}, {0}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->Medium,
     LabelStyle->{FontFamily -> "Times"},
     Method->{
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotRange->{{3.5938908000000005`*^9, 3.776112*^9}, {-1.7429993968237696`,
       2.3112998697477423`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.779280332828253*^9},ExpressionUUID->"951147c8-101e-4396-9b8e-\
5f3a16a9e9e1"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3.6376128`*^9", ",", "28.510000228881836`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.637872`*^9", ",", "27.6299991607666`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6379584`*^9", ",", "27.729999542236328`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6494496`*^9", ",", "23.270000457763672`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6513504`*^9", ",", "25.93000030517578`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6531648`*^9", ",", "27.770000457763672`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6532512`*^9", ",", "28.030000686645508`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6641376`*^9", ",", "27.450000762939453`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6757152`*^9", ",", "29.81999969482422`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6759744`*^9", ",", "29.31999969482422`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.6760608`*^9", ",", "29.940000534057617`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.7174464`*^9", ",", "23.829999923706055`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.7190016`*^9", ",", "20.209999084472656`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.719088`*^9", ",", "20.1200008392334`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.7191744`*^9", ",", "19.989999771118164`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.7192608`*^9", ",", "20.489999771118164`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.7470816`*^9", ",", "11.289999961853027`"}], "}"}]}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.779280334385838*^9},ExpressionUUID->"d48d457d-d9af-4977-8143-\
d9820588e02d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit test running", "Section",
 CellChangeTimes->{{3.779282484043622*^9, 
  3.779282493627857*^9}},ExpressionUUID->"7d289d3a-0f87-4063-babb-\
95c1d6ffb8c3"],

Cell[CellGroupData[{

Cell["ClCon", "Subsection",
 CellChangeTimes->{{3.7792825055764427`*^9, 
  3.779282506633222*^9}},ExpressionUUID->"07f6218a-5950-4c08-ac00-\
b656a4f8ec96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trObj", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Volumes/Macintosh \
HD/Users/antonov/MathematicaForPrediction/UnitTests/\
MonadicContextualClassification-Unit-Tests.wlt\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.779282219925831*^9, 3.7792822534153976`*^9}, {
  3.779282388405382*^9, 3.779282393242848*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"c9245ea9-1b89-48ef-bd9d-432b8c13d20a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: \
MonadicContextualClassification-Unit-Tests.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"93", "\"%\""}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["28", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: \
MonadicContextualClassification-Unit-Tests.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"93", "\"%\""}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["28", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[
   Association[
   "Title" -> "Test Report: MonadicContextualClassification-Unit-Tests.wlt", 
    "TimeElapsed" -> Quantity[13.700000000000001`, "Seconds"], 
    "TestsSucceededCount" -> 26, "TestsFailedCount" -> 2, 
    "TestsFailedWrongResultsCount" -> 1, "TestsFailedWithMessagesCount" -> 1, 
    "TestsFailedWithErrorsCount" -> 0, "Aborted" -> False, "TestResults" -> 
    Association[1 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 1, "TestID" -> "LoadPackage", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Import["https://raw.githubusercontent.com/antononcube/\
MathematicaForPrediction/master/MonadicProgramming/\
MonadicContextualClassification.m"]; Length[
              SubValues[MonadicContextualClassification`ClConSplitData]] > 0],
          "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.183481`5.414106096270893, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.3787320000000136, "Seconds"], "MemoryUsed" -> 
         Quantity[-4056, "Bytes"]]], 2 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 2, "TestID" -> "EvenOddDataset", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          SeedRandom[2343]; $CellContext`data = 
            RandomInteger[{0, 1000}, {400}]; $CellContext`data = Dataset[
              Transpose[{$CellContext`data, 
                Mod[$CellContext`data, 3], 
                Map[
                 Composition[Last, IntegerDigits], $CellContext`data], 
                Map[OddQ, $CellContext`data]}]]; $CellContext`data = Dataset[
              $CellContext`data[
              All, AssociationThread[{
                "number", "feature1", "feature2", "label"}, #]& ]]; 
           Dimensions[$CellContext`data]], "ExpectedOutput" -> 
         HoldForm[{400, 4}], "ActualOutput" -> HoldForm[{400, 4}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.007534`4.0275406136992435, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.022705000000030395`, "Seconds"], "MemoryUsed" -> 
         Quantity[1880, "Bytes"]]], 3 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
         "EvenOddDataMLRules", "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`dataMLRules = Map[Most[#] -> Last[#]& , 
              Normal[
               $CellContext`data[All, Values]]]; 
           MatchQ[$CellContext`dataMLRules, {
              Repeated[{
                 BlankSequence[]} -> Alternatives[True, False]]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.001844`3.4162759145496047, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.005547999999976128, "Seconds"], "MemoryUsed" -> 
         Quantity[-28488, "Bytes"]]], 4 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
         "DataToContext-no-[]", "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.4], 
              MonadicContextualClassification`ClConAddToContext, 
              MonadicContextualClassification`ClConTakeContext]; 
           Keys[$CellContext`res]], "ExpectedOutput" -> 
         HoldForm[{"trainingData", "testData"}], "ActualOutput" -> 
         HoldForm[{"trainingData", "testData"}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.003301`3.6691605221623056, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.010001999999985856`, "Seconds"], "MemoryUsed" -> 
         Quantity[-12408, "Bytes"]]], 5 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
         "DataToContext-with-[]", "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.4], 
              MonadicContextualClassification`ClConAddToContext[], 
              MonadicContextualClassification`ClConTakeContext[]]; 
           Keys[$CellContext`res]], "ExpectedOutput" -> 
         HoldForm[{"trainingData", "testData"}], "ActualOutput" -> 
         HoldForm[{"trainingData", "testData"}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.003063`3.6366619946385668, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.00932099999994307, "Seconds"], "MemoryUsed" -> 
         Quantity[368, "Bytes"]]], 6 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
         "ClassifierMaking-with-Dataset-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[SeedRandom[232]; $CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              MonadicContextualClassification`ClConAddToContext, 
              MonadicContextualClassification`ClConMakeClassifier[
              "NearestNeighbors"], 
              
              MonadicContextualClassification`ClConClassifierMeasurements[{
               "Accuracy", "Precision", "Recall"}], 
              MonadicContextualClassification`ClConTakeValue]; \
$CellContext`res["Accuracy"] > 0.65], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.378148`5.7281768056151305, "Seconds"], "CPUTimeUsed" -> 
         Quantity[1.2645049999999856`, "Seconds"], "MemoryUsed" -> 
         Quantity[-48056, "Bytes"]]], 7 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
         "ClassifierMaking-with-MLRules-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[SeedRandom[232]; $CellContext`res = DoubleLongRightArrow[
              
              MonadicContextualClassification`ClConUnit[$CellContext`\
dataMLRules], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              MonadicContextualClassification`ClConMakeClassifier[
              "NearestNeighbors"], 
              
              MonadicContextualClassification`ClConClassifierMeasurements[{
               "Accuracy", "Precision", "Recall"}], 
              MonadicContextualClassification`ClConTakeValue]; \
$CellContext`res["Accuracy"] > 0.65], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.372751`5.721933815064737, "Seconds"], "CPUTimeUsed" -> 
         Quantity[1.2752700000000345`, "Seconds"], "MemoryUsed" -> 
         Quantity[172040, "Bytes"]]], 8 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
         "AccuracyByVariableShuffling-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              MonadicContextualClassification`ClConMakeClassifier[
              "RandomForest"], 
              MonadicContextualClassification`\
ClConAccuracyByVariableShuffling, 
              MonadicContextualClassification`ClConTakeValue]; And[
             AssociationQ[$CellContext`res], Sort[
               Keys[$CellContext`res]] == Sort[
               Prepend[
                DeleteCases[
                 Normal[
                  Keys[
                   $CellContext`data[1]]], "label"], None]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.720283`6.008018162583253, "Seconds"], "CPUTimeUsed" -> 
         Quantity[2.636584999999968, "Seconds"], "MemoryUsed" -> 
         Quantity[473152, "Bytes"]]], 9 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 9, "TestID" -> "ROCData-1", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.4], 
              MonadicContextualClassification`ClConMakeClassifier[
              "RandomForest"], MonadicContextualClassification`ClConROCData, 
              MonadicContextualClassification`ClConTakeValue]; 
           MatchQ[$CellContext`res, 
             Association[False -> {
                Repeated[
                 Blank[Association]]}, True -> {
                Repeated[
                 Blank[Association]]}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.398217`5.750634794077374, "Seconds"], "CPUTimeUsed" -> 
         Quantity[1.3649340000000052`, "Seconds"], "MemoryUsed" -> 
         Quantity[280376, "Bytes"]]], 10 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
         "ClassifierEnsemble-different-methods-1", "Outcome" -> "Success", 
         "Input" -> HoldForm[
          SeedRandom[456]; $CellContext`resEnsembleDiffMethods = 
            DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              
              MonadicContextualClassification`ClConMakeClassifier[{
               "NearestNeighbors", "LogisticRegression", 
                "SupportVectorMachine"}], 
              MonadicContextualClassification`ClConClassifierMeasurements[{
               "Accuracy", "Precision", "Recall"}]]; 
           DoubleLongRightArrow[$CellContext`resEnsembleDiffMethods, 
              MonadicContextualClassification`ClConTakeValue]["Accuracy"] > 
            0.75], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[2.995238`6.626946334734297, "Seconds"], "CPUTimeUsed" -> 
         Quantity[7.488198000000011, "Seconds"], "MemoryUsed" -> 
         Quantity[794576, "Bytes"]]], 11 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
         "ClassifierEnsemble-different-methods-2-cont", "Outcome" -> 
         "Success", "Input" -> 
         HoldForm[$CellContext`res = 
            DoubleLongRightArrow[$CellContext`resEnsembleDiffMethods, 
              MonadicContextualClassification`\
ClConAccuracyByVariableShuffling, 
              MonadicContextualClassification`ClConTakeValue]; And[
             AssociationQ[$CellContext`res], Sort[
               Keys[$CellContext`res]] == Sort[
               Prepend[
                DeleteCases[
                 Normal[
                  Keys[
                   $CellContext`data[1]]], "label"], None]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.096591`5.135451660143674, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.3886919999999918, "Seconds"], "MemoryUsed" -> 
         Quantity[-53320, "Bytes"]]], 12 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
         "ClassifierEnsemble-different-methods-3-cont", "Outcome" -> 
         "Success", "Input" -> 
         HoldForm[$CellContext`res = 
            DoubleLongRightArrow[$CellContext`resEnsembleDiffMethods, 
              MonadicContextualClassification`ClConROCData, 
              MonadicContextualClassification`ClConTakeValue]; 
           MatchQ[$CellContext`res, 
             Association[False -> {
                Repeated[
                 Blank[Association]]}, True -> {
                Repeated[
                 Blank[Association]]}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.04106`4.763933942866567, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.16478400000005422`, "Seconds"], "MemoryUsed" -> 
         Quantity[53408, "Bytes"]]], 13 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
         "ClassifierEnsemble-one-method-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[
          SeedRandom[363]; $CellContext`resEnsembleOfOneMethod = 
            DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              
              MonadicContextualClassification`ClConMakeClassifier[{
               "NearestNeighbors", 0.9, 6}], 
              
              MonadicContextualClassification`ClConClassifierMeasurements[{
               "Accuracy", "Precision", "Recall"}]]; 
           DoubleLongRightArrow[$CellContext`resEnsembleOfOneMethod, 
              MonadicContextualClassification`ClConTakeValue]["Accuracy"] > 
            0.7], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[1.811065`6.408449035465069, "Seconds"], "CPUTimeUsed" -> 
         Quantity[5.947779000000082, "Seconds"], "MemoryUsed" -> 
         Quantity[384264, "Bytes"]]], 14 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
         "ClassifierEnsemble-one-method-2", "Outcome" -> "Success", "Input" -> 
         HoldForm[
          SeedRandom[363]; $CellContext`resEnsembleOfOneMethod = 
            DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              MonadicContextualClassification`ClConMakeClassifier[
               Association[
               "method" -> "NearestNeighbors", "sampleFraction" -> 0.95, 
                "numberOfClassifiers" -> 12, "samplingFunction" -> 
                RandomChoice]], 
              
              MonadicContextualClassification`ClConClassifierMeasurements[{
               "Accuracy", "Precision", "Recall"}]]; 
           DoubleLongRightArrow[$CellContext`resEnsembleOfOneMethod, 
              MonadicContextualClassification`ClConTakeValue]["Accuracy"] > 
            0.75], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[3.633928`6.7108913160950205, "Seconds"], "CPUTimeUsed" -> 
         Quantity[11.792355999999984`, "Seconds"], "MemoryUsed" -> 
         Quantity[2157256, "Bytes"]]], 15 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
         "ClassifierEnsemble-one-method-3-cont", "Outcome" -> "Success", 
         "Input" -> HoldForm[$CellContext`res = 
            DoubleLongRightArrow[$CellContext`resEnsembleOfOneMethod, 
              MonadicContextualClassification`\
ClConAccuracyByVariableShuffling, 
              MonadicContextualClassification`ClConTakeValue]; And[
             AssociationQ[$CellContext`res], Sort[
               Keys[$CellContext`res]] == Sort[
               Prepend[
                DeleteCases[
                 Normal[
                  Keys[
                   $CellContext`data[1]]], "label"], None]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.361428`5.7085367923614205, "Seconds"], "CPUTimeUsed" -> 
         Quantity[1.4545389999999543`, "Seconds"], "MemoryUsed" -> 
         Quantity[-54184, "Bytes"]]], 16 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
         "ClassifierEnsemble-one-method-4-cont", "Outcome" -> "Success", 
         "Input" -> HoldForm[$CellContext`res = 
            DoubleLongRightArrow[$CellContext`resEnsembleOfOneMethod, 
              MonadicContextualClassification`ClConROCData, 
              MonadicContextualClassification`ClConTakeValue]; 
           MatchQ[$CellContext`res, 
             Association[False -> {
                Repeated[
                 Blank[Association]]}, True -> {
                Repeated[
                 Blank[Association]]}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.106619`5.1783496027090035, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.4285419999999931, "Seconds"], "MemoryUsed" -> 
         Quantity[52848, "Bytes"]]], 17 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
         "AssignVariableNames-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`n, $CellContext`m} = {10, 12}; 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association[
              "trainingData" -> 
               Thread[RandomReal[1, {$CellContext`n, $CellContext`m}] -> 
                 RandomChoice[{"a", "b"}, $CellContext`n]], 
               "testData" -> {}]], 
             MonadicContextualClassification`ClConAddToContext[], 
             MonadicContextualClassification`ClConAssignVariableNames[], 
             MonadicContextualClassification`ClConTakeVariableNames]], 
         "ExpectedOutput" -> 
         HoldForm[{
           "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
            "13"}], "ActualOutput" -> 
         HoldForm[{
           "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
            "13"}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.000326`2.6637325978999327, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.001308999999992011, "Seconds"], "MemoryUsed" -> 
         Quantity[1664, "Bytes"]]], 18 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
         "AssignVariableNames-2", "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`n, $CellContext`m} = {10, 12}; 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association[
              "trainingData" -> 
               Thread[RandomReal[1, {$CellContext`n, $CellContext`m}] -> 
                 RandomChoice[{"a", "b"}, $CellContext`n]], 
               "testData" -> {}]], 
             MonadicContextualClassification`ClConAddToContext[], 
             
             MonadicContextualClassification`ClConAssignVariableNames[{
              "k", "j", "l"}], 
             MonadicContextualClassification`ClConTakeVariableNames]], 
         "ExpectedOutput" -> 
         HoldForm[{
           "k", "j", "l", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
            "13"}], "ActualOutput" -> 
         HoldForm[{
           "k", "j", "l", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
            "13"}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.00027`2.5818787619909815, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0010709999999676256`, "Seconds"], "MemoryUsed" -> 
         Quantity[648, "Bytes"]]], 19 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
         "AssignVariableNames-3", "Outcome" -> "Failure", "Input" -> 
         HoldForm[{$CellContext`n, $CellContext`m} = {10, 12}; 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association["trainingData" -> Dataset[
                 RandomReal[1, {$CellContext`n, $CellContext`m}]], 
               "testData" -> {}]], 
             MonadicContextualClassification`ClConAddToContext[], 
             MonadicContextualClassification`ClConAssignVariableNames[
             Automatic], 
             MonadicContextualClassification`ClConTakeVariableNames]], 
         "ExpectedOutput" -> 
         HoldForm[{
           "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}], 
         "ActualOutput" -> HoldForm[
           Failure[Keys, 
            Association[
            "MessageTemplate" :> MessageName[Keys, "invrl"], 
             "MessageParameters" -> {
               
               HoldForm[{0.4902398880610559, 0.9834893708915253, 
                0.7561900014000802, 0.5305399682203806, 0.7816242292631737, 
                0.46284778072559885`, 0.7122502602432275, 0.6641426044211207, 
                0.8511664629142557, 0.3791399534464446, 0.26190856278425967`, 
                0.4867101697164007}]}]]], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001286`3.2597559664201974, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0051799999999389, "Seconds"], "MemoryUsed" -> 
         Quantity[288, "Bytes"]]], 20 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 20, "TestID" -> "SplitData-1", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7, 0.1], 
              MonadicContextualClassification`ClConTakeContext]; {First[
               Total[
                Map[Dimensions, $CellContext`res]]] == 
             Length[$CellContext`data], 
             Keys[$CellContext`res] == {
              "trainingData", "testData", "validationData"}}], 
         "ExpectedOutput" -> HoldForm[{True, True}], "ActualOutput" -> 
         HoldForm[{True, True}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.005934`3.923862539812817, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.023957999999993262`, "Seconds"], "MemoryUsed" -> 
         Quantity[157568, "Bytes"]]], 21 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 21, "TestID" -> 
         "Set-and-take-training-data", "Outcome" -> "Success", "Input" -> 
         HoldForm[Part[$CellContext`data, 
             Span[1, 12]] == DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association["trainingData" -> Part[$CellContext`data, 
                 Span[1, 12]]]], 
             MonadicContextualClassification`ClConAddToContext, 
             MonadicContextualClassification`ClConTakeTrainingData] == 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association[]], 
             MonadicContextualClassification`ClConSetTrainingData[
              Part[$CellContext`data, 
               Span[1, 12]]], 
             MonadicContextualClassification`ClConTakeTrainingData]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.002169`3.486774549846187, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.008679000000029191, "Seconds"], "MemoryUsed" -> 
         Quantity[256, "Bytes"]]], 22 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
         "Set-and-take-test-data", "Outcome" -> "Success", "Input" -> 
         HoldForm[Part[$CellContext`data, 
             Span[1, 12]] == DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association["testData" -> Part[$CellContext`data, 
                 Span[1, 12]]]], 
             MonadicContextualClassification`ClConAddToContext, 
             MonadicContextualClassification`ClConTakeTestData] == 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association[]], 
             MonadicContextualClassification`ClConSetTestData[
              Part[$CellContext`data, 
               Span[1, 12]]], 
             MonadicContextualClassification`ClConTakeTestData]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.002071`3.466695096725447, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.00834900000000971, "Seconds"], "MemoryUsed" -> 
         Quantity[256, "Bytes"]]], 23 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 23, "TestID" -> 
         "Set-and-take-validation-data", "Outcome" -> "Success", "Input" -> 
         HoldForm[Part[$CellContext`data, 
             Span[1, 12]] == DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association["validationData" -> Part[$CellContext`data, 
                 Span[1, 12]]]], 
             MonadicContextualClassification`ClConAddToContext, 
             MonadicContextualClassification`ClConTakeValidationData] == 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association[]], 
             MonadicContextualClassification`ClConSetValidationData[
              Part[$CellContext`data, 
               Span[1, 12]]], 
             MonadicContextualClassification`ClConTakeValidationData]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.00219`3.4909591126721122, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.008882999999968888, "Seconds"], "MemoryUsed" -> 
         Quantity[256, "Bytes"]]], 24 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 24, "TestID" -> 
         "Partial-data-summaries-1", "Outcome" -> "MessagesFailure", "Input" -> 
         HoldForm[$CellContext`t = Map[DoubleLongRightArrow[
               MonadicContextualClassification`ClConUnit[
                Association[# -> Part[$CellContext`data, 
                   Span[1, 12]]]], 
               MonadicContextualClassification`ClConSummarizeData[
               "Echo" -> False], 
               MonadicContextualClassification`ClConTakeValue]& , {
              "trainingData", "testData", "validationData"}]; {
             Cases[$CellContext`t, 
              Blank[String], {3}], 
             MatchQ[$CellContext`t, {
               Repeated[{Blank[String] -> {
                   Repeated[
                    Blank[Column]]}}]}]}], "ExpectedOutput" -> 
         HoldForm[{{"trainingData", "testData", "validationData"}, True}], 
         "ActualOutput" -> 
         HoldForm[{{"trainingData", "testData", "validationData"}, True}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[
             MathematicaForPredictionUtilities`RecordsSummary, "igncols"]]], 
           HoldForm[
            Message[
             MessageName[
             MathematicaForPredictionUtilities`RecordsSummary, "igncols"]]], 
           HoldForm[
            Message[
             MessageName[
             MathematicaForPredictionUtilities`RecordsSummary, "igncols"]]], 
           HoldForm[
            Message[
             MessageName[General, "stop"], 
             HoldForm[
              MessageName[
              MathematicaForPredictionUtilities`RecordsSummary, 
               "igncols"]]]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.008842`4.097065508401849, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.035601999999983036`, "Seconds"], "MemoryUsed" -> 
         Quantity[-4152, "Bytes"]]], 25 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 25, "TestID" -> 
         "Assign-variable-names-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           DoubleLongRightArrow[
            MonadicContextualClassification`ClConUnit[
             Association[
             "trainingData" -> 
              MonadicContextualClassification`ClConToNormalClassifierData[
                Part[$CellContext`data, 
                 Span[1, 12]]]]], 
            MonadicContextualClassification`ClConAddToContext, 
            MonadicContextualClassification`ClConAssignVariableNames, 
            MonadicContextualClassification`ClConTakeVariableNames]], 
         "ExpectedOutput" -> HoldForm[{"1", "2", "3", "4"}], "ActualOutput" -> 
         HoldForm[{"1", "2", "3", "4"}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001683`3.376599113807818, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.006817999999952917, "Seconds"], "MemoryUsed" -> 
         Quantity[360, "Bytes"]]], 26 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 26, "TestID" -> 
         "Split-data-100-pct", "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`res = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[1]]; Dimensions[
              
              DoubleLongRightArrow[$CellContext`res, 
               MonadicContextualClassification`ClConTakeTrainingData]] == 
            Dimensions[$CellContext`data]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.003711`3.7200059521807773, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.014947000000006483`, "Seconds"], "MemoryUsed" -> 
         Quantity[-648, "Bytes"]]], 27 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 27, "TestID" -> 
         "MakeClassifier-with-empty-unit-1", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Head[
            DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[], 
             MonadicContextualClassification`ClConSetTrainingData[
              Part[$CellContext`data, 
               Span[1, 12]]], 
             MonadicContextualClassification`ClConMakeClassifier, 
             MonadicContextualClassification`ClConTakeClassifier]]], 
         "ExpectedOutput" -> HoldForm[ClassifierFunction], "ActualOutput" -> 
         HoldForm[ClassifierFunction], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.626864`5.947688327408906, "Seconds"], "CPUTimeUsed" -> 
         Quantity[1.2993230000000153`, "Seconds"], "MemoryUsed" -> 
         Quantity[205136, "Bytes"]]], 28 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 28, "TestID" -> 
         "No-rocData-after-second-MakeClassifier-1", "Outcome" -> "Success", 
         "Input" -> HoldForm[$CellContext`p1 = DoubleLongRightArrow[
              MonadicContextualClassification`ClConUnit[$CellContext`data], 
              MonadicContextualClassification`ClConSplitData[0.7], 
              MonadicContextualClassification`ClConMakeClassifier, 
              MonadicContextualClassification`ClConROCData]; $CellContext`p2 = 
            DoubleLongRightArrow[$CellContext`p1, 
              MonadicContextualClassification`ClConMakeClassifier[
              "DecisionTree"]]; MatchQ[{
              
              DoubleLongRightArrow[$CellContext`p1, 
               MonadicContextualClassification`ClConTakeROCData], 
              
              DoubleLongRightArrow[$CellContext`p2, 
               MonadicContextualClassification`ClConTakeROCData]}, {
              Blank[Association], 
              Blank[Missing]}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[1.818473`6.410221855030225, "Seconds"], "CPUTimeUsed" -> 
         Quantity[3.4954520000000002`, "Seconds"], "MemoryUsed" -> 
         Quantity[546448, "Bytes"]]]], 
    "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
      15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28}, 
    "TestsFailedIndices" -> {19, 24}, 
    "TestsFailedWrongResultsIndices" -> {19}, 
    "TestsFailedWithMessagesIndices" -> {24}, 
    "TestsFailedWithErrorsIndices" -> {}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.77928226954528*^9, {3.779282392632918*^9, 3.779282408430113*^9}, 
   3.779282491297924*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"da266611-4a85-48da-924d-053a9ccfa5ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trObj", "[", "\"\<TestsFailed\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.779282410962419*^9, 3.779282441929895*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"25b56d76-bc2d-4c56-9102-8d2739a3d9dd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TestsFailedWrongResults\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"19", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["TestResultObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
                  Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                  1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"AssignVariableNames-3\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
                  Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                  1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"AssignVariableNames-3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"n", ",", "m"}], "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "12"}], "}"}]}], ";", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"1\"", ",", "\"2\"", ",", "\"3\"", ",", "\"4\"",
                     ",", "\"5\"", ",", "\"6\"", ",", "\"7\"", ",", "\"8\"", 
                    ",", "\"9\"", ",", "\"10\"", ",", "\"11\"", ",", 
                    "\"12\""}], "}"}], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["Failure", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.4902398880610559`\\\", \\\",\\\", \\\"0.9834893708915253`\\\", \
\\\",\\\", \\\"0.7561900014000802`\\\", \\\",\\\", \
\\\"0.5305399682203806`\\\", \\\",\\\", \\\"0.7816242292631737`\\\", \
\\\",\\\", \\\"0.46284778072559885`\\\", \\\",\\\", \\\"0.7122502602432275`\\\
\", \\\",\\\", \\\"0.6641426044211207`\\\", \\\",\\\", \
\\\"0.8511664629142557`\\\", \\\",\\\", \\\"0.3791399534464446`\\\", \
\\\",\\\", \\\"0.26190856278425967`\\\", \\\",\\\", \\\"0.4867101697164007`\\\
\"}], \\\"}\\\"}]\\) is not a valid Association or a list of rules.\"", 
                    "SummaryItem"]}}, GridBoxItemSize -> {
                    "Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Keys", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.4902398880610559`\\\", \\\",\\\", \\\"0.9834893708915253`\\\", \
\\\",\\\", \\\"0.7561900014000802`\\\", \\\",\\\", \
\\\"0.5305399682203806`\\\", \\\",\\\", \\\"0.7816242292631737`\\\", \
\\\",\\\", \\\"0.46284778072559885`\\\", \\\",\\\", \\\"0.7122502602432275`\\\
\", \\\",\\\", \\\"0.6641426044211207`\\\", \\\",\\\", \
\\\"0.8511664629142557`\\\", \\\",\\\", \\\"0.3791399534464446`\\\", \
\\\",\\\", \\\"0.26190856278425967`\\\", \\\",\\\", \\\"0.4867101697164007`\\\
\"}], \\\"}\\\"}]\\) is not a valid Association or a list of rules.\"", 
                    "SummaryItem"]}}, GridBoxItemSize -> {
                    "Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Keys", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Failure[Keys, 
                    Association[
                    "MessageTemplate" :> MessageName[Keys, "invrl"], 
                    "MessageParameters" -> {
                    
                    HoldForm[{0.4902398880610559, 0.9834893708915253, 
                    0.7561900014000802, 0.5305399682203806, 
                    0.7816242292631737, 0.46284778072559885`, 
                    0.7122502602432275, 0.6641426044211207, 
                    0.8511664629142557, 0.3791399534464446, 
                    0.26190856278425967`, 0.4867101697164007}]}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Time taken: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    TemplateBox[{
                    "0.001343`3.2785910105007097", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
         "AssignVariableNames-3", "Outcome" -> "Failure", "Input" -> 
         HoldForm[{$CellContext`n, $CellContext`m} = {10, 12}; 
           DoubleLongRightArrow[
             MonadicContextualClassification`ClConUnit[
              Association["trainingData" -> Dataset[
                 RandomReal[1, {$CellContext`n, $CellContext`m}]], 
               "testData" -> {}]], 
             MonadicContextualClassification`ClConAddToContext[], 
             MonadicContextualClassification`ClConAssignVariableNames[
             Automatic], 
             MonadicContextualClassification`ClConTakeVariableNames]], 
         "ExpectedOutput" -> 
         HoldForm[{
           "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}], 
         "ActualOutput" -> HoldForm[
           Failure[Keys, 
            Association[
            "MessageTemplate" :> MessageName[Keys, "invrl"], 
             "MessageParameters" -> {
               
               HoldForm[{0.4902398880610559, 0.9834893708915253, 
                0.7561900014000802, 0.5305399682203806, 0.7816242292631737, 
                0.46284778072559885`, 0.7122502602432275, 0.6641426044211207, 
                0.8511664629142557, 0.3791399534464446, 0.26190856278425967`, 
                0.4867101697164007}]}]]], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001343`3.2785910105007097, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.005355000000008658, "Seconds"], "MemoryUsed" -> 
         Quantity[288, "Bytes"]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithMessages\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"24", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["TestResultObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "MessageFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
                  Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                  1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MessagesFailure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Partial-data-summaries-1\"", "SummaryItem"]}]}},
                   GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "MessageFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
                  Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                  1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MessagesFailure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Partial-data-summaries-1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"t", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"\"trainingData\"", ",", 
                    RowBox[{"\"t\"", "\[Ellipsis]", "\"ta\""}], ",", 
                    "\"validationData\""}], "}"}]}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\"trainingData\"", ",", "\"testData\"", ",", 
                    "\"validationData\""}], "}"}], ",", "True"}], "}"}], 
                    Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\"trainingData\"", ",", "\"testData\"", ",", 
                    "\"validationData\""}], "}"}], ",", "True"}], "}"}], 
                    Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Expected messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{"{", "}"}], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"RecordsSummary", "::", "igncols"}], 
                    "MessageName"], "]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ",", 
                    StyleBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "MessageName"]}], "]"}]}], "}"}], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Time taken: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    TemplateBox[{
                    "0.008808`4.0953923037956885", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 24, "TestID" -> 
         "Partial-data-summaries-1", "Outcome" -> "MessagesFailure", "Input" -> 
         HoldForm[$CellContext`t = Map[DoubleLongRightArrow[
               MonadicContextualClassification`ClConUnit[
                Association[# -> Part[$CellContext`data, 
                   Span[1, 12]]]], 
               MonadicContextualClassification`ClConSummarizeData[
               "Echo" -> False], 
               MonadicContextualClassification`ClConTakeValue]& , {
              "trainingData", "testData", "validationData"}]; {
             Cases[$CellContext`t, 
              Blank[String], {3}], 
             MatchQ[$CellContext`t, {
               Repeated[{Blank[String] -> {
                   Repeated[
                    Blank[Column]]}}]}]}], "ExpectedOutput" -> 
         HoldForm[{{"trainingData", "testData", "validationData"}, True}], 
         "ActualOutput" -> 
         HoldForm[{{"trainingData", "testData", "validationData"}, True}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[
             MathematicaForPredictionUtilities`RecordsSummary, "igncols"]]], 
           HoldForm[
            Message[
             MessageName[
             MathematicaForPredictionUtilities`RecordsSummary, "igncols"]]], 
           HoldForm[
            Message[
             MessageName[
             MathematicaForPredictionUtilities`RecordsSummary, "igncols"]]], 
           HoldForm[
            Message[
             MessageName[General, "stop"], 
             HoldForm[
              MessageName[
              MathematicaForPredictionUtilities`RecordsSummary, 
               "igncols"]]]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.008808`4.0953923037956885, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.035506999999995514`, "Seconds"], "MemoryUsed" -> 
         Quantity[-4152, "Bytes"]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithErrors\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.779282420291492*^9, 3.77928244250346*^9}, 
   3.7792824738810043`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"d243785c-02a8-4d85-8ca3-9cfca27a3908"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1674, 950},
WindowMargins->{{Automatic, 743}, {Automatic, 134}},
TaggingRules->{
 "SEUploaderLastUpdateCheck" -> 3.769266177218607`16.3288317966057*^9, 
  "SEUploaderVersion" -> {
   "Version" -> 130, "Changes" -> {"Fixed SE Uploader to use https"}}, 
  "SlideshowSettings" -> {"Toolbar" -> True}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (July 23, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 207, 4, 123, "Title",ExpressionUUID->"5797ce62-ac0a-4bce-a8c8-035a556d30d0"],
Cell[790, 28, 324, 7, 67, "Subtitle",ExpressionUUID->"8ceaa500-eff5-4929-8231-bf52074b76f6"],
Cell[1117, 37, 176, 6, 73, "Text",ExpressionUUID->"85fdad81-3619-4d6f-9092-877f0fae4160"],
Cell[1296, 45, 160, 3, 84, "Section",ExpressionUUID->"6c5973b0-827d-447f-94e3-90a5a04da201"],
Cell[CellGroupData[{
Cell[1481, 52, 168, 3, 65, "Section",ExpressionUUID->"a5ad6088-65f2-4330-8c33-5844258923d6"],
Cell[1652, 57, 217, 4, 44, "Text",ExpressionUUID->"79742ce9-5a1b-4153-a2d3-a248cbc6e51f"],
Cell[CellGroupData[{
Cell[1894, 65, 427, 7, 90, "Input",ExpressionUUID->"3ce6eeca-2794-4329-9fca-350431bfc9a4"],
Cell[2324, 74, 265, 4, 42, "Output",ExpressionUUID->"b04fd774-8f7f-41f2-8fae-e144bc6e8a98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2626, 83, 179, 3, 67, "Subsection",ExpressionUUID->"b4c90ed5-4f53-48b9-abcd-e735075eb75d"],
Cell[2808, 88, 199, 3, 44, "Text",ExpressionUUID->"3ea88d40-431d-4fda-a514-c1052e7017c3"],
Cell[CellGroupData[{
Cell[3032, 95, 207, 4, 56, "Subsubsection",ExpressionUUID->"2ca9c30c-342b-46eb-83f9-2debc69ed8db"],
Cell[3242, 101, 387, 8, 37, "Input",ExpressionUUID->"ee37b404-3e53-4063-ab30-910ca7d1b570",
 CellID->95604248],
Cell[3632, 111, 500, 12, 37, "Input",ExpressionUUID->"c7333c64-36a1-4c28-ad9a-0dd67e38d66e",
 CellID->1968830429],
Cell[CellGroupData[{
Cell[4157, 127, 459, 10, 37, "Input",ExpressionUUID->"66dd3585-833a-4947-b661-4238dab7a609",
 CellID->1991742940],
Cell[4619, 139, 2521, 66, 169, "Output",ExpressionUUID->"145adae3-c1e1-4396-ba21-3cf9cfc5480e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7177, 210, 562, 12, 37, "Input",ExpressionUUID->"da1bc5cf-529f-4163-bd6f-283f64974884",
 CellID->1465539932],
Cell[7742, 224, 2723, 68, 251, "Output",ExpressionUUID->"116aab91-58da-46f0-97e0-2dcfa0686f8c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10514, 298, 154, 3, 56, "Subsubsection",ExpressionUUID->"a7f9b76f-b1be-435e-bee3-15d7725e3350"],
Cell[10671, 303, 429, 8, 37, "Input",ExpressionUUID->"8ce1fc56-5c03-43a2-8c0b-0ce2c7e25e6b",
 CellID->1190802499],
Cell[11103, 313, 500, 12, 37, "Input",ExpressionUUID->"7ad86b48-6993-4e8e-902b-c2dc23db5729",
 CellID->1177888957],
Cell[CellGroupData[{
Cell[11628, 329, 347, 7, 37, "Input",ExpressionUUID->"0c35d4f9-2343-4e68-b60b-8be82ecfa5ec"],
Cell[11978, 338, 2422, 64, 197, "Output",ExpressionUUID->"cf36e3b5-a0fd-4bf8-9cde-011af35e703c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14437, 407, 654, 14, 37, "Input",ExpressionUUID->"b26fa427-3001-4632-b28b-e11a22518807",
 CellID->10562690],
Cell[15094, 423, 2631, 67, 253, "Output",ExpressionUUID->"6db58695-6fb5-42c7-9bc0-64c358897d64"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17798, 498, 150, 3, 84, "Section",ExpressionUUID->"6927ea1f-1450-46aa-a5a7-fe1878e924c0"],
Cell[CellGroupData[{
Cell[17973, 505, 294, 4, 37, "Input",ExpressionUUID->"ae2ca8d7-2cfa-4c7f-ad0b-f8f4fde1d466"],
Cell[18270, 511, 4694, 140, 195, "Output",ExpressionUUID->"9990c174-c925-47b0-aed4-9b11678627dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23001, 656, 1337, 25, 246, "Input",ExpressionUUID->"d34164e8-07c5-44ae-bb03-3fd17501129a"],
Cell[CellGroupData[{
Cell[24363, 685, 10721, 305, 364, "Echo",ExpressionUUID->"f85d0eef-db0a-4f2a-a976-517b4ce43cff"],
Cell[35087, 992, 886, 21, 32, "Echo",ExpressionUUID->"8e2ee0b3-3fae-4861-95c1-49733c35f6a8"]
}, Open  ]],
Cell[35988, 1016, 506, 10, 29, "Message",ExpressionUUID->"b760faf6-f835-4a14-945a-9944a76e402f"],
Cell[CellGroupData[{
Cell[36519, 1030, 39100, 917, 437, "Echo",ExpressionUUID->"989b245d-e670-4802-a2f7-92487fcd1a5f"],
Cell[75622, 1949, 621, 14, 32, "Echo",ExpressionUUID->"8e9f716a-4b69-41f5-9ae0-16abc663a569"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76304, 1970, 227, 4, 84, "Section",ExpressionUUID->"146eceb1-6a36-4e9d-ab69-b308751de45f"],
Cell[CellGroupData[{
Cell[76556, 1978, 211, 4, 67, "Subsection",ExpressionUUID->"70b8d654-5468-4e03-b098-43cdd36b8eae"],
Cell[76770, 1984, 661, 15, 90, "Input",ExpressionUUID->"b186fd6c-e99c-4d25-861c-1532ea8340c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77468, 2004, 288, 5, 67, "Subsection",ExpressionUUID->"8c834f86-b11d-40dc-960e-9a149918071f"],
Cell[77759, 2011, 1454, 39, 142, "Input",ExpressionUUID->"fc788505-3f76-4502-a6ba-c7343a8179c2"],
Cell[79216, 2052, 767, 22, 64, "Input",ExpressionUUID->"e65604a1-ecd0-4830-8fe9-33268bdc6928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80020, 2079, 156, 3, 67, "Subsection",ExpressionUUID->"f4974e35-eccf-4780-863f-4dfb4cee0397"],
Cell[CellGroupData[{
Cell[80201, 2086, 683, 16, 37, "Input",ExpressionUUID->"00c54a47-fc0e-461f-9f90-e62f0aaa8c01"],
Cell[80887, 2104, 1156, 29, 47, "Echo",ExpressionUUID->"eab0a997-e626-4e3a-8960-3fd3dacf8698"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82080, 2138, 177, 3, 56, "Subsubsection",ExpressionUUID->"2cdaf07e-e013-46b4-bf46-b6c6d45446a5"],
Cell[CellGroupData[{
Cell[82282, 2145, 952, 16, 142, "Input",ExpressionUUID->"8ec3618f-9717-4084-85b4-09746fd4cd37"],
Cell[CellGroupData[{
Cell[83259, 2165, 262, 8, 32, "Echo",ExpressionUUID->"e7153869-b1dc-45fd-baf7-5d8af1795049"],
Cell[83524, 2175, 1156, 29, 47, "Echo",ExpressionUUID->"835ea2e3-d38a-43ae-a1ad-85e185c1453e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84729, 2210, 804, 13, 116, "Input",ExpressionUUID->"af63b4b4-6d20-450b-90a7-b31dd14863fe"],
Cell[85536, 2225, 544, 7, 199, "Output",ExpressionUUID->"78629737-5648-411e-a528-cd74023b109e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86117, 2237, 1159, 19, 116, "Input",ExpressionUUID->"60e18c0d-b2b2-4e35-ac03-bd65869d7506"],
Cell[87279, 2258, 382, 10, 46, "Echo",ExpressionUUID->"4978b845-ef75-4145-a7d5-bce9563cc24c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87698, 2273, 1055, 17, 194, "Input",ExpressionUUID->"ae2b53db-19d9-4067-98a6-ab90db5e930b"],
Cell[CellGroupData[{
Cell[88778, 2294, 1177, 31, 47, "Echo",ExpressionUUID->"9e3bd7ab-d9a8-4811-900a-e8ba0d52a900"],
Cell[89958, 2327, 273, 8, 32, "Echo",ExpressionUUID->"6aa68664-0bbb-4694-b6a4-059b00e8169b"],
Cell[90234, 2337, 46950, 985, 437, "Echo",ExpressionUUID->"2b2b08eb-dbe8-4b84-882b-92ec3560b46a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137245, 3329, 177, 3, 56, "Subsubsection",ExpressionUUID->"13c4d7a4-be61-45eb-87c6-2e85ada7ec22"],
Cell[CellGroupData[{
Cell[137447, 3336, 1168, 19, 194, "Input",ExpressionUUID->"867fb7e0-b7f7-405f-9435-934bd0680add"],
Cell[CellGroupData[{
Cell[138640, 3359, 890, 21, 31, "Echo",ExpressionUUID->"69125831-133c-4add-a9b5-58f1c9b033ed"],
Cell[139533, 3382, 273, 8, 31, "Echo",ExpressionUUID->"eec55343-00d3-4251-a651-dd180afc0176"],
Cell[139809, 3392, 46875, 985, 435, "Echo",ExpressionUUID->"0aa93151-cf95-420d-81d1-5b4093e2f066"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186733, 4383, 428, 7, 194, "Input",ExpressionUUID->"35758552-ead0-441c-ad1b-1ee5e5804e3e"],
Cell[187164, 4392, 408, 6, 173, "Output",ExpressionUUID->"0506f65e-d0aa-4db4-b2b2-b1af924f44f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187621, 4404, 170, 3, 55, "Subsubsection",ExpressionUUID->"919f5664-6e4a-43fb-ad25-e02ed30d1f5c"],
Cell[187794, 4409, 1262, 21, 194, "Input",ExpressionUUID->"b041d839-b9a9-4717-8d8e-597d08cd0b36"],
Cell[CellGroupData[{
Cell[189081, 4434, 576, 14, 38, "Input",ExpressionUUID->"8e73420b-46f3-4ed2-91eb-675e0c5c1205"],
Cell[189660, 4450, 5072, 100, 281, "Echo",ExpressionUUID->"2de2e8ea-9e77-4e30-b364-0761f5d3fc46"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194805, 4558, 171, 3, 84, "Section",ExpressionUUID->"70868a23-e6e0-4105-aedb-db4e3f8c691d"],
Cell[CellGroupData[{
Cell[195001, 4565, 165, 3, 67, "Subsection",ExpressionUUID->"cdb95db9-2b45-4649-b55d-e04697c853a0"],
Cell[195169, 4570, 660, 15, 116, "Input",ExpressionUUID->"a0401f61-2035-4209-a345-8c033d755828"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195866, 4590, 167, 3, 67, "Subsection",ExpressionUUID->"224c3d67-3401-4c57-ab24-b56f080acfd2"],
Cell[CellGroupData[{
Cell[196058, 4597, 1047, 30, 73, "Input",ExpressionUUID->"ea1e1a79-cc88-4612-8759-4255953e5e25",
 CellID->531489935],
Cell[197108, 4629, 672, 9, 41, "Output",ExpressionUUID->"476dad8d-dbad-43a1-a9d1-7ae646037820"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197817, 4643, 285, 7, 36, "Input",ExpressionUUID->"def24cfc-577d-4b5b-a4d5-5e86a4fefb08",
 CellID->1669420558],
Cell[198105, 4652, 10964, 196, 300, "Output",ExpressionUUID->"591f37dd-0531-4824-a55f-7506814e6a67"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[209118, 4854, 164, 3, 45, "Subsection",ExpressionUUID->"695b3502-7b6c-42af-bf1b-0e12faec350f"],
Cell[CellGroupData[{
Cell[209307, 4861, 736, 17, 36, "Input",ExpressionUUID->"3c1f7d5c-bf78-47a5-b771-915b93a2c767"],
Cell[210046, 4880, 31459, 508, 78, "Output",ExpressionUUID->"5df7a8f2-358f-4554-b5bf-727c4de45b88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241542, 5393, 780, 18, 36, "Input",ExpressionUUID->"de6a930b-be4a-4784-a9d2-c17c1f9c940c"],
Cell[242325, 5413, 30792, 507, 78, "Output",ExpressionUUID->"8211e57b-841e-465b-9abe-905cfa19a985"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273154, 5925, 268, 5, 36, "Input",ExpressionUUID->"4f9885b0-7b84-408d-9485-bae3d64b99c2"],
Cell[273425, 5932, 29923, 524, 306, "Output",ExpressionUUID->"f907a45b-e4fa-40e2-bea1-0c667660d744"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[303397, 6462, 161, 3, 45, "Subsection",ExpressionUUID->"32408466-02c8-4937-9648-f3a8b84bf0ad"],
Cell[CellGroupData[{
Cell[303583, 6469, 816, 17, 36, "Input",ExpressionUUID->"1eb82c1b-206c-450c-941f-836e51bd3bdd"],
Cell[304402, 6488, 22424, 406, 78, "Output",ExpressionUUID->"7335ce06-db6e-4823-9588-c0bfb7ed430c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[326875, 6900, 159, 3, 45, "Subsection",ExpressionUUID->"431ebe36-a1bc-4a14-bfd4-3ddaa047c3a8"],
Cell[CellGroupData[{
Cell[327059, 6907, 499, 8, 63, "Input",ExpressionUUID->"86cc20e8-61d0-44f0-b03f-c36ab9de9a57"],
Cell[327561, 6917, 487, 7, 146, "Output",ExpressionUUID->"cabdfc95-5a9c-4263-9f07-c4748e438541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328085, 6929, 813, 13, 323, "Input",ExpressionUUID->"1cef7145-ad03-4f23-9026-d5da10c9dc72"],
Cell[328901, 6944, 1049, 18, 250, "Output",ExpressionUUID->"2108c410-0cb3-4a57-aeb4-6f88db66afc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329987, 6967, 562, 12, 193, "Input",ExpressionUUID->"e414cb98-07d7-4a4b-b6bd-a6ed7acab0a2"],
Cell[CellGroupData[{
Cell[330574, 6983, 216, 6, 31, "Echo",ExpressionUUID->"6840d40d-606b-4a3a-98ca-51005b801539"],
Cell[330793, 6991, 263, 8, 31, "Echo",ExpressionUUID->"7ec841a3-1d22-4dc1-8f57-0ca0e1bf2a7a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[331105, 7005, 1332, 22, 220, "Input",ExpressionUUID->"ccb64cfe-f10e-4d19-91c3-2537fc804677"],
Cell[CellGroupData[{
Cell[332462, 7031, 2329, 69, 172, "Echo",ExpressionUUID->"beee19fb-0cf9-46f5-956c-a53ec8203894"],
Cell[334794, 7102, 55347, 1021, 301, "Echo",ExpressionUUID->"89e71b6f-799a-4f92-87d4-4dbbca97b4c4"],
Cell[390144, 8125, 24499, 448, 301, "Echo",ExpressionUUID->"ee5a13b1-4559-4c4b-8bcd-1fd0929d3cc0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[414692, 8579, 1957, 29, 271, "Input",ExpressionUUID->"0dbad1da-1c5d-48bd-9834-869a83213854"],
Cell[CellGroupData[{
Cell[416674, 8612, 2407, 70, 172, "Echo",ExpressionUUID->"8cf73422-3bde-4794-babd-d4adbf068e93"],
Cell[419084, 8684, 24052, 441, 301, "Echo",ExpressionUUID->"d96a757c-a4bd-4925-b238-9d2f240315b3"],
Cell[443139, 9127, 89607, 1384, 300, "Echo",ExpressionUUID->"951147c8-101e-4396-9b8e-5f3a16a9e9e1"],
Cell[532749, 10513, 1759, 43, 87, "Echo",ExpressionUUID->"d48d457d-d9af-4977-8143-d9820588e02d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[534581, 10564, 162, 3, 83, "Section",ExpressionUUID->"7d289d3a-0f87-4063-babb-95c1d6ffb8c3"],
Cell[CellGroupData[{
Cell[534768, 10571, 155, 3, 66, "Subsection",ExpressionUUID->"07f6218a-5950-4c08-ac00-b656a4f8ec96"],
Cell[CellGroupData[{
Cell[534948, 10578, 425, 10, 36, "Input",ExpressionUUID->"c9245ea9-1b89-48ef-bd9d-432b8c13d20a"],
Cell[535376, 10590, 41008, 778, 77, "Output",ExpressionUUID->"da266611-4a85-48da-924d-053a9ccfa5ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576421, 11373, 225, 4, 36, "Input",ExpressionUUID->"25b56d76-bc2d-4c56-9102-8d2739a3d9dd"],
Cell[576649, 11379, 31078, 619, 148, "Output",ExpressionUUID->"d243785c-02a8-4d85-8ca3-9cfca27a3908"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

